/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by unplugin-vue-router. ‼️ DO NOT MODIFY THIS FILE ‼️
// It's recommended to commit this file.
// Make sure to add this file to your tsconfig.json file as an "includes" or "files" entry.

declare module 'vue-router/auto-routes' {
  import type {
    RouteRecordInfo,
    ParamValue,
    ParamValueOneOrMore,
    ParamValueZeroOrMore,
    ParamValueZeroOrOne,
  } from 'vue-router'

  /**
   * Route name map generated by unplugin-vue-router
   */
  export interface RouteNamedMap {
    '/': RouteRecordInfo<'/', '/', Record<never, never>, Record<never, never>>,
    'theme': RouteRecordInfo<'theme', '/_theme', Record<never, never>, Record<never, never>>,
    '/[...all]': RouteRecordInfo<'/[...all]', '/:all(.*)', { all: ParamValue<true> }, { all: ParamValue<false> }>,
    'admin': RouteRecordInfo<'admin', '/admin', Record<never, never>, Record<never, never>>,
    'adminContacts': RouteRecordInfo<'adminContacts', '/admin/contacts', Record<never, never>, Record<never, never>>,
    'adminContactsView': RouteRecordInfo<'adminContactsView', '/admin/contacts/:id', { id: ParamValue<true> }, { id: ParamValue<false> }, 'adminContactsViewAccount' | 'adminContactsViewCallouts' | 'adminContactsViewContribution' | 'adminContactsViewOverview'>,
    'adminContactsViewOverview': RouteRecordInfo<'adminContactsViewOverview', '/admin/contacts/:id', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    'adminContactsViewAccount': RouteRecordInfo<'adminContactsViewAccount', '/admin/contacts/:id/account', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    'adminContactsViewCallouts': RouteRecordInfo<'adminContactsViewCallouts', '/admin/contacts/:id/callouts', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    'adminContactsViewContribution': RouteRecordInfo<'adminContactsViewContribution', '/admin/contacts/:id/contribution', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    'adminContactsAdd': RouteRecordInfo<'adminContactsAdd', '/admin/contacts/add', Record<never, never>, Record<never, never>>,
    'adminContactTags': RouteRecordInfo<'adminContactTags', '/admin/contacts/tags', Record<never, never>, Record<never, never>>,
    'adminCallouts': RouteRecordInfo<'adminCallouts', '/admin/crowdnewsroom', Record<never, never>, Record<never, never>>,
    'adminCalloutEdit': RouteRecordInfo<'adminCalloutEdit', '/admin/crowdnewsroom/edit/:id', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    'adminCalloutNew': RouteRecordInfo<'adminCalloutNew', '/admin/crowdnewsroom/new', Record<never, never>, Record<never, never>>,
    'adminCalloutView': RouteRecordInfo<'adminCalloutView', '/admin/crowdnewsroom/view/:id', { id: ParamValue<true> }, { id: ParamValue<false> }, 'adminCalloutViewOverview' | 'adminCalloutViewResponsesItem' | 'adminCalloutViewResponsesTable' | 'adminCalloutViewResponsesTags'>,
    'adminCalloutViewOverview': RouteRecordInfo<'adminCalloutViewOverview', '/admin/crowdnewsroom/view/:id', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    'adminCalloutViewResponsesTable': RouteRecordInfo<'adminCalloutViewResponsesTable', '/admin/crowdnewsroom/view/:id/responses', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    'adminCalloutViewResponsesItem': RouteRecordInfo<'adminCalloutViewResponsesItem', '/admin/crowdnewsroom/view/:id/responses/:rid', { id: ParamValue<true>, rid: ParamValue<true> }, { id: ParamValue<false>, rid: ParamValue<false> }>,
    'adminCalloutViewResponsesTags': RouteRecordInfo<'adminCalloutViewResponsesTags', '/admin/crowdnewsroom/view/:id/responses/tags', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    'adminEmails': RouteRecordInfo<'adminEmails', '/admin/emails', Record<never, never>, Record<never, never>>,
    'adminEmailsAdd': RouteRecordInfo<'adminEmailsAdd', '/admin/emails/add', Record<never, never>, Record<never, never>>,
    'adminEmailsCustomEdit': RouteRecordInfo<'adminEmailsCustomEdit', '/admin/emails/custom/:id', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    'adminEmailsEdit': RouteRecordInfo<'adminEmailsEdit', '/admin/emails/edit/:id', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    'adminMembershipBuilder': RouteRecordInfo<'adminMembershipBuilder', '/admin/membership-builder', Record<never, never>, Record<never, never>, '/admin/membership-builder/email' | 'adminMembershipBuilderAccountConfirmation' | 'adminMembershipBuilderIntroMessages' | 'adminMembershipBuilderJoinForm'>,
    'adminMembershipBuilderJoinForm': RouteRecordInfo<'adminMembershipBuilderJoinForm', '/admin/membership-builder', Record<never, never>, Record<never, never>>,
    'adminMembershipBuilderAccountConfirmation': RouteRecordInfo<'adminMembershipBuilderAccountConfirmation', '/admin/membership-builder/confirmation', Record<never, never>, Record<never, never>>,
    '/admin/membership-builder/email': RouteRecordInfo<'/admin/membership-builder/email', '/admin/membership-builder/email', Record<never, never>, Record<never, never>>,
    'adminMembershipBuilderIntroMessages': RouteRecordInfo<'adminMembershipBuilderIntroMessages', '/admin/membership-builder/intro', Record<never, never>, Record<never, never>>,
    'adminNotices': RouteRecordInfo<'adminNotices', '/admin/notices', Record<never, never>, Record<never, never>>,
    'adminNoticesAdd': RouteRecordInfo<'adminNoticesAdd', '/admin/notices/add', Record<never, never>, Record<never, never>>,
    'adminNoticeEdit': RouteRecordInfo<'adminNoticeEdit', '/admin/notices/edit/:id', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    'adminNoticeView': RouteRecordInfo<'adminNoticeView', '/admin/notices/view/:id', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    'adminPayments': RouteRecordInfo<'adminPayments', '/admin/payments', Record<never, never>, Record<never, never>>,
    'adminSettings': RouteRecordInfo<'adminSettings', '/admin/settings', Record<never, never>, Record<never, never>, 'adminSettingsApikeys' | 'adminSettingsEmail' | 'adminSettingsGeneral' | 'adminSettingsTheme'>,
    'adminSettingsGeneral': RouteRecordInfo<'adminSettingsGeneral', '/admin/settings', Record<never, never>, Record<never, never>>,
    'adminSettingsApikeys': RouteRecordInfo<'adminSettingsApikeys', '/admin/settings/api-keys', Record<never, never>, Record<never, never>>,
    'adminSettingsEmail': RouteRecordInfo<'adminSettingsEmail', '/admin/settings/email', Record<never, never>, Record<never, never>>,
    'adminSettingsTheme': RouteRecordInfo<'adminSettingsTheme', '/admin/settings/theme', Record<never, never>, Record<never, never>>,
    'adminUiToolkit': RouteRecordInfo<'adminUiToolkit', '/admin/ui-toolkit', Record<never, never>, Record<never, never>>,
    'forgot-password': RouteRecordInfo<'forgot-password', '/auth/forgot-password', Record<never, never>, Record<never, never>>,
    'login': RouteRecordInfo<'login', '/auth/login', Record<never, never>, Record<never, never>>,
    'lost-device': RouteRecordInfo<'lost-device', '/auth/lost-device', Record<never, never>, Record<never, never>>,
    'reset_device': RouteRecordInfo<'reset_device', '/auth/reset-device/:id', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    'reset_password': RouteRecordInfo<'reset_password', '/auth/reset-password/:id', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    'set_password': RouteRecordInfo<'set_password', '/auth/set-password/:id', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    'callouts': RouteRecordInfo<'callouts', '/crowdnewsroom', Record<never, never>, Record<never, never>>,
    '/crowdnewsroom/[id]': RouteRecordInfo<'/crowdnewsroom/[id]', '/crowdnewsroom/:id', { id: ParamValue<true> }, { id: ParamValue<false> }, 'callout' | 'calloutGallery' | 'calloutMap' | 'calloutRespond' | 'calloutThanks'>,
    'callout': RouteRecordInfo<'callout', '/crowdnewsroom/:id', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    'calloutGallery': RouteRecordInfo<'calloutGallery', '/crowdnewsroom/:id/gallery', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    'calloutMap': RouteRecordInfo<'calloutMap', '/crowdnewsroom/:id/map', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    'calloutRespond': RouteRecordInfo<'calloutRespond', '/crowdnewsroom/:id/respond', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    'calloutThanks': RouteRecordInfo<'calloutThanks', '/crowdnewsroom/:id/thanks', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    'join': RouteRecordInfo<'join', '/join', Record<never, never>, Record<never, never>>,
    'joinComplete': RouteRecordInfo<'joinComplete', '/join/complete', Record<never, never>, Record<never, never>>,
    'confirmEmail': RouteRecordInfo<'confirmEmail', '/join/confirm-email', Record<never, never>, Record<never, never>>,
    'confirmEmailLoading': RouteRecordInfo<'confirmEmailLoading', '/join/confirm-email/:id', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    'joinFailed': RouteRecordInfo<'joinFailed', '/join/failed', Record<never, never>, Record<never, never>>,
    'joinSetup': RouteRecordInfo<'joinSetup', '/join/setup', Record<never, never>, Record<never, never>>,
    'joinSurvey': RouteRecordInfo<'joinSurvey', '/join/survey', Record<never, never>, Record<never, never>>,
    'profile': RouteRecordInfo<'profile', '/profile', Record<never, never>, Record<never, never>>,
    'profileAccount': RouteRecordInfo<'profileAccount', '/profile/account', Record<never, never>, Record<never, never>>,
    'profileContribution': RouteRecordInfo<'profileContribution', '/profile/contribution', Record<never, never>, Record<never, never>>,
    'profileContributionCancel': RouteRecordInfo<'profileContributionCancel', '/profile/contribution/cancel', Record<never, never>, Record<never, never>>,
    'profileContributionComplete': RouteRecordInfo<'profileContributionComplete', '/profile/contribution/complete', Record<never, never>, Record<never, never>>,
    'profileContributionPaymentMethodComplete': RouteRecordInfo<'profileContributionPaymentMethodComplete', '/profile/contribution/payment-method/complete', Record<never, never>, Record<never, never>>,
  }

  /**
   * Route file to route info map by unplugin-vue-router.
   * Used by the volar plugin to automatically type useRoute()
   *
   * Each key is a file path relative to the project root with 2 properties:
   * - routes: union of route names of the possible routes when in this page (passed to useRoute<...>())
   * - views: names of nested views (can be passed to <RouterView name="...">)
   *
   * @internal
   */
  export interface _RouteFileInfoMap {
    'src/pages/index.vue': {
      routes: '/'
      views: never
    }
    'src/pages/_theme.vue': {
      routes: 'theme'
      views: never
    }
    'src/pages/[...all].vue': {
      routes: '/[...all]'
      views: never
    }
    'src/pages/admin/index.vue': {
      routes: 'admin'
      views: never
    }
    'src/pages/admin/contacts/index.vue': {
      routes: 'adminContacts'
      views: never
    }
    'src/pages/admin/contacts/[id].vue': {
      routes: 'adminContactsView' | 'adminContactsViewOverview' | 'adminContactsViewAccount' | 'adminContactsViewCallouts' | 'adminContactsViewContribution'
      views: 'default'
    }
    'src/pages/admin/contacts/[id]/index.vue': {
      routes: 'adminContactsViewOverview'
      views: never
    }
    'src/pages/admin/contacts/[id]/account.vue': {
      routes: 'adminContactsViewAccount'
      views: never
    }
    'src/pages/admin/contacts/[id]/callouts.vue': {
      routes: 'adminContactsViewCallouts'
      views: never
    }
    'src/pages/admin/contacts/[id]/contribution.vue': {
      routes: 'adminContactsViewContribution'
      views: never
    }
    'src/pages/admin/contacts/add.vue': {
      routes: 'adminContactsAdd'
      views: never
    }
    'src/pages/admin/contacts/tags.vue': {
      routes: 'adminContactTags'
      views: never
    }
    'src/pages/admin/crowdnewsroom/index.vue': {
      routes: 'adminCallouts'
      views: never
    }
    'src/pages/admin/crowdnewsroom/edit/[id].vue': {
      routes: 'adminCalloutEdit'
      views: never
    }
    'src/pages/admin/crowdnewsroom/new.vue': {
      routes: 'adminCalloutNew'
      views: never
    }
    'src/pages/admin/crowdnewsroom/view/[id].vue': {
      routes: 'adminCalloutView' | 'adminCalloutViewOverview' | 'adminCalloutViewResponsesTable' | 'adminCalloutViewResponsesItem' | '/admin/crowdnewsroom/view/[id]/responses' | 'adminCalloutViewResponsesTags'
      views: 'default'
    }
    'src/pages/admin/crowdnewsroom/view/[id]/index.vue': {
      routes: 'adminCalloutViewOverview'
      views: never
    }
    'src/pages/admin/crowdnewsroom/view/[id]/responses/index.vue': {
      routes: 'adminCalloutViewResponsesTable'
      views: never
    }
    'src/pages/admin/crowdnewsroom/view/[id]/responses/[rid].vue': {
      routes: 'adminCalloutViewResponsesItem'
      views: never
    }
    'src/pages/admin/crowdnewsroom/view/[id]/responses/tags.vue': {
      routes: 'adminCalloutViewResponsesTags'
      views: never
    }
    'src/pages/admin/emails/index.vue': {
      routes: 'adminEmails'
      views: never
    }
    'src/pages/admin/emails/add.vue': {
      routes: 'adminEmailsAdd'
      views: never
    }
    'src/pages/admin/emails/custom/[id].vue': {
      routes: 'adminEmailsCustomEdit'
      views: never
    }
    'src/pages/admin/emails/edit/[id].vue': {
      routes: 'adminEmailsEdit'
      views: never
    }
    'src/pages/admin/membership-builder.vue': {
      routes: 'adminMembershipBuilder' | 'adminMembershipBuilderJoinForm' | 'adminMembershipBuilderAccountConfirmation' | '/admin/membership-builder/email' | 'adminMembershipBuilderIntroMessages'
      views: 'default'
    }
    'src/pages/admin/membership-builder/index.vue': {
      routes: 'adminMembershipBuilderJoinForm'
      views: never
    }
    'src/pages/admin/membership-builder/confirmation.vue': {
      routes: 'adminMembershipBuilderAccountConfirmation'
      views: never
    }
    'src/pages/admin/membership-builder/email.vue': {
      routes: '/admin/membership-builder/email'
      views: never
    }
    'src/pages/admin/membership-builder/intro.vue': {
      routes: 'adminMembershipBuilderIntroMessages'
      views: never
    }
    'src/pages/admin/notices/index.vue': {
      routes: 'adminNotices'
      views: never
    }
    'src/pages/admin/notices/add.vue': {
      routes: 'adminNoticesAdd'
      views: never
    }
    'src/pages/admin/notices/edit/[id].vue': {
      routes: 'adminNoticeEdit'
      views: never
    }
    'src/pages/admin/notices/view/[id].vue': {
      routes: 'adminNoticeView'
      views: never
    }
    'src/pages/admin/payments/index.vue': {
      routes: 'adminPayments'
      views: never
    }
    'src/pages/admin/settings.vue': {
      routes: 'adminSettings' | 'adminSettingsGeneral' | 'adminSettingsApikeys' | 'adminSettingsEmail' | 'adminSettingsTheme'
      views: 'default'
    }
    'src/pages/admin/settings/index.vue': {
      routes: 'adminSettingsGeneral'
      views: never
    }
    'src/pages/admin/settings/api-keys.vue': {
      routes: 'adminSettingsApikeys'
      views: never
    }
    'src/pages/admin/settings/email.vue': {
      routes: 'adminSettingsEmail'
      views: never
    }
    'src/pages/admin/settings/theme.vue': {
      routes: 'adminSettingsTheme'
      views: never
    }
    'src/pages/admin/ui-toolkit/index.vue': {
      routes: 'adminUiToolkit'
      views: never
    }
    'src/pages/auth/forgot-password.vue': {
      routes: 'forgot-password'
      views: never
    }
    'src/pages/auth/login.vue': {
      routes: 'login'
      views: never
    }
    'src/pages/auth/lost-device.vue': {
      routes: 'lost-device'
      views: never
    }
    'src/pages/auth/reset-device/[id].vue': {
      routes: 'reset_device'
      views: never
    }
    'src/pages/auth/reset-password/[id].vue': {
      routes: 'reset_password'
      views: never
    }
    'src/pages/auth/set-password/[id].vue': {
      routes: 'set_password'
      views: never
    }
    'src/pages/crowdnewsroom/index.vue': {
      routes: 'callouts'
      views: never
    }
    'src/pages/crowdnewsroom/[id].vue': {
      routes: '/crowdnewsroom/[id]' | 'callout' | 'calloutGallery' | 'calloutMap' | 'calloutRespond' | 'calloutThanks'
      views: 'default'
    }
    'src/pages/crowdnewsroom/[id]/index.vue': {
      routes: 'callout'
      views: never
    }
    'src/pages/crowdnewsroom/[id]/gallery.vue': {
      routes: 'calloutGallery'
      views: never
    }
    'src/pages/crowdnewsroom/[id]/map.vue': {
      routes: 'calloutMap'
      views: never
    }
    'src/pages/crowdnewsroom/[id]/respond.vue': {
      routes: 'calloutRespond'
      views: never
    }
    'src/pages/crowdnewsroom/[id]/thanks.vue': {
      routes: 'calloutThanks'
      views: never
    }
    'src/pages/join/index.vue': {
      routes: 'join'
      views: never
    }
    'src/pages/join/complete.vue': {
      routes: 'joinComplete'
      views: never
    }
    'src/pages/join/confirm-email/index.vue': {
      routes: 'confirmEmail'
      views: never
    }
    'src/pages/join/confirm-email/[id].vue': {
      routes: 'confirmEmailLoading'
      views: never
    }
    'src/pages/join/failed.vue': {
      routes: 'joinFailed'
      views: never
    }
    'src/pages/join/setup.vue': {
      routes: 'joinSetup'
      views: never
    }
    'src/pages/join/survey.vue': {
      routes: 'joinSurvey'
      views: never
    }
    'src/pages/profile/index.vue': {
      routes: 'profile'
      views: never
    }
    'src/pages/profile/account.vue': {
      routes: 'profileAccount'
      views: never
    }
    'src/pages/profile/contribution/index.vue': {
      routes: 'profileContribution'
      views: never
    }
    'src/pages/profile/contribution/cancel.vue': {
      routes: 'profileContributionCancel'
      views: never
    }
    'src/pages/profile/contribution/complete.vue': {
      routes: 'profileContributionComplete'
      views: never
    }
    'src/pages/profile/contribution/payment-method/complete.vue': {
      routes: 'profileContributionPaymentMethodComplete'
      views: never
    }
  }

  /**
   * Get a union of possible route names in a certain route component file.
   * Used by the volar plugin to automatically type useRoute()
   *
   * @internal
   */
  export type _RouteNamesForFilePath<FilePath extends string> =
    _RouteFileInfoMap extends Record<FilePath, infer Info>
      ? Info['routes']
      : keyof RouteNamedMap
}
