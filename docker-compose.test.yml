services:
  db:
    extends:
      file: docker-compose.yml
      service: db
    ports:
      - ${DB_PORT}:5432

  mail:
    extends:
      file: docker-compose.yml
      service: mail
    ports:
      - ${MAIL_PORT}:1080

  app:
    extends:
      file: docker-compose.yml
      service: app
    env_file:
      - .env
      - .env.test

  api_app:
    extends:
      file: docker-compose.yml
      service: api_app
    env_file:
      - .env
      - .env.test

  webhook_app:
    extends:
      file: docker-compose.yml
      service: webhook_app
    env_file:
      - .env
      - .env.test

  cron_app:
    extends:
      file: docker-compose.yml
      service: cron_app
    env_file:
      - .env
      - .env.test

  minio:
    extends:
      file: docker-compose.yml
      service: minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}

  # MinIO client to initialize buckets
  minio_client:
    extends:
      file: docker-compose.yml
      service: minio_client
    entrypoint: >
      /bin/sh -c "
      mc alias set myminio http://minio:9000 ${MINIO_ROOT_USER:-minioadmin} ${MINIO_ROOT_PASSWORD:-minioadmin};
      mc mb --ignore-existing myminio/${MINIO_TEST_BUCKET:-uploads-test};
      mc policy set download myminio/${MINIO_TEST_BUCKET:-uploads-test};
      exit 0;
      "

  img_upload_app:
    extends:
      file: docker-compose.yml
      service: img_upload_app
    environment:
      URL: ${PICTSHARE_URL:-${BEABEE_AUDIENCE}/uploads/}
      # Image compression settings
      PNG_COMPRESSION: ${PICTSHARE_PNG_COMPRESSION:-6}
      JPEG_COMPRESSION: ${PICTSHARE_JPEG_COMPRESSION:-85}
      # S3 storage configuration for testing
      S3_BUCKET: ${MINIO_TEST_BUCKET:-uploads-test}
      S3_ACCESS_KEY: ${MINIO_ROOT_USER:-minioadmin}
      S3_SECRET_KEY: ${MINIO_ROOT_PASSWORD:-minioadmin}
      S3_ENDPOINT: ${MINIO_ENDPOINT:-http://minio:9000}
      S3_REGION: ${MINIO_REGION:-us-east-1}
    depends_on:
      minio:
        condition: service_healthy
      minio_client:
        condition: service_completed_successfully

  frontend:
    extends:
      file: docker-compose.yml
      service: frontend
    env_file:
      - ./apps/frontend/.env
      - ./apps/frontend/.env.test

  app_router:
    extends:
      file: docker-compose.yml
      service: app_router
    environment:
      LEGACY_APP_COOKIE_DOMAIN: ${BEABEE_COOKIE_DOMAIN}
      TRUSTED_ORIGINS: ${BEABEE_TRUSTEDORIGINS-}
    ports:
      - ${ROUTER_PORT}:80

  migration:
    extends:
      file: docker-compose.yml
      service: migration
    env_file:
      - .env
      - .env.test

  stripe_cli:
    extends:
      file: docker-compose.yml
      service: stripe_cli
    environment:
      - STRIPE_API_KEY=${BEABEE_STRIPE_SECRETKEY}
      - STRIPE_DEVICE_NAME=beabee-test-docker-container

volumes:
  db_data:
  upload_data:
  minio_data:
