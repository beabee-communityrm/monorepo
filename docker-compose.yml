# version: "3.4"

# Backend app and legacy frontend
x-base-app: &base-app
  build: &base-app-build
    context: .
    dockerfile: ./packages/docker/base.dockerfile
  volumes:
    - ./apps/backend/built:/opt/apps/backend/built
    - ./apps/webhooks/dist:/opt/apps/webhooks/dist
    - ./packages/common/dist:/opt/packages/common/dist
    - ./packages/core/dist:/opt/packages/core/dist
    # Allow migrations to be written out from the container
    - ./packages/core/src/migrations:/opt/packages/core/src/migrations
  env_file:
    - .env
  environment:
    NODE_ENV: development

x-service-app: &service-app
  <<: *base-app
  depends_on:
    # Wait for the database to be ready
    db:
      condition: service_healthy
    # Wait for the migration to be completed
    migration:
      condition: service_completed_successfully

services:
  db:
    image: postgres:13.9
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: membership_system
      POSTGRES_PASSWORD: membership_system
      POSTGRES_DB: membership_system
    # Healthcheck for the database
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U membership_system"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - 6543:5432

  mail:
    image: maildev/maildev:2.1.0
    ports:
      - ${MAIL_PORT}:1080

  # Legacy app
  app:
    <<: *service-app
    build:
      <<: *base-app-build
      target: legacy_app

  # API app
  api_app:
    <<: *service-app
    build:
      <<: *base-app-build
      target: api_app

  # Webhook app
  webhook_app:
    <<: *service-app
    build:
      <<: *base-app-build
      target: webhook_app

  # Cron app
  cron_app:
    <<: *service-app
    build:
      <<: *base-app-build
      target: cron_app

  # Image upload handler
  img_upload_app:
    image: beabee/pictshare:v0.2.0
    environment:
      URL: ${BEABEE_AUDIENCE}/uploads/
    volumes:
      - upload_data:/var/www/data

  # The new frontend
  frontend:
    build:
      context: .
      dockerfile: ./apps/frontend/Dockerfile
      args:
        - VERSION=${VERSION}
        - REVISION=${REVISION}
    env_file:
      - ./apps/frontend/.env

  # Application router
  app_router:
    build:
      context: .
      dockerfile: ./apps/router/Dockerfile
    environment:
      LEGACY_APP_COOKIE_DOMAIN: ${BEABEE_COOKIE_DOMAIN}
      TRUSTED_ORIGINS: ${BEABEE_TRUSTEDORIGINS-}
    ports:
      - 3002:80

  # Database migration service
  migration:
    <<: *base-app
    build:
      <<: *base-app-build
      target: api_app
    command: 'npm run typeorm migration:run'
    # Wait for the database to be ready
    depends_on:
      db:
        condition: service_healthy

volumes:
  db_data:
  upload_data:
