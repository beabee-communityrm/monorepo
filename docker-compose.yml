# version: "3.4"

# Backend app and legacy frontend
x-base-app: &base-app
  build:
    context: .
    dockerfile: ./apps/backend/Dockerfile
    target: app
  volumes:
    - ./apps/backend/built:/opt/apps/backend/built
    - ./packages/common/dist:/opt/packages/common/dist
    - ./packages/core/dist:/opt/packages/core/dist
    - ./packages/core/src/migrations:/opt/packages/core/src/migrations
  env_file:
    - .env
  environment:
    NODE_ENV: development

services:
  db:
    image: postgres:13.9
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: membership_system
      POSTGRES_PASSWORD: membership_system
      POSTGRES_DB: membership_system
    ports:
      - 6543:5432 # To connect to the database from the host machine

  mail:
    image: maildev/maildev:2.1.0
    ports:
      - ${MAIL_PORT}:1080

  app: *base-app

  api_app:
    <<: *base-app
    command: node ./built/api/app.js
    ports:
      - 3004:3000

  webhook_app:
    <<: *base-app
    command: node ./built/webhooks/app.js

  img_upload_app:
    image: beabee/pictshare:v0.1.1
    environment:
      URL: ${BEABEE_AUDIENCE}/uploads/
      CONTENTCONTROLLERS: IMAGE,TEXT
    init: true
    volumes:
      - upload_data:/var/www/data

  cron:
    <<: *base-app
    user: root
    command: "crond -f -d 7"
    init: true

  # The new frontend
  frontend:
    build:
      context: .
      dockerfile: ./apps/frontend/Dockerfile
    env_file:
      - ./apps/frontend/.env
    environment:
      # API Access Options:
      # ┌─────────────────────────────┬───────────────────────────────────────────┐
      # | Environment                 │ URL                                       │
      # ├─────────────────────────────┼───────────────────────────────────────────┤
      # │ Via Docker Router           │ http://localhost:3002/api/1.0/            │
      # │ Direct API Access           │ http://localhost:3004/1.0/                │
      # │ Production (Same router)    │ /api/1.0/                                 │
      # └─────────────────────────────┴───────────────────────────────────────────┘
      # Note: In Docker, we override the API base URL to make sure the frontend
      #       accesses the API via the router, mirroring production.
      API_BASE_URL: http://localhost:3002/api/1.0/ 

  # Router for the new frontend
  app_router:
    build:
      context: .
      dockerfile: ./apps/router/Dockerfile
    environment:
      LEGACY_APP_URL: http://router
      LEGACY_APP_COOKIE_DOMAIN: ${BEABEE_COOKIE_DOMAIN}
      FRONTEND_APP_URL: http://frontend
      TRUSTED_ORIGINS: ${BEABEE_TRUSTEDORIGINS-}
    volumes:
      - ./apps/router/15-trusted-origins.envsh:/docker-entrypoint.d/15-trusted-origins.envsh
      - ./apps/router/sec_headers:/etc/nginx/sec_headers
      - ./apps/router/nginx.conf:/etc/nginx/templates/default.conf.template
      - ./apps/router/.well-known:/usr/share/nginx/html/.well-known
    ports:
      - 3002:80

  # Router for legacy app
  router:
    build:
      context: .
      dockerfile: ./apps/backend/Dockerfile
      target: router
    volumes:
      - ./apps/backend/built/static:/opt/built/static:ro
    ports:
      - ${MAIN_PORT}:80

volumes:
  db_data:
  upload_data:
