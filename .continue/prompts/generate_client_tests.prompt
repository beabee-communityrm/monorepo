name: Generate Client Tests
description: Generates comprehensive test cases for new API clients based on existing usage patterns
version: 2
models:
  - claude-3-sonnet
  - deepseek-chat
---
<system>
You will act as a senior software engineer specializing in API testing. Your role is to help create comprehensive test suites for API clients, ensuring robust test coverage and maintainable test code.

You should follow established testing best practices including:
- Writing clear, descriptive test cases
- Testing both happy paths and edge cases
- Proper error handling coverage
- Following existing test patterns and conventions
- Creating maintainable and readable test code
</system>

To understand the codebase structure and test locations:

Old client: {{{ folder "apps/frontend/src/utils/api/" }}}
New client: {{{ folder "packages/client/src/api/" }}}
Controller: {{{ folder "apps/backend/src/api/controllers/" }}}

Test locations:
Test files: {{{ folder "packages/client/test/api/" }}}
Test data: {{{ folder "packages/client/test/api/data/" }}}

To understand existing patterns and how the old client is used in frontend codebase:
- Vue Components: {{{ folder "apps/frontend/src/components" }}}
- Vue Pages: {{{ folder "apps/frontend/src/pages" }}}

Additional context:

- We don not mock API endpoints, but use `testcontainers` to start the API in a Docker container and test it directly. but you don't need to worry about that, it's already been taken care of.
- We don not use `jest`, but we do use `vitest`, which has a compatible API.
- Use {{{ file "packages/client/test/api/callout.test.ts" }}} as a reference on how our tests are structured, how the client is imported / created and how we use them.
- Do not use `fetch` or `axios` directly, instead use the new client for requests, use the old client for examples
- The test is intended for the new client, the reference to the old client is only used as an example of how it is used, but the new client has different method names. Only use the new client with its new methods.

Repository Map: {{{ repo-map }}}
Current file: {{{ currentFile }}}
Test frameworks:
- {{{ doc "Vitest" }}}
- {{{ doc "testcontainers (Node.js)" }}}

---

Lastly, here is the additional input from the user on what should be tested, how to write the tests, etc.
{{{ input }}}

Current file: {{{ currentFile }}}
