/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/addons/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Return a list of add-ons. */
    get: operations["addons_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/addons/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Returns information about add-on information. */
    get: operations["addons_retrieve"];
    /** @description Edit full information about add-on. */
    put: operations["addons_update"];
    post?: never;
    /** @description Delete add-on. */
    delete: operations["addons_destroy"];
    options?: never;
    head?: never;
    /** @description Edit partial information about add-on. */
    patch: operations["addons_partial_update"];
    trace?: never;
  };
  "/categories/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description List available categories. */
    get: operations["categories_list"];
    put?: never;
    /** @description Category API. */
    post: operations["categories_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/categories/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Category API. */
    get: operations["categories_retrieve"];
    /** @description Edit full information about category. */
    put: operations["categories_update"];
    post?: never;
    /** @description Delete category. */
    delete: operations["categories_destroy"];
    options?: never;
    head?: never;
    /** @description Category API. */
    patch: operations["categories_partial_update"];
    trace?: never;
  };
  "/categories/{id}/statistics/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Return statistics for a category. */
    get: operations["categories_statistics_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/changes/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Return a list of translation changes. */
    get: operations["changes_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/changes/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Return information about a translation change. */
    get: operations["changes_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/component-lists/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Return a list of component lists. */
    get: operations["component_lists_list"];
    put?: never;
    /** @description Create a new component list. */
    post: operations["component_lists_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/component-lists/{slug}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Return information about component list. */
    get: operations["component_lists_retrieve"];
    /** @description Change the component list parameters. */
    put: operations["component_lists_update"];
    post?: never;
    /** @description Delete the component list. */
    delete: operations["component_lists_destroy"];
    options?: never;
    head?: never;
    /** @description Change the component list parameters. */
    patch: operations["component_lists_partial_update"];
    trace?: never;
  };
  "/component-lists/{slug}/components/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Component lists API. */
    get: operations["component_lists_components_retrieve"];
    put?: never;
    /** @description Associate component with a component list. */
    post: operations["component_lists_components_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/component-lists/{slug}/components/{component_slug}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    /** @description Disassociate a component from the component list. */
    delete: operations["component_lists_components_destroy"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/components/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Return a list of translation components. */
    get: operations["components_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/components/{project__slug}/{slug}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Return information about translation component. */
    get: operations["components_retrieve"];
    /** @description Edit a component by a PUT request. */
    put: operations["components_update"];
    post?: never;
    /** @description Delete a component. */
    delete: operations["components_destroy"];
    options?: never;
    head?: never;
    /** @description Edit a component by a PATCH request. */
    patch: operations["components_partial_update"];
    trace?: never;
  };
  "/components/{project__slug}/{slug}/addons/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Translation components API. */
    post: operations["components_addons_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/components/{project__slug}/{slug}/changes/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Return a list of component changes. */
    get: operations["components_changes_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/components/{project__slug}/{slug}/credits/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Translation components API. */
    get: operations["components_credits_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/components/{project__slug}/{slug}/file/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Translation components API. */
    get: operations["components_file_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/components/{project__slug}/{slug}/links/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Return projects linked with a component. */
    get: operations["components_links_retrieve"];
    put?: never;
    /** @description Associate project with a component. */
    post: operations["components_links_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/components/{project__slug}/{slug}/links/{project_slug}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    /** @description Remove association of a project with a component. */
    delete: operations["components_links_destroy"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/components/{project__slug}/{slug}/lock/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Return component lock status. */
    get: operations["components_lock_retrieve"];
    put?: never;
    /** @description Sets component lock status. */
    post: operations["components_lock_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/components/{project__slug}/{slug}/monolingual_base/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Download base file for monolingual translations. */
    get: operations["components_monolingual_base_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/components/{project__slug}/{slug}/new_template/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Download template file for new translations. */
    get: operations["components_new_template_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/components/{project__slug}/{slug}/repository/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Return information about VCS repository status. */
    get: operations["components_repository_retrieve"];
    put?: never;
    /** @description Perform given operation on the VCS repository. */
    post: operations["components_repository_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/components/{project__slug}/{slug}/screenshots/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Return a list of component screenshots. */
    get: operations["components_screenshots_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/components/{project__slug}/{slug}/statistics/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Return paginated statistics for all translations within component. */
    get: operations["components_statistics_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/components/{project__slug}/{slug}/translations/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Return a list of translation objects in the given component. */
    get: operations["components_translations_retrieve"];
    put?: never;
    /** @description Create a new translation in the given component. */
    post: operations["components_translations_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/groups/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Groups API. */
    get: operations["groups_list"];
    put?: never;
    /** @description Create a new group. */
    post: operations["groups_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/groups/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Return information about a group. */
    get: operations["groups_retrieve"];
    /** @description Change the group parameters. */
    put: operations["groups_update"];
    post?: never;
    /** @description Delete the group. */
    delete: operations["groups_destroy"];
    options?: never;
    head?: never;
    /** @description Change the group parameters. */
    patch: operations["groups_partial_update"];
    trace?: never;
  };
  "/groups/{id}/admins/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Make user a group admin. */
    post: operations["groups_admins_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/groups/{id}/admins/{user_pk}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    /** @description Delete a user from group admins. */
    delete: operations["groups_admins_destroy"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/groups/{id}/componentlists/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Associate componentlists with a group. */
    post: operations["groups_componentlists_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/groups/{id}/componentlists/{component_list_id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    /** @description Delete a componentlist from a group. */
    delete: operations["groups_componentlists_destroy"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/groups/{id}/components/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Associate components with a group. */
    post: operations["groups_components_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/groups/{id}/components/{component_id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    /** @description Delete a component from a group. */
    delete: operations["groups_components_destroy"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/groups/{id}/languages/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Associate languages with a group. */
    post: operations["groups_languages_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/groups/{id}/languages/{language_code}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    /** @description Delete a language from a group. */
    delete: operations["groups_languages_destroy"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/groups/{id}/projects/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Associate projects with a group. */
    post: operations["groups_projects_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/groups/{id}/projects/{project_id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    /** @description Delete a project from a group. */
    delete: operations["groups_projects_destroy"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/groups/{id}/roles/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Associate roles with a group. */
    post: operations["groups_roles_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/groups/{id}/roles/{role_id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    /** @description Delete a role from a group. */
    delete: operations["groups_roles_destroy"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/languages/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Return a list of all languages the user has access to. */
    get: operations["languages_list"];
    put?: never;
    /** @description Create a new language. */
    post: operations["languages_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/languages/{code}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Return information about a language. */
    get: operations["languages_retrieve"];
    /** @description Change the language parameters. */
    put: operations["languages_update"];
    post?: never;
    /** @description Delete the language. */
    delete: operations["languages_destroy"];
    options?: never;
    head?: never;
    /** @description Change the language parameters. */
    patch: operations["languages_partial_update"];
    trace?: never;
  };
  "/languages/{code}/statistics/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Return statistics for a language. */
    get: operations["languages_statistics_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/memory/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Return a list of memory results. */
    get: operations["memory_list"];
    put?: never;
    /** @description Memory API. */
    post: operations["memory_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/memory/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Memory API. */
    get: operations["memory_retrieve"];
    /** @description Memory API. */
    put: operations["memory_update"];
    post?: never;
    /** @description Delete a memory object. */
    delete: operations["memory_destroy"];
    options?: never;
    head?: never;
    /** @description Memory API. */
    patch: operations["memory_partial_update"];
    trace?: never;
  };
  "/metrics/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Return server metrics. */
    get: operations["metrics_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/projects/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Return a list of all projects. */
    get: operations["projects_list"];
    put?: never;
    /** @description Create a new project. */
    post: operations["projects_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/projects/{slug}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Return information about a project. */
    get: operations["projects_retrieve"];
    /** @description Edit a project by a PUT request. */
    put: operations["projects_update"];
    post?: never;
    /** @description Delete a project. */
    delete: operations["projects_destroy"];
    options?: never;
    head?: never;
    /** @description Edit a project by a PATCH request. */
    patch: operations["projects_partial_update"];
    trace?: never;
  };
  "/projects/{slug}/addons/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Translation projects API. */
    post: operations["projects_addons_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/projects/{slug}/categories/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Return categories for a project. */
    get: operations["projects_categories_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/projects/{slug}/changes/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Return a list of project changes. */
    get: operations["projects_changes_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/projects/{slug}/components/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Return a list of translation components in the given project. */
    get: operations["projects_components_retrieve"];
    put?: never;
    /** @description Create translation components in the given project. */
    post: operations["projects_components_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/projects/{slug}/credits/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Return contributor credits for a project. */
    get: operations["projects_credits_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/projects/{slug}/file/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Translation projects API. */
    get: operations["projects_file_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/projects/{slug}/labels/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Return labels for a project. */
    get: operations["projects_labels_retrieve"];
    put?: never;
    /** @description Create a label for a project. */
    post: operations["projects_labels_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/projects/{slug}/languages/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Return paginated statistics for all languages within a project. */
    get: operations["projects_languages_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/projects/{slug}/machinery_settings/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description List machinery settings for a project. */
    get: operations["projects_machinery_settings_retrieve"];
    /** @description Replace configuration for all services. */
    put: operations["projects_machinery_settings_update"];
    /** @description Install a new machinery service. */
    post: operations["projects_machinery_settings_create"];
    delete?: never;
    options?: never;
    head?: never;
    /** @description Partially update a single service. Leave configuration blank to remove the service. */
    patch: operations["projects_machinery_settings_partial_update"];
    trace?: never;
  };
  "/projects/{slug}/repository/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Return information about VCS repository status. */
    get: operations["projects_repository_retrieve"];
    put?: never;
    /** @description Perform given operation on the VCS repository. */
    post: operations["projects_repository_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/projects/{slug}/statistics/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Return statistics for a project. */
    get: operations["projects_statistics_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/roles/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Return a list of all roles associated with the user. */
    get: operations["roles_list"];
    put?: never;
    /** @description Create a new role. */
    post: operations["roles_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/roles/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Return information about a role. */
    get: operations["roles_retrieve"];
    /** @description Change the role parameters. */
    put: operations["roles_update"];
    post?: never;
    /** @description Delete a role. */
    delete: operations["roles_destroy"];
    options?: never;
    head?: never;
    /** @description Change the role parameters. */
    patch: operations["roles_partial_update"];
    trace?: never;
  };
  "/screenshots/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Return a list of screenshot string information. */
    get: operations["screenshots_list"];
    put?: never;
    /** @description Create a new screenshot. */
    post: operations["screenshots_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/screenshots/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Return information about screenshot information. */
    get: operations["screenshots_retrieve"];
    /** @description Edit full information about screenshot. */
    put: operations["screenshots_update"];
    post?: never;
    /** @description Delete screenshot. */
    delete: operations["screenshots_destroy"];
    options?: never;
    head?: never;
    /** @description Edit partial information about screenshot. */
    patch: operations["screenshots_partial_update"];
    trace?: never;
  };
  "/screenshots/{id}/file/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Download the screenshot image. */
    get: operations["screenshots_file_retrieve"];
    /** @description Screenshots API. */
    put: operations["screenshots_file_update"];
    /** @description Replace screenshot image. */
    post: operations["screenshots_file_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/screenshots/{id}/units/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Associate source string with screenshot. */
    post: operations["screenshots_units_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/screenshots/{id}/units/{unit_id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    /** @description Remove source string association with screenshot. */
    delete: operations["screenshots_units_destroy"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/search/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Return site-wide search results as a list. */
    get: operations["search_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/tasks/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Return information about a task */
    get: operations["tasks_retrieve"];
    put?: never;
    post?: never;
    delete: operations["tasks_destroy"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/translations/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Return a list of translations. */
    get: operations["translations_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/translations/{component__project__slug}/{component__slug}/{language__code}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Return information about a translation. */
    get: operations["translations_retrieve"];
    put?: never;
    post?: never;
    /** @description Delete a translation. */
    delete: operations["translations_destroy"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/translations/{component__project__slug}/{component__slug}/{language__code}/autotranslate/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Trigger automatic translation. */
    post: operations["translations_autotranslate_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/translations/{component__project__slug}/{component__slug}/{language__code}/changes/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Return a list of translation changes. */
    get: operations["translations_changes_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/translations/{component__project__slug}/{component__slug}/{language__code}/file/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Translation components API. */
    get: operations["translations_file_retrieve"];
    /** @description Translation components API. */
    put: operations["translations_file_update"];
    /** @description Upload new file with translations. */
    post: operations["translations_file_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/translations/{component__project__slug}/{component__slug}/{language__code}/repository/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Return information about VCS repository status. */
    get: operations["translations_repository_retrieve"];
    put?: never;
    /** @description Perform given operation on the VCS repository. */
    post: operations["translations_repository_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/translations/{component__project__slug}/{component__slug}/{language__code}/statistics/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Return detailed translation statistics. */
    get: operations["translations_statistics_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/translations/{component__project__slug}/{component__slug}/{language__code}/units/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Return a list of translation units. */
    get: operations["translations_units_retrieve"];
    put?: never;
    /** @description Add a new unit. */
    post: operations["translations_units_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/units/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Return a list of translation units. */
    get: operations["units_list"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/units/{id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Return information about translation unit. */
    get: operations["units_retrieve"];
    /** @description Perform full update on translation unit. */
    put: operations["units_update"];
    post?: never;
    /** @description Delete a translation unit. */
    delete: operations["units_destroy"];
    options?: never;
    head?: never;
    /** @description Perform partial update on translation unit. */
    patch: operations["units_partial_update"];
    trace?: never;
  };
  "/units/{id}/comments/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Add a comment to the unit. */
    post: operations["units_comments_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/units/{id}/translations/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Units API. */
    get: operations["units_translations_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/users/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Users API. */
    get: operations["users_list"];
    put?: never;
    /** @description Create a new user. */
    post: operations["users_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/users/{username}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Return information about users. */
    get: operations["users_retrieve"];
    /** @description Change the user parameters. */
    put: operations["users_update"];
    post?: never;
    /** @description Delete all user information and mark the user inactive. */
    delete: operations["users_destroy"];
    options?: never;
    head?: never;
    /** @description Change the user parameters. */
    patch: operations["users_partial_update"];
    trace?: never;
  };
  "/users/{username}/groups/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** @description Associate groups with a user. */
    post: operations["users_groups_create"];
    /** @description Remove a user from a group. */
    delete: operations["users_groups_destroy"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/users/{username}/notifications/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description List subscriptions of a user. */
    get: operations["users_notifications_list"];
    put?: never;
    /** @description Associate subscriptions with a user. */
    post: operations["users_notifications_create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/users/{username}/notifications/{subscription_id}/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description Get a subscription associated with a user. */
    get: operations["users_notifications_retrieve"];
    /** @description Edit a subscription associated with a user. */
    put: operations["users_notifications_update"];
    post?: never;
    /** @description Delete a subscription associated with a user. */
    delete: operations["users_notifications_destroy"];
    options?: never;
    head?: never;
    /** @description Edit a subscription associated with a user. */
    patch: operations["users_notifications_partial_update"];
    trace?: never;
  };
  "/users/{username}/statistics/": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** @description List statistics of a user. */
    get: operations["users_statistics_retrieve"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export interface webhooks {
  AddonWebhook: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /**
     * A Webhook event for an addon
     * @description Pushes events to a notification URL.
     */
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: {
        content: {
          "application/json": {
            /**
             * Change ID
             * @description Numerical ID of change
             */
            change_id: number;
            /**
             * Change Action
             * @description Verbose name of the change, see Change actions source code for possible values
             */
            action: string;
            /**
             * Timestamp
             * Format: date-time
             * @description ISO formatted timestamp
             */
            timestamp: string;
            /**
             * Target
             * @description New value of the change (eg. new translation of the string)
             */
            target?: string | unknown[];
            /**
             * Old Value
             * @description Old value of the change (eg. previous translation of the string)
             */
            old?: string | unknown[];
            /**
             * Source
             * @description Source string
             */
            source?: string | unknown[];
            /**
             * URL
             * @description Absolute URL to view the related object
             */
            url?: string;
            /**
             * Author
             * @description Author username (this can be different from user for example when accepting suggestions)
             */
            author?: string;
            /** Acting username */
            user?: string;
            /** Project slug */
            project?: string;
            /** Component slug */
            component?: string;
            /** Translation Language Code */
            translation?: string;
          };
        };
      };
      responses: {
        /** @description No response body */
        "2XX": {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export interface components {
  schemas: {
    /**
     * @description * `0` - Resource updated
     *     * `1` - Translation completed
     *     * `2` - Translation changed
     *     * `3` - Comment added
     *     * `4` - Suggestion added
     *     * `5` - Translation added
     *     * `6` - Automatically translated
     *     * `7` - Suggestion accepted
     *     * `8` - Translation reverted
     *     * `9` - Translation uploaded
     *     * `13` - Source string added
     *     * `14` - Component locked
     *     * `15` - Component unlocked
     *     * `17` - Changes committed
     *     * `18` - Changes pushed
     *     * `19` - Repository reset
     *     * `20` - Repository merged
     *     * `21` - Repository rebased
     *     * `22` - Repository merge failed
     *     * `23` - Repository rebase failed
     *     * `24` - Parsing failed
     *     * `25` - Translation removed
     *     * `26` - Suggestion removed
     *     * `27` - Translation replaced
     *     * `28` - Repository push failed
     *     * `29` - Suggestion removed during cleanup
     *     * `30` - Source string changed
     *     * `31` - String added
     *     * `32` - Bulk status changed
     *     * `33` - Visibility changed
     *     * `34` - User added
     *     * `35` - User removed
     *     * `36` - Translation approved
     *     * `37` - Marked for edit
     *     * `38` - Component removed
     *     * `39` - Project removed
     *     * `41` - Project renamed
     *     * `42` - Component renamed
     *     * `43` - Moved component
     *     * `45` - Contributor joined
     *     * `46` - Announcement posted
     *     * `47` - Alert triggered
     *     * `48` - Language added
     *     * `49` - Language requested
     *     * `50` - Project created
     *     * `51` - Component created
     *     * `52` - User invited
     *     * `53` - Repository notification received
     *     * `54` - Translation replaced file by upload
     *     * `55` - License changed
     *     * `56` - Contributor license agreement changed
     *     * `57` - Screenshot added
     *     * `58` - Screenshot uploaded
     *     * `59` - String updated in the repository
     *     * `60` - Add-on installed
     *     * `61` - Add-on configuration changed
     *     * `62` - Add-on uninstalled
     *     * `63` - String removed
     *     * `64` - Comment removed
     *     * `65` - Comment resolved
     *     * `66` - Explanation updated
     *     * `67` - Category removed
     *     * `68` - Category renamed
     *     * `69` - Category moved
     *     * `70` - Saving string failed
     *     * `71` - String added in the repository
     *     * `72` - String updated in the upload
     *     * `73` - String added in the upload
     *     * `74` - Translation updated by source upload
     *     * `75` - Component translation completed
     *     * `76` - Applied enforced check
     *     * `77` - Propagated change
     *     * `78` - File uploaded
     *     * `79` - Extra flags updated
     * @enum {integer}
     */
    ActionEnum:
      | 0
      | 1
      | 2
      | 3
      | 4
      | 5
      | 6
      | 7
      | 8
      | 9
      | 13
      | 14
      | 15
      | 17
      | 18
      | 19
      | 20
      | 21
      | 22
      | 23
      | 24
      | 25
      | 26
      | 27
      | 28
      | 29
      | 30
      | 31
      | 32
      | 33
      | 34
      | 35
      | 36
      | 37
      | 38
      | 39
      | 41
      | 42
      | 43
      | 45
      | 46
      | 47
      | 48
      | 49
      | 50
      | 51
      | 52
      | 53
      | 54
      | 55
      | 56
      | 57
      | 58
      | 59
      | 60
      | 61
      | 62
      | 63
      | 64
      | 65
      | 66
      | 67
      | 68
      | 69
      | 70
      | 71
      | 72
      | 73
      | 74
      | 75
      | 76
      | 77
      | 78
      | 79;
    Addon: {
      /** Format: uri */
      readonly component: string;
      /** Format: uri */
      readonly project: string;
      name: string;
      readonly id: number;
      configuration?: unknown;
      /** Format: uri */
      readonly url: string;
    };
    AddonsDestroyErrorResponse400: components["schemas"]["ParseErrorResponse"];
    AddonsListErrorResponse400: components["schemas"]["ParseErrorResponse"];
    AddonsPartialUpdateConfigurationErrorComponent: {
      /**
       * @description * `configuration` - configuration (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "configuration";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    AddonsPartialUpdateError:
      | components["schemas"]["AddonsPartialUpdateNonFieldErrorsErrorComponent"]
      | components["schemas"]["AddonsPartialUpdateNameErrorComponent"]
      | components["schemas"]["AddonsPartialUpdateConfigurationErrorComponent"];
    AddonsPartialUpdateErrorResponse400:
      | components["schemas"]["AddonsPartialUpdateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    AddonsPartialUpdateNameErrorComponent: {
      /**
       * @description * `name` - name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    AddonsPartialUpdateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    AddonsPartialUpdateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["AddonsPartialUpdateError"][];
    };
    AddonsRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    AddonsUpdateConfigurationErrorComponent: {
      /**
       * @description * `configuration` - configuration (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "configuration";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    AddonsUpdateError:
      | components["schemas"]["AddonsUpdateNonFieldErrorsErrorComponent"]
      | components["schemas"]["AddonsUpdateNameErrorComponent"]
      | components["schemas"]["AddonsUpdateConfigurationErrorComponent"];
    AddonsUpdateErrorResponse400:
      | components["schemas"]["AddonsUpdateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    AddonsUpdateNameErrorComponent: {
      /**
       * @description * `name` - name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    AddonsUpdateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    AddonsUpdateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["AddonsUpdateError"][];
    };
    AutoComponentList: {
      /**
       * Project regular expression
       * @description Regular expression which is used to match project slug.
       */
      project_match?: string;
      /**
       * Component regular expression
       * @description Regular expression which is used to match component slug.
       */
      component_match?: string;
    };
    BasicUser: {
      readonly id: number;
      full_name: string;
      /** @description Username may only contain letters, numbers or the following characters: @ . + - _ */
      username: string;
    };
    /** @enum {unknown} */
    BlankEnum: "";
    CategoriesCreateCategoryErrorComponent: {
      /**
       * @description * `category` - category (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "category";
      /**
       * @description * `does_not_exist` - does_not_exist
       *     * `incorrect_match` - incorrect_match
       *     * `incorrect_type` - incorrect_type
       *     * `no_match` - no_match
       *     * `null` - null
       *     * `required` - required
       * @enum {string}
       */
      code:
        | "does_not_exist"
        | "incorrect_match"
        | "incorrect_type"
        | "no_match"
        | "null"
        | "required";
      detail: string;
    };
    CategoriesCreateError:
      | components["schemas"]["CategoriesCreateNonFieldErrorsErrorComponent"]
      | components["schemas"]["CategoriesCreateNameErrorComponent"]
      | components["schemas"]["CategoriesCreateSlugErrorComponent"]
      | components["schemas"]["CategoriesCreateProjectErrorComponent"]
      | components["schemas"]["CategoriesCreateCategoryErrorComponent"];
    CategoriesCreateErrorResponse400:
      | components["schemas"]["CategoriesCreateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    CategoriesCreateNameErrorComponent: {
      /**
       * @description * `name` - name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    CategoriesCreateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       *     * `unique` - unique
       * @enum {string}
       */
      code: "invalid" | "null" | "unique";
      detail: string;
    };
    CategoriesCreateProjectErrorComponent: {
      /**
       * @description * `project` - project (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "project";
      /**
       * @description * `does_not_exist` - does_not_exist
       *     * `incorrect_match` - incorrect_match
       *     * `incorrect_type` - incorrect_type
       *     * `no_match` - no_match
       *     * `null` - null
       *     * `required` - required
       * @enum {string}
       */
      code:
        | "does_not_exist"
        | "incorrect_match"
        | "incorrect_type"
        | "no_match"
        | "null"
        | "required";
      detail: string;
    };
    CategoriesCreateSlugErrorComponent: {
      /**
       * @description * `slug` - slug (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "slug";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    CategoriesCreateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["CategoriesCreateError"][];
    };
    CategoriesDestroyErrorResponse400: components["schemas"]["ParseErrorResponse"];
    CategoriesListErrorResponse400: components["schemas"]["ParseErrorResponse"];
    CategoriesPartialUpdateCategoryErrorComponent: {
      /**
       * @description * `category` - category (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "category";
      /**
       * @description * `does_not_exist` - does_not_exist
       *     * `incorrect_match` - incorrect_match
       *     * `incorrect_type` - incorrect_type
       *     * `no_match` - no_match
       *     * `null` - null
       *     * `required` - required
       * @enum {string}
       */
      code:
        | "does_not_exist"
        | "incorrect_match"
        | "incorrect_type"
        | "no_match"
        | "null"
        | "required";
      detail: string;
    };
    CategoriesPartialUpdateError:
      | components["schemas"]["CategoriesPartialUpdateNonFieldErrorsErrorComponent"]
      | components["schemas"]["CategoriesPartialUpdateNameErrorComponent"]
      | components["schemas"]["CategoriesPartialUpdateSlugErrorComponent"]
      | components["schemas"]["CategoriesPartialUpdateProjectErrorComponent"]
      | components["schemas"]["CategoriesPartialUpdateCategoryErrorComponent"];
    CategoriesPartialUpdateErrorResponse400:
      | components["schemas"]["CategoriesPartialUpdateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    CategoriesPartialUpdateNameErrorComponent: {
      /**
       * @description * `name` - name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    CategoriesPartialUpdateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       *     * `unique` - unique
       * @enum {string}
       */
      code: "invalid" | "null" | "unique";
      detail: string;
    };
    CategoriesPartialUpdateProjectErrorComponent: {
      /**
       * @description * `project` - project (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "project";
      /**
       * @description * `does_not_exist` - does_not_exist
       *     * `incorrect_match` - incorrect_match
       *     * `incorrect_type` - incorrect_type
       *     * `no_match` - no_match
       *     * `null` - null
       *     * `required` - required
       * @enum {string}
       */
      code:
        | "does_not_exist"
        | "incorrect_match"
        | "incorrect_type"
        | "no_match"
        | "null"
        | "required";
      detail: string;
    };
    CategoriesPartialUpdateSlugErrorComponent: {
      /**
       * @description * `slug` - slug (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "slug";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    CategoriesPartialUpdateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["CategoriesPartialUpdateError"][];
    };
    CategoriesRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    CategoriesStatisticsRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    CategoriesUpdateCategoryErrorComponent: {
      /**
       * @description * `category` - category (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "category";
      /**
       * @description * `does_not_exist` - does_not_exist
       *     * `incorrect_match` - incorrect_match
       *     * `incorrect_type` - incorrect_type
       *     * `no_match` - no_match
       *     * `null` - null
       *     * `required` - required
       * @enum {string}
       */
      code:
        | "does_not_exist"
        | "incorrect_match"
        | "incorrect_type"
        | "no_match"
        | "null"
        | "required";
      detail: string;
    };
    CategoriesUpdateError:
      | components["schemas"]["CategoriesUpdateNonFieldErrorsErrorComponent"]
      | components["schemas"]["CategoriesUpdateNameErrorComponent"]
      | components["schemas"]["CategoriesUpdateSlugErrorComponent"]
      | components["schemas"]["CategoriesUpdateProjectErrorComponent"]
      | components["schemas"]["CategoriesUpdateCategoryErrorComponent"];
    CategoriesUpdateErrorResponse400:
      | components["schemas"]["CategoriesUpdateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    CategoriesUpdateNameErrorComponent: {
      /**
       * @description * `name` - name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    CategoriesUpdateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       *     * `unique` - unique
       * @enum {string}
       */
      code: "invalid" | "null" | "unique";
      detail: string;
    };
    CategoriesUpdateProjectErrorComponent: {
      /**
       * @description * `project` - project (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "project";
      /**
       * @description * `does_not_exist` - does_not_exist
       *     * `incorrect_match` - incorrect_match
       *     * `incorrect_type` - incorrect_type
       *     * `no_match` - no_match
       *     * `null` - null
       *     * `required` - required
       * @enum {string}
       */
      code:
        | "does_not_exist"
        | "incorrect_match"
        | "incorrect_type"
        | "no_match"
        | "null"
        | "required";
      detail: string;
    };
    CategoriesUpdateSlugErrorComponent: {
      /**
       * @description * `slug` - slug (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "slug";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    CategoriesUpdateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["CategoriesUpdateError"][];
    };
    Category: {
      readonly id: number;
      /**
       * Category name
       * @description Display name
       */
      name: string;
      /**
       * URL slug
       * @description Name used in URLs and filenames.
       */
      slug: string;
      /** Format: uri */
      project: string;
      /** Format: uri */
      category?: string;
      /** Format: uri */
      readonly url: string;
      /** Format: uri */
      readonly statistics_url: string;
    };
    Change: {
      /** Format: uri */
      readonly unit: string;
      /** Format: uri */
      readonly component: string;
      /** Format: uri */
      readonly translation: string;
      /** Format: uri */
      readonly user: string;
      /** Format: uri */
      readonly author: string;
      /** Format: date-time */
      readonly timestamp: string;
      action?: components["schemas"]["ActionEnum"];
      target?: string;
      old?: string;
      details?: unknown;
      readonly id: number;
      readonly action_name: string;
      /** Format: uri */
      readonly url: string;
    };
    ChangesListActionErrorComponent: {
      /**
       * @description * `action` - action (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "action";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `invalid_list` - invalid_list
       * @enum {string}
       */
      code: "invalid_choice" | "invalid_list";
      detail: string;
    };
    ChangesListError:
      | components["schemas"]["ChangesListActionErrorComponent"]
      | components["schemas"]["ChangesListUserErrorComponent"]
      | components["schemas"]["ChangesListTimestampErrorComponent"];
    ChangesListErrorResponse400:
      | components["schemas"]["ChangesListValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    ChangesListTimestampErrorComponent: {
      /**
       * @description * `timestamp` - timestamp (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "timestamp";
      /**
       * @description * `invalid` - invalid
       * @enum {string}
       */
      code: "invalid";
      detail: string;
    };
    ChangesListUserErrorComponent: {
      /**
       * @description * `user` - user (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "user";
      /**
       * @description * `null_characters_not_allowed` - null_characters_not_allowed
       * @enum {string}
       */
      code: "null_characters_not_allowed";
      detail: string;
    };
    ChangesListValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["ChangesListError"][];
    };
    ChangesRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    /**
     * @description * `client_error` - Client Error
     * @enum {string}
     */
    ClientErrorEnum: "client_error";
    /**
     * @description * `navy` - Navy
     *     * `blue` - Blue
     *     * `aqua` - Aqua
     *     * `teal` - Teal
     *     * `olive` - Olive
     *     * `green` - Green
     *     * `lime` - Lime
     *     * `yellow` - Yellow
     *     * `orange` - Orange
     *     * `red` - Red
     *     * `maroon` - Maroon
     *     * `fuchsia` - Fuchsia
     *     * `purple` - Purple
     *     * `black` - Black
     *     * `gray` - Gray
     *     * `silver` - Silver
     * @enum {string}
     */
    ColorEnum:
      | "navy"
      | "blue"
      | "aqua"
      | "teal"
      | "olive"
      | "green"
      | "lime"
      | "yellow"
      | "orange"
      | "red"
      | "maroon"
      | "fuchsia"
      | "purple"
      | "black"
      | "gray"
      | "silver";
    Comment: {
      /** @description Is your comment specific to this translation, or generic for all of them?
       *
       *     * `report` - report
       *     * `global` - global
       *     * `translation` - translation */
      scope: components["schemas"]["CommentScopeEnum"];
      /**
       * New comment
       * @description You can use Markdown and mention users by @username.
       */
      comment: string;
    };
    /**
     * @description * `report` - report
     *     * `global` - global
     *     * `translation` - translation
     * @enum {string}
     */
    CommentScopeEnum: "report" | "global" | "translation";
    Component: {
      /**
       * Component name
       * @description Display name
       */
      name: string;
      /**
       * URL slug
       * @description Name used in URLs and filenames.
       */
      slug: string;
      readonly id: number;
      source_language?: components["schemas"]["Language"];
      readonly project: components["schemas"]["Project"];
      /**
       * Version control system
       * @description Version control system to use to access your repository containing translations. You can also choose additional integration with third party providers to submit merge requests.
       *
       *     * `gerrit` - Gerrit
       *     * `git` - Git
       *     * `git-force-push` - Git with force push
       *     * `github` - GitHub pull request
       *     * `gitlab` - GitLab merge request
       *     * `local` - No remote repository
       *     * `mercurial` - Mercurial
       *     * `subversion` - Subversion
       */
      vcs?: components["schemas"]["VcsEnum"];
      repo: string;
      /**
       * Exported repository URL
       * @description URL of repository where users can fetch changes from Weblate
       */
      git_export?: string;
      branch?: string;
      push_branch?: string;
      /**
       * File mask
       * @description Path of files to translate relative to repository root, use * instead of language code, for example: po/*.po or locale/*\/LC_MESSAGES/django.po.
       */
      filemask: string;
      /**
       * Screenshot file mask
       * @description Path of screenshots relative to repository root, for example: docs/screenshots/*.png.
       */
      screenshot_filemask?: string;
      /**
       * Monolingual base language file
       * @description Filename of translation base file, containing all strings and their source for monolingual translations.
       */
      template?: string;
      /**
       * Edit base file
       * @description Whether users will be able to edit the base file for monolingual translations.
       */
      edit_template?: boolean;
      /**
       * Intermediate language file
       * @description Filename of intermediate translation file. In most cases this is a translation file provided by developers and is used when creating actual source strings.
       */
      intermediate?: string;
      /**
       * Template for new translations
       * @description Filename of file used for creating new translations. For gettext choose .pot file.
       */
      new_base?: string;
      file_format: components["schemas"]["FileFormatEnum"];
      /** Translation license */
      license?: components["schemas"]["LicenseEnum"];
      readonly license_url: string;
      /**
       * Contributor license agreement
       * @description Contributor license agreement which needs to be approved before a user can translate this component.
       */
      agreement?: string;
      readonly web_url: string;
      /** Format: uri */
      readonly url: string;
      /** Format: uri */
      readonly repository_url: string;
      /** Format: uri */
      readonly translations_url: string;
      /** Format: uri */
      readonly statistics_url: string;
      /** Format: uri */
      readonly lock_url: string;
      /** Format: uri */
      readonly links_url: string;
      /** Format: uri */
      readonly changes_list_url: string;
      /** Format: uri */
      readonly task_url: string | null;
      /** Format: uri */
      readonly credits_url: string;
      /**
       * Adding new translation
       * @description How to handle requests for creating new translations.
       *
       *     * `contact` - Contact maintainers
       *     * `url` - Point to translation instructions URL
       *     * `add` - Create new language file
       *     * `none` - Disable adding new translations
       */
      new_lang?: components["schemas"]["NewLangEnum"];
      /** @description Customize language code used to generate the filename for translations created by Weblate.
       *
       *     * `` - Default based on the file format
       *     * `posix` - POSIX style using underscore as a separator
       *     * `posix_lowercase` - POSIX style using underscore as a separator, lower cased
       *     * `bcp` - BCP style using hyphen as a separator
       *     * `posix_long` - POSIX style using underscore as a separator, including country code
       *     * `posix_long_lowercase` - POSIX style using underscore as a separator, including country code, lower cased
       *     * `bcp_long` - BCP style using hyphen as a separator, including country code
       *     * `bcp_legacy` - BCP style using hyphen as a separator, legacy language codes
       *     * `bcp_lower` - BCP style using hyphen as a separator, lower cased
       *     * `android` - Android style
       *     * `appstore` - Apple App Store metadata style
       *     * `googleplay` - Google Play metadata style
       *     * `linux` - Linux style
       *     * `linux_lowercase` - Linux style, lower cased */
      language_code_style?:
        | components["schemas"]["LanguageCodeStyleEnum"]
        | components["schemas"]["BlankEnum"];
      push?: string;
      /**
       * Translation flags
       * @description Additional comma-separated flags to influence Weblate behavior.
       */
      check_flags?: string;
      /** @description Components with higher priority are offered first to translators.
       *
       *     * `60` - Very high
       *     * `80` - High
       *     * `100` - Medium
       *     * `120` - Low
       *     * `140` - Very low */
      priority?: components["schemas"]["PriorityEnum"];
      enforced_checks?: unknown;
      /**
       * Restricted component
       * @description Restrict access to the component to only those explicitly given permission.
       */
      restricted?: boolean;
      /**
       * Repository browser
       * @description Link to repository browser, use {{branch}} for branch, {{filename}} and {{line}} as filename and line placeholders. You might want to strip leading directory by using {{filename|parentdir}}.
       */
      repoweb?: string;
      /**
       * Source string bug reporting address
       * Format: email
       * @description E-mail address for reports on errors in source strings. Leave empty for no e-mails.
       */
      report_source_bugs?: string;
      /** @description Define whether Weblate should merge the upstream repository or rebase changes onto it.
       *
       *     * `merge` - Merge
       *     * `rebase` - Rebase
       *     * `merge_noff` - Merge without fast-forward */
      merge_style?: components["schemas"]["MergeStyleEnum"];
      /**
       * Commit message when translating
       * @description You can use template language for various info, please consult the documentation for more details.
       */
      commit_message?: string;
      /**
       * Commit message when adding translation
       * @description You can use template language for various info, please consult the documentation for more details.
       */
      add_message?: string;
      /**
       * Commit message when removing translation
       * @description You can use template language for various info, please consult the documentation for more details.
       */
      delete_message?: string;
      /**
       * Commit message when merging translation
       * @description You can use template language for various info, please consult the documentation for more details.
       */
      merge_message?: string;
      /**
       * Commit message when add-on makes a change
       * @description You can use template language for various info, please consult the documentation for more details.
       */
      addon_message?: string;
      /**
       * Merge request message
       * @description You can use template language for various info, please consult the documentation for more details.
       */
      pull_message?: string;
      /** @description Whether translation updates in other components will cause automatic translation in this one */
      allow_translation_propagation?: boolean;
      /**
       * Manage strings
       * @description Enables adding and removing strings straight from Weblate. If your strings are extracted from the source code or managed externally you probably want to keep it disabled.
       */
      manage_units?: boolean;
      /**
       * Turn on suggestions
       * @description Whether to allow translation suggestions at all.
       */
      enable_suggestions?: boolean;
      /** @description Users can only vote for suggestions and can’t make direct translations. */
      suggestion_voting?: boolean;
      /**
       * Automatically accept suggestions
       * @description Automatically accept suggestions with this number of votes, use 0 to turn it off.
       */
      suggestion_autoaccept?: number;
      /** @description Whether the repository should be pushed upstream on every commit. */
      push_on_commit?: boolean;
      /**
       * Age of changes to commit
       * @description Time in hours after which any pending changes will be committed to the VCS.
       */
      commit_pending_age?: number;
      /**
       * Lock on error
       * @description Whether the component should be locked on repository errors.
       */
      auto_lock_error?: boolean;
      /**
       * Language filter
       * @description Regular expression used to filter translation files when scanning for file mask.
       */
      language_regex?: string;
      /** @description Regular expression used to filter keys. This is only available for monolingual formats. */
      key_filter?: string;
      /** @description Additional language to show together with the source language while translating. This setting is inherited from the project if left empty. */
      secondary_language?: number | null;
      /**
       * Variants regular expression
       * @description Regular expression used to determine variants of a string.
       */
      variant_regex?: string;
      /** Format: uri */
      zipfile?: string;
      /** Format: uri */
      docfile?: string;
      readonly addons: string[];
      /** Use as a glossary */
      is_glossary?: boolean;
      glossary_color?: components["schemas"]["ColorEnum"];
      disable_autoshare?: boolean;
      /** Format: uri */
      category?: string | null;
      /** Format: uri */
      readonly linked_component: string;
      readonly locked: boolean;
    };
    ComponentList: {
      /**
       * Component list name
       * @description Display name
       */
      name: string;
      /**
       * URL slug
       * @description Name used in URLs and filenames.
       */
      slug: string;
      readonly id: number;
      /**
       * Show on dashboard
       * @description When enabled this component list will be shown as a tab on the dashboard
       */
      show_dashboard?: boolean;
      readonly components: string[];
      readonly auto_assign: components["schemas"]["AutoComponentList"][];
      /** Format: uri */
      readonly url: string;
    };
    ComponentListsComponentsCreateError:
      | components["schemas"]["ComponentListsComponentsCreateNonFieldErrorsErrorComponent"]
      | components["schemas"]["ComponentListsComponentsCreateNameErrorComponent"]
      | components["schemas"]["ComponentListsComponentsCreateSlugErrorComponent"]
      | components["schemas"]["ComponentListsComponentsCreateShowDashboardErrorComponent"];
    ComponentListsComponentsCreateErrorResponse400:
      | components["schemas"]["ComponentListsComponentsCreateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    ComponentListsComponentsCreateNameErrorComponent: {
      /**
       * @description * `name` - name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       *     * `unique` - unique
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed"
        | "unique";
      detail: string;
    };
    ComponentListsComponentsCreateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentListsComponentsCreateShowDashboardErrorComponent: {
      /**
       * @description * `show_dashboard` - show_dashboard (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "show_dashboard";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentListsComponentsCreateSlugErrorComponent: {
      /**
       * @description * `slug` - slug (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "slug";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       *     * `unique` - unique
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed"
        | "unique";
      detail: string;
    };
    ComponentListsComponentsCreateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["ComponentListsComponentsCreateError"][];
    };
    ComponentListsComponentsDestroyErrorResponse400: components["schemas"]["ParseErrorResponse"];
    ComponentListsComponentsRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    ComponentListsCreateError:
      | components["schemas"]["ComponentListsCreateNonFieldErrorsErrorComponent"]
      | components["schemas"]["ComponentListsCreateNameErrorComponent"]
      | components["schemas"]["ComponentListsCreateSlugErrorComponent"]
      | components["schemas"]["ComponentListsCreateShowDashboardErrorComponent"];
    ComponentListsCreateErrorResponse400:
      | components["schemas"]["ComponentListsCreateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    ComponentListsCreateNameErrorComponent: {
      /**
       * @description * `name` - name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       *     * `unique` - unique
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed"
        | "unique";
      detail: string;
    };
    ComponentListsCreateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentListsCreateShowDashboardErrorComponent: {
      /**
       * @description * `show_dashboard` - show_dashboard (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "show_dashboard";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentListsCreateSlugErrorComponent: {
      /**
       * @description * `slug` - slug (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "slug";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       *     * `unique` - unique
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed"
        | "unique";
      detail: string;
    };
    ComponentListsCreateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["ComponentListsCreateError"][];
    };
    ComponentListsDestroyErrorResponse400: components["schemas"]["ParseErrorResponse"];
    ComponentListsListErrorResponse400: components["schemas"]["ParseErrorResponse"];
    ComponentListsPartialUpdateError:
      | components["schemas"]["ComponentListsPartialUpdateNonFieldErrorsErrorComponent"]
      | components["schemas"]["ComponentListsPartialUpdateNameErrorComponent"]
      | components["schemas"]["ComponentListsPartialUpdateSlugErrorComponent"]
      | components["schemas"]["ComponentListsPartialUpdateShowDashboardErrorComponent"];
    ComponentListsPartialUpdateErrorResponse400:
      | components["schemas"]["ComponentListsPartialUpdateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    ComponentListsPartialUpdateNameErrorComponent: {
      /**
       * @description * `name` - name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       *     * `unique` - unique
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed"
        | "unique";
      detail: string;
    };
    ComponentListsPartialUpdateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentListsPartialUpdateShowDashboardErrorComponent: {
      /**
       * @description * `show_dashboard` - show_dashboard (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "show_dashboard";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentListsPartialUpdateSlugErrorComponent: {
      /**
       * @description * `slug` - slug (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "slug";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       *     * `unique` - unique
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed"
        | "unique";
      detail: string;
    };
    ComponentListsPartialUpdateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["ComponentListsPartialUpdateError"][];
    };
    ComponentListsRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    ComponentListsUpdateError:
      | components["schemas"]["ComponentListsUpdateNonFieldErrorsErrorComponent"]
      | components["schemas"]["ComponentListsUpdateNameErrorComponent"]
      | components["schemas"]["ComponentListsUpdateSlugErrorComponent"]
      | components["schemas"]["ComponentListsUpdateShowDashboardErrorComponent"];
    ComponentListsUpdateErrorResponse400:
      | components["schemas"]["ComponentListsUpdateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    ComponentListsUpdateNameErrorComponent: {
      /**
       * @description * `name` - name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       *     * `unique` - unique
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed"
        | "unique";
      detail: string;
    };
    ComponentListsUpdateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentListsUpdateShowDashboardErrorComponent: {
      /**
       * @description * `show_dashboard` - show_dashboard (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "show_dashboard";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentListsUpdateSlugErrorComponent: {
      /**
       * @description * `slug` - slug (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "slug";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       *     * `unique` - unique
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed"
        | "unique";
      detail: string;
    };
    ComponentListsUpdateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["ComponentListsUpdateError"][];
    };
    ComponentsAddonsCreateAddMessageErrorComponent: {
      /**
       * @description * `add_message` - add_message (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "add_message";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsAddonsCreateAddonMessageErrorComponent: {
      /**
       * @description * `addon_message` - addon_message (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "addon_message";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsAddonsCreateAgreementErrorComponent: {
      /**
       * @description * `agreement` - agreement (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "agreement";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsAddonsCreateAllowTranslationPropagationErrorComponent: {
      /**
       * @description * `allow_translation_propagation` - allow_translation_propagation (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "allow_translation_propagation";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsAddonsCreateAutoLockErrorErrorComponent: {
      /**
       * @description * `auto_lock_error` - auto_lock_error (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "auto_lock_error";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsAddonsCreateBranchErrorComponent: {
      /**
       * @description * `branch` - branch (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "branch";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsAddonsCreateCategoryErrorComponent: {
      /**
       * @description * `category` - category (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "category";
      /**
       * @description * `does_not_exist` - does_not_exist
       *     * `incorrect_match` - incorrect_match
       *     * `incorrect_type` - incorrect_type
       *     * `no_match` - no_match
       * @enum {string}
       */
      code:
        | "does_not_exist"
        | "incorrect_match"
        | "incorrect_type"
        | "no_match";
      detail: string;
    };
    ComponentsAddonsCreateCheckFlagsErrorComponent: {
      /**
       * @description * `check_flags` - check_flags (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "check_flags";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsAddonsCreateCommitMessageErrorComponent: {
      /**
       * @description * `commit_message` - commit_message (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "commit_message";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsAddonsCreateCommitPendingAgeErrorComponent: {
      /**
       * @description * `commit_pending_age` - commit_pending_age (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "commit_pending_age";
      /**
       * @description * `invalid` - invalid
       *     * `max_string_length` - max_string_length
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_string_length"
        | "max_value"
        | "min_value"
        | "null";
      detail: string;
    };
    ComponentsAddonsCreateDeleteMessageErrorComponent: {
      /**
       * @description * `delete_message` - delete_message (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "delete_message";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsAddonsCreateDisableAutoshareErrorComponent: {
      /**
       * @description * `disable_autoshare` - disable_autoshare (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "disable_autoshare";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsAddonsCreateDocfileErrorComponent: {
      /**
       * @description * `docfile` - docfile (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "docfile";
      /**
       * @description * `empty` - empty
       *     * `invalid` - invalid
       *     * `no_name` - no_name
       *     * `null` - null
       * @enum {string}
       */
      code: "empty" | "invalid" | "no_name" | "null";
      detail: string;
    };
    ComponentsAddonsCreateEditTemplateErrorComponent: {
      /**
       * @description * `edit_template` - edit_template (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "edit_template";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsAddonsCreateEnableSuggestionsErrorComponent: {
      /**
       * @description * `enable_suggestions` - enable_suggestions (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "enable_suggestions";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsAddonsCreateEnforcedChecksErrorComponent: {
      /**
       * @description * `enforced_checks` - enforced_checks (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "enforced_checks";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsAddonsCreateError:
      | components["schemas"]["ComponentsAddonsCreateNonFieldErrorsErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateNameErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateSlugErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateSourceLanguageNonFieldErrorsErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateSourceLanguageCodeErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateSourceLanguageNameErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateSourceLanguagePluralNonFieldErrorsErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateSourceLanguagePluralSourceErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateSourceLanguagePluralNumberErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateSourceLanguagePluralFormulaErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateSourceLanguageDirectionErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateSourceLanguagePopulationErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateVcsErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateRepoErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateGitExportErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateBranchErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreatePushBranchErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateFilemaskErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateScreenshotFilemaskErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateTemplateErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateEditTemplateErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateIntermediateErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateNewBaseErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateFileFormatErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateLicenseErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateAgreementErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateNewLangErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateLanguageCodeStyleErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreatePushErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateCheckFlagsErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreatePriorityErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateEnforcedChecksErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateRestrictedErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateRepowebErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateReportSourceBugsErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateMergeStyleErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateCommitMessageErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateAddMessageErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateDeleteMessageErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateMergeMessageErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateAddonMessageErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreatePullMessageErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateAllowTranslationPropagationErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateManageUnitsErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateEnableSuggestionsErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateSuggestionVotingErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateSuggestionAutoacceptErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreatePushOnCommitErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateCommitPendingAgeErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateAutoLockErrorErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateLanguageRegexErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateKeyFilterErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateSecondaryLanguageErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateVariantRegexErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateZipfileErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateDocfileErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateIsGlossaryErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateGlossaryColorErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateDisableAutoshareErrorComponent"]
      | components["schemas"]["ComponentsAddonsCreateCategoryErrorComponent"];
    ComponentsAddonsCreateErrorResponse400:
      | components["schemas"]["ComponentsAddonsCreateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    ComponentsAddonsCreateFileFormatErrorComponent: {
      /**
       * @description * `file_format` - file_format (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "file_format";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       *     * `required` - required
       * @enum {string}
       */
      code: "invalid_choice" | "null" | "required";
      detail: string;
    };
    ComponentsAddonsCreateFilemaskErrorComponent: {
      /**
       * @description * `filemask` - filemask (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "filemask";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsAddonsCreateGitExportErrorComponent: {
      /**
       * @description * `git_export` - git_export (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "git_export";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsAddonsCreateGlossaryColorErrorComponent: {
      /**
       * @description * `glossary_color` - glossary_color (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "glossary_color";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    ComponentsAddonsCreateIntermediateErrorComponent: {
      /**
       * @description * `intermediate` - intermediate (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "intermediate";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsAddonsCreateIsGlossaryErrorComponent: {
      /**
       * @description * `is_glossary` - is_glossary (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "is_glossary";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsAddonsCreateKeyFilterErrorComponent: {
      /**
       * @description * `key_filter` - key_filter (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "key_filter";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsAddonsCreateLanguageCodeStyleErrorComponent: {
      /**
       * @description * `language_code_style` - language_code_style (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "language_code_style";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    ComponentsAddonsCreateLanguageRegexErrorComponent: {
      /**
       * @description * `language_regex` - language_regex (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "language_regex";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsAddonsCreateLicenseErrorComponent: {
      /**
       * @description * `license` - license (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "license";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    ComponentsAddonsCreateManageUnitsErrorComponent: {
      /**
       * @description * `manage_units` - manage_units (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "manage_units";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsAddonsCreateMergeMessageErrorComponent: {
      /**
       * @description * `merge_message` - merge_message (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "merge_message";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsAddonsCreateMergeStyleErrorComponent: {
      /**
       * @description * `merge_style` - merge_style (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "merge_style";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    ComponentsAddonsCreateNameErrorComponent: {
      /**
       * @description * `name` - name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsAddonsCreateNewBaseErrorComponent: {
      /**
       * @description * `new_base` - new_base (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "new_base";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsAddonsCreateNewLangErrorComponent: {
      /**
       * @description * `new_lang` - new_lang (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "new_lang";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    ComponentsAddonsCreateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsAddonsCreatePriorityErrorComponent: {
      /**
       * @description * `priority` - priority (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "priority";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "max_value" | "min_value" | "null";
      detail: string;
    };
    ComponentsAddonsCreatePullMessageErrorComponent: {
      /**
       * @description * `pull_message` - pull_message (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "pull_message";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsAddonsCreatePushBranchErrorComponent: {
      /**
       * @description * `push_branch` - push_branch (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "push_branch";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsAddonsCreatePushErrorComponent: {
      /**
       * @description * `push` - push (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "push";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsAddonsCreatePushOnCommitErrorComponent: {
      /**
       * @description * `push_on_commit` - push_on_commit (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "push_on_commit";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsAddonsCreateRepoErrorComponent: {
      /**
       * @description * `repo` - repo (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "repo";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsAddonsCreateReportSourceBugsErrorComponent: {
      /**
       * @description * `report_source_bugs` - report_source_bugs (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "report_source_bugs";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsAddonsCreateRepowebErrorComponent: {
      /**
       * @description * `repoweb` - repoweb (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "repoweb";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsAddonsCreateRestrictedErrorComponent: {
      /**
       * @description * `restricted` - restricted (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "restricted";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsAddonsCreateScreenshotFilemaskErrorComponent: {
      /**
       * @description * `screenshot_filemask` - screenshot_filemask (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "screenshot_filemask";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsAddonsCreateSecondaryLanguageErrorComponent: {
      /**
       * @description * `secondary_language` - secondary_language (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "secondary_language";
      /**
       * @description * `does_not_exist` - does_not_exist
       *     * `incorrect_type` - incorrect_type
       * @enum {string}
       */
      code: "does_not_exist" | "incorrect_type";
      detail: string;
    };
    ComponentsAddonsCreateSlugErrorComponent: {
      /**
       * @description * `slug` - slug (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "slug";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsAddonsCreateSourceLanguageCodeErrorComponent: {
      /**
       * @description * `source_language.code` - source_language.code (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.code";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsAddonsCreateSourceLanguageDirectionErrorComponent: {
      /**
       * @description * `source_language.direction` - source_language.direction (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.direction";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    ComponentsAddonsCreateSourceLanguageNameErrorComponent: {
      /**
       * @description * `source_language.name` - source_language.name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsAddonsCreateSourceLanguageNonFieldErrorsErrorComponent: {
      /**
       * @description * `source_language.non_field_errors` - source_language.non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsAddonsCreateSourceLanguagePluralFormulaErrorComponent: {
      /**
       * @description * `source_language.plural.formula` - source_language.plural.formula (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.plural.formula";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsAddonsCreateSourceLanguagePluralNonFieldErrorsErrorComponent: {
      /**
       * @description * `source_language.plural.non_field_errors` - source_language.plural.non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.plural.non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsAddonsCreateSourceLanguagePluralNumberErrorComponent: {
      /**
       * @description * `source_language.plural.number` - source_language.plural.number (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.plural.number";
      /**
       * @description * `invalid` - invalid
       *     * `max_string_length` - max_string_length
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_string_length"
        | "max_value"
        | "min_value"
        | "null";
      detail: string;
    };
    ComponentsAddonsCreateSourceLanguagePluralSourceErrorComponent: {
      /**
       * @description * `source_language.plural.source` - source_language.plural.source (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.plural.source";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "max_value" | "min_value" | "null";
      detail: string;
    };
    ComponentsAddonsCreateSourceLanguagePopulationErrorComponent: {
      /**
       * @description * `source_language.population` - source_language.population (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.population";
      /**
       * @description * `invalid` - invalid
       *     * `max_string_length` - max_string_length
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_string_length"
        | "max_value"
        | "min_value"
        | "null";
      detail: string;
    };
    ComponentsAddonsCreateSuggestionAutoacceptErrorComponent: {
      /**
       * @description * `suggestion_autoaccept` - suggestion_autoaccept (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "suggestion_autoaccept";
      /**
       * @description * `invalid` - invalid
       *     * `max_string_length` - max_string_length
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_string_length"
        | "max_value"
        | "min_value"
        | "null";
      detail: string;
    };
    ComponentsAddonsCreateSuggestionVotingErrorComponent: {
      /**
       * @description * `suggestion_voting` - suggestion_voting (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "suggestion_voting";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsAddonsCreateTemplateErrorComponent: {
      /**
       * @description * `template` - template (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "template";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsAddonsCreateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["ComponentsAddonsCreateError"][];
    };
    ComponentsAddonsCreateVariantRegexErrorComponent: {
      /**
       * @description * `variant_regex` - variant_regex (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "variant_regex";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsAddonsCreateVcsErrorComponent: {
      /**
       * @description * `vcs` - vcs (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "vcs";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    ComponentsAddonsCreateZipfileErrorComponent: {
      /**
       * @description * `zipfile` - zipfile (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "zipfile";
      /**
       * @description * `empty` - empty
       *     * `invalid` - invalid
       *     * `no_name` - no_name
       *     * `null` - null
       * @enum {string}
       */
      code: "empty" | "invalid" | "no_name" | "null";
      detail: string;
    };
    ComponentsChangesRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    ComponentsCreditsRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    ComponentsDestroyErrorResponse400: components["schemas"]["ParseErrorResponse"];
    ComponentsFileRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    ComponentsLinksCreateAddMessageErrorComponent: {
      /**
       * @description * `add_message` - add_message (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "add_message";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsLinksCreateAddonMessageErrorComponent: {
      /**
       * @description * `addon_message` - addon_message (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "addon_message";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsLinksCreateAgreementErrorComponent: {
      /**
       * @description * `agreement` - agreement (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "agreement";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsLinksCreateAllowTranslationPropagationErrorComponent: {
      /**
       * @description * `allow_translation_propagation` - allow_translation_propagation (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "allow_translation_propagation";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsLinksCreateAutoLockErrorErrorComponent: {
      /**
       * @description * `auto_lock_error` - auto_lock_error (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "auto_lock_error";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsLinksCreateBranchErrorComponent: {
      /**
       * @description * `branch` - branch (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "branch";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsLinksCreateCategoryErrorComponent: {
      /**
       * @description * `category` - category (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "category";
      /**
       * @description * `does_not_exist` - does_not_exist
       *     * `incorrect_match` - incorrect_match
       *     * `incorrect_type` - incorrect_type
       *     * `no_match` - no_match
       * @enum {string}
       */
      code:
        | "does_not_exist"
        | "incorrect_match"
        | "incorrect_type"
        | "no_match";
      detail: string;
    };
    ComponentsLinksCreateCheckFlagsErrorComponent: {
      /**
       * @description * `check_flags` - check_flags (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "check_flags";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsLinksCreateCommitMessageErrorComponent: {
      /**
       * @description * `commit_message` - commit_message (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "commit_message";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsLinksCreateCommitPendingAgeErrorComponent: {
      /**
       * @description * `commit_pending_age` - commit_pending_age (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "commit_pending_age";
      /**
       * @description * `invalid` - invalid
       *     * `max_string_length` - max_string_length
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_string_length"
        | "max_value"
        | "min_value"
        | "null";
      detail: string;
    };
    ComponentsLinksCreateDeleteMessageErrorComponent: {
      /**
       * @description * `delete_message` - delete_message (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "delete_message";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsLinksCreateDisableAutoshareErrorComponent: {
      /**
       * @description * `disable_autoshare` - disable_autoshare (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "disable_autoshare";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsLinksCreateDocfileErrorComponent: {
      /**
       * @description * `docfile` - docfile (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "docfile";
      /**
       * @description * `empty` - empty
       *     * `invalid` - invalid
       *     * `no_name` - no_name
       *     * `null` - null
       * @enum {string}
       */
      code: "empty" | "invalid" | "no_name" | "null";
      detail: string;
    };
    ComponentsLinksCreateEditTemplateErrorComponent: {
      /**
       * @description * `edit_template` - edit_template (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "edit_template";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsLinksCreateEnableSuggestionsErrorComponent: {
      /**
       * @description * `enable_suggestions` - enable_suggestions (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "enable_suggestions";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsLinksCreateEnforcedChecksErrorComponent: {
      /**
       * @description * `enforced_checks` - enforced_checks (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "enforced_checks";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsLinksCreateError:
      | components["schemas"]["ComponentsLinksCreateNonFieldErrorsErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateNameErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateSlugErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateSourceLanguageNonFieldErrorsErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateSourceLanguageCodeErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateSourceLanguageNameErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateSourceLanguagePluralNonFieldErrorsErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateSourceLanguagePluralSourceErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateSourceLanguagePluralNumberErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateSourceLanguagePluralFormulaErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateSourceLanguageDirectionErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateSourceLanguagePopulationErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateVcsErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateRepoErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateGitExportErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateBranchErrorComponent"]
      | components["schemas"]["ComponentsLinksCreatePushBranchErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateFilemaskErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateScreenshotFilemaskErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateTemplateErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateEditTemplateErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateIntermediateErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateNewBaseErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateFileFormatErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateLicenseErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateAgreementErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateNewLangErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateLanguageCodeStyleErrorComponent"]
      | components["schemas"]["ComponentsLinksCreatePushErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateCheckFlagsErrorComponent"]
      | components["schemas"]["ComponentsLinksCreatePriorityErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateEnforcedChecksErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateRestrictedErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateRepowebErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateReportSourceBugsErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateMergeStyleErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateCommitMessageErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateAddMessageErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateDeleteMessageErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateMergeMessageErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateAddonMessageErrorComponent"]
      | components["schemas"]["ComponentsLinksCreatePullMessageErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateAllowTranslationPropagationErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateManageUnitsErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateEnableSuggestionsErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateSuggestionVotingErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateSuggestionAutoacceptErrorComponent"]
      | components["schemas"]["ComponentsLinksCreatePushOnCommitErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateCommitPendingAgeErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateAutoLockErrorErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateLanguageRegexErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateKeyFilterErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateSecondaryLanguageErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateVariantRegexErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateZipfileErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateDocfileErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateIsGlossaryErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateGlossaryColorErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateDisableAutoshareErrorComponent"]
      | components["schemas"]["ComponentsLinksCreateCategoryErrorComponent"];
    ComponentsLinksCreateErrorResponse400:
      | components["schemas"]["ComponentsLinksCreateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    ComponentsLinksCreateFileFormatErrorComponent: {
      /**
       * @description * `file_format` - file_format (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "file_format";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       *     * `required` - required
       * @enum {string}
       */
      code: "invalid_choice" | "null" | "required";
      detail: string;
    };
    ComponentsLinksCreateFilemaskErrorComponent: {
      /**
       * @description * `filemask` - filemask (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "filemask";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsLinksCreateGitExportErrorComponent: {
      /**
       * @description * `git_export` - git_export (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "git_export";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsLinksCreateGlossaryColorErrorComponent: {
      /**
       * @description * `glossary_color` - glossary_color (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "glossary_color";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    ComponentsLinksCreateIntermediateErrorComponent: {
      /**
       * @description * `intermediate` - intermediate (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "intermediate";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsLinksCreateIsGlossaryErrorComponent: {
      /**
       * @description * `is_glossary` - is_glossary (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "is_glossary";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsLinksCreateKeyFilterErrorComponent: {
      /**
       * @description * `key_filter` - key_filter (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "key_filter";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsLinksCreateLanguageCodeStyleErrorComponent: {
      /**
       * @description * `language_code_style` - language_code_style (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "language_code_style";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    ComponentsLinksCreateLanguageRegexErrorComponent: {
      /**
       * @description * `language_regex` - language_regex (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "language_regex";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsLinksCreateLicenseErrorComponent: {
      /**
       * @description * `license` - license (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "license";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    ComponentsLinksCreateManageUnitsErrorComponent: {
      /**
       * @description * `manage_units` - manage_units (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "manage_units";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsLinksCreateMergeMessageErrorComponent: {
      /**
       * @description * `merge_message` - merge_message (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "merge_message";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsLinksCreateMergeStyleErrorComponent: {
      /**
       * @description * `merge_style` - merge_style (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "merge_style";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    ComponentsLinksCreateNameErrorComponent: {
      /**
       * @description * `name` - name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsLinksCreateNewBaseErrorComponent: {
      /**
       * @description * `new_base` - new_base (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "new_base";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsLinksCreateNewLangErrorComponent: {
      /**
       * @description * `new_lang` - new_lang (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "new_lang";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    ComponentsLinksCreateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsLinksCreatePriorityErrorComponent: {
      /**
       * @description * `priority` - priority (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "priority";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "max_value" | "min_value" | "null";
      detail: string;
    };
    ComponentsLinksCreatePullMessageErrorComponent: {
      /**
       * @description * `pull_message` - pull_message (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "pull_message";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsLinksCreatePushBranchErrorComponent: {
      /**
       * @description * `push_branch` - push_branch (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "push_branch";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsLinksCreatePushErrorComponent: {
      /**
       * @description * `push` - push (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "push";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsLinksCreatePushOnCommitErrorComponent: {
      /**
       * @description * `push_on_commit` - push_on_commit (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "push_on_commit";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsLinksCreateRepoErrorComponent: {
      /**
       * @description * `repo` - repo (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "repo";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsLinksCreateReportSourceBugsErrorComponent: {
      /**
       * @description * `report_source_bugs` - report_source_bugs (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "report_source_bugs";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsLinksCreateRepowebErrorComponent: {
      /**
       * @description * `repoweb` - repoweb (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "repoweb";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsLinksCreateRestrictedErrorComponent: {
      /**
       * @description * `restricted` - restricted (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "restricted";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsLinksCreateScreenshotFilemaskErrorComponent: {
      /**
       * @description * `screenshot_filemask` - screenshot_filemask (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "screenshot_filemask";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsLinksCreateSecondaryLanguageErrorComponent: {
      /**
       * @description * `secondary_language` - secondary_language (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "secondary_language";
      /**
       * @description * `does_not_exist` - does_not_exist
       *     * `incorrect_type` - incorrect_type
       * @enum {string}
       */
      code: "does_not_exist" | "incorrect_type";
      detail: string;
    };
    ComponentsLinksCreateSlugErrorComponent: {
      /**
       * @description * `slug` - slug (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "slug";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsLinksCreateSourceLanguageCodeErrorComponent: {
      /**
       * @description * `source_language.code` - source_language.code (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.code";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsLinksCreateSourceLanguageDirectionErrorComponent: {
      /**
       * @description * `source_language.direction` - source_language.direction (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.direction";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    ComponentsLinksCreateSourceLanguageNameErrorComponent: {
      /**
       * @description * `source_language.name` - source_language.name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsLinksCreateSourceLanguageNonFieldErrorsErrorComponent: {
      /**
       * @description * `source_language.non_field_errors` - source_language.non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsLinksCreateSourceLanguagePluralFormulaErrorComponent: {
      /**
       * @description * `source_language.plural.formula` - source_language.plural.formula (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.plural.formula";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsLinksCreateSourceLanguagePluralNonFieldErrorsErrorComponent: {
      /**
       * @description * `source_language.plural.non_field_errors` - source_language.plural.non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.plural.non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsLinksCreateSourceLanguagePluralNumberErrorComponent: {
      /**
       * @description * `source_language.plural.number` - source_language.plural.number (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.plural.number";
      /**
       * @description * `invalid` - invalid
       *     * `max_string_length` - max_string_length
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_string_length"
        | "max_value"
        | "min_value"
        | "null";
      detail: string;
    };
    ComponentsLinksCreateSourceLanguagePluralSourceErrorComponent: {
      /**
       * @description * `source_language.plural.source` - source_language.plural.source (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.plural.source";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "max_value" | "min_value" | "null";
      detail: string;
    };
    ComponentsLinksCreateSourceLanguagePopulationErrorComponent: {
      /**
       * @description * `source_language.population` - source_language.population (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.population";
      /**
       * @description * `invalid` - invalid
       *     * `max_string_length` - max_string_length
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_string_length"
        | "max_value"
        | "min_value"
        | "null";
      detail: string;
    };
    ComponentsLinksCreateSuggestionAutoacceptErrorComponent: {
      /**
       * @description * `suggestion_autoaccept` - suggestion_autoaccept (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "suggestion_autoaccept";
      /**
       * @description * `invalid` - invalid
       *     * `max_string_length` - max_string_length
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_string_length"
        | "max_value"
        | "min_value"
        | "null";
      detail: string;
    };
    ComponentsLinksCreateSuggestionVotingErrorComponent: {
      /**
       * @description * `suggestion_voting` - suggestion_voting (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "suggestion_voting";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsLinksCreateTemplateErrorComponent: {
      /**
       * @description * `template` - template (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "template";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsLinksCreateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["ComponentsLinksCreateError"][];
    };
    ComponentsLinksCreateVariantRegexErrorComponent: {
      /**
       * @description * `variant_regex` - variant_regex (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "variant_regex";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsLinksCreateVcsErrorComponent: {
      /**
       * @description * `vcs` - vcs (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "vcs";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    ComponentsLinksCreateZipfileErrorComponent: {
      /**
       * @description * `zipfile` - zipfile (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "zipfile";
      /**
       * @description * `empty` - empty
       *     * `invalid` - invalid
       *     * `no_name` - no_name
       *     * `null` - null
       * @enum {string}
       */
      code: "empty" | "invalid" | "no_name" | "null";
      detail: string;
    };
    ComponentsLinksDestroyErrorResponse400: components["schemas"]["ParseErrorResponse"];
    ComponentsLinksRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    ComponentsListErrorResponse400: components["schemas"]["ParseErrorResponse"];
    ComponentsLockCreateError:
      | components["schemas"]["ComponentsLockCreateNonFieldErrorsErrorComponent"]
      | components["schemas"]["ComponentsLockCreateLockErrorComponent"];
    ComponentsLockCreateErrorResponse400:
      | components["schemas"]["ComponentsLockCreateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    ComponentsLockCreateLockErrorComponent: {
      /**
       * @description * `lock` - lock (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "lock";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       *     * `required` - required
       * @enum {string}
       */
      code: "invalid" | "null" | "required";
      detail: string;
    };
    ComponentsLockCreateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsLockCreateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["ComponentsLockCreateError"][];
    };
    ComponentsLockRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    ComponentsMonolingualBaseRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    ComponentsNewTemplateRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    ComponentsPartialUpdateAddMessageErrorComponent: {
      /**
       * @description * `add_message` - add_message (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "add_message";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsPartialUpdateAddonMessageErrorComponent: {
      /**
       * @description * `addon_message` - addon_message (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "addon_message";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsPartialUpdateAgreementErrorComponent: {
      /**
       * @description * `agreement` - agreement (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "agreement";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsPartialUpdateAllowTranslationPropagationErrorComponent: {
      /**
       * @description * `allow_translation_propagation` - allow_translation_propagation (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "allow_translation_propagation";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsPartialUpdateAutoLockErrorErrorComponent: {
      /**
       * @description * `auto_lock_error` - auto_lock_error (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "auto_lock_error";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsPartialUpdateBranchErrorComponent: {
      /**
       * @description * `branch` - branch (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "branch";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsPartialUpdateCategoryErrorComponent: {
      /**
       * @description * `category` - category (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "category";
      /**
       * @description * `does_not_exist` - does_not_exist
       *     * `incorrect_match` - incorrect_match
       *     * `incorrect_type` - incorrect_type
       *     * `no_match` - no_match
       * @enum {string}
       */
      code:
        | "does_not_exist"
        | "incorrect_match"
        | "incorrect_type"
        | "no_match";
      detail: string;
    };
    ComponentsPartialUpdateCheckFlagsErrorComponent: {
      /**
       * @description * `check_flags` - check_flags (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "check_flags";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsPartialUpdateCommitMessageErrorComponent: {
      /**
       * @description * `commit_message` - commit_message (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "commit_message";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsPartialUpdateCommitPendingAgeErrorComponent: {
      /**
       * @description * `commit_pending_age` - commit_pending_age (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "commit_pending_age";
      /**
       * @description * `invalid` - invalid
       *     * `max_string_length` - max_string_length
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_string_length"
        | "max_value"
        | "min_value"
        | "null";
      detail: string;
    };
    ComponentsPartialUpdateDeleteMessageErrorComponent: {
      /**
       * @description * `delete_message` - delete_message (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "delete_message";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsPartialUpdateDisableAutoshareErrorComponent: {
      /**
       * @description * `disable_autoshare` - disable_autoshare (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "disable_autoshare";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsPartialUpdateDocfileErrorComponent: {
      /**
       * @description * `docfile` - docfile (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "docfile";
      /**
       * @description * `empty` - empty
       *     * `invalid` - invalid
       *     * `no_name` - no_name
       *     * `null` - null
       * @enum {string}
       */
      code: "empty" | "invalid" | "no_name" | "null";
      detail: string;
    };
    ComponentsPartialUpdateEditTemplateErrorComponent: {
      /**
       * @description * `edit_template` - edit_template (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "edit_template";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsPartialUpdateEnableSuggestionsErrorComponent: {
      /**
       * @description * `enable_suggestions` - enable_suggestions (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "enable_suggestions";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsPartialUpdateEnforcedChecksErrorComponent: {
      /**
       * @description * `enforced_checks` - enforced_checks (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "enforced_checks";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsPartialUpdateError:
      | components["schemas"]["ComponentsPartialUpdateNonFieldErrorsErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateNameErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateSlugErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateSourceLanguageNonFieldErrorsErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateSourceLanguageCodeErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateSourceLanguageNameErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateSourceLanguagePluralNonFieldErrorsErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateSourceLanguagePluralSourceErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateSourceLanguagePluralNumberErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateSourceLanguagePluralFormulaErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateSourceLanguageDirectionErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateSourceLanguagePopulationErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateVcsErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateRepoErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateGitExportErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateBranchErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdatePushBranchErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateFilemaskErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateScreenshotFilemaskErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateTemplateErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateEditTemplateErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateIntermediateErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateNewBaseErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateFileFormatErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateLicenseErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateAgreementErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateNewLangErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateLanguageCodeStyleErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdatePushErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateCheckFlagsErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdatePriorityErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateEnforcedChecksErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateRestrictedErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateRepowebErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateReportSourceBugsErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateMergeStyleErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateCommitMessageErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateAddMessageErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateDeleteMessageErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateMergeMessageErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateAddonMessageErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdatePullMessageErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateAllowTranslationPropagationErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateManageUnitsErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateEnableSuggestionsErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateSuggestionVotingErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateSuggestionAutoacceptErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdatePushOnCommitErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateCommitPendingAgeErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateAutoLockErrorErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateLanguageRegexErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateKeyFilterErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateSecondaryLanguageErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateVariantRegexErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateZipfileErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateDocfileErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateIsGlossaryErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateGlossaryColorErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateDisableAutoshareErrorComponent"]
      | components["schemas"]["ComponentsPartialUpdateCategoryErrorComponent"];
    ComponentsPartialUpdateErrorResponse400:
      | components["schemas"]["ComponentsPartialUpdateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    ComponentsPartialUpdateFileFormatErrorComponent: {
      /**
       * @description * `file_format` - file_format (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "file_format";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       *     * `required` - required
       * @enum {string}
       */
      code: "invalid_choice" | "null" | "required";
      detail: string;
    };
    ComponentsPartialUpdateFilemaskErrorComponent: {
      /**
       * @description * `filemask` - filemask (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "filemask";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsPartialUpdateGitExportErrorComponent: {
      /**
       * @description * `git_export` - git_export (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "git_export";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsPartialUpdateGlossaryColorErrorComponent: {
      /**
       * @description * `glossary_color` - glossary_color (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "glossary_color";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    ComponentsPartialUpdateIntermediateErrorComponent: {
      /**
       * @description * `intermediate` - intermediate (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "intermediate";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsPartialUpdateIsGlossaryErrorComponent: {
      /**
       * @description * `is_glossary` - is_glossary (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "is_glossary";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsPartialUpdateKeyFilterErrorComponent: {
      /**
       * @description * `key_filter` - key_filter (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "key_filter";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsPartialUpdateLanguageCodeStyleErrorComponent: {
      /**
       * @description * `language_code_style` - language_code_style (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "language_code_style";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    ComponentsPartialUpdateLanguageRegexErrorComponent: {
      /**
       * @description * `language_regex` - language_regex (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "language_regex";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsPartialUpdateLicenseErrorComponent: {
      /**
       * @description * `license` - license (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "license";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    ComponentsPartialUpdateManageUnitsErrorComponent: {
      /**
       * @description * `manage_units` - manage_units (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "manage_units";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsPartialUpdateMergeMessageErrorComponent: {
      /**
       * @description * `merge_message` - merge_message (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "merge_message";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsPartialUpdateMergeStyleErrorComponent: {
      /**
       * @description * `merge_style` - merge_style (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "merge_style";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    ComponentsPartialUpdateNameErrorComponent: {
      /**
       * @description * `name` - name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsPartialUpdateNewBaseErrorComponent: {
      /**
       * @description * `new_base` - new_base (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "new_base";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsPartialUpdateNewLangErrorComponent: {
      /**
       * @description * `new_lang` - new_lang (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "new_lang";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    ComponentsPartialUpdateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsPartialUpdatePriorityErrorComponent: {
      /**
       * @description * `priority` - priority (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "priority";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "max_value" | "min_value" | "null";
      detail: string;
    };
    ComponentsPartialUpdatePullMessageErrorComponent: {
      /**
       * @description * `pull_message` - pull_message (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "pull_message";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsPartialUpdatePushBranchErrorComponent: {
      /**
       * @description * `push_branch` - push_branch (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "push_branch";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsPartialUpdatePushErrorComponent: {
      /**
       * @description * `push` - push (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "push";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsPartialUpdatePushOnCommitErrorComponent: {
      /**
       * @description * `push_on_commit` - push_on_commit (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "push_on_commit";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsPartialUpdateRepoErrorComponent: {
      /**
       * @description * `repo` - repo (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "repo";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsPartialUpdateReportSourceBugsErrorComponent: {
      /**
       * @description * `report_source_bugs` - report_source_bugs (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "report_source_bugs";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsPartialUpdateRepowebErrorComponent: {
      /**
       * @description * `repoweb` - repoweb (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "repoweb";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsPartialUpdateRestrictedErrorComponent: {
      /**
       * @description * `restricted` - restricted (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "restricted";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsPartialUpdateScreenshotFilemaskErrorComponent: {
      /**
       * @description * `screenshot_filemask` - screenshot_filemask (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "screenshot_filemask";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsPartialUpdateSecondaryLanguageErrorComponent: {
      /**
       * @description * `secondary_language` - secondary_language (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "secondary_language";
      /**
       * @description * `does_not_exist` - does_not_exist
       *     * `incorrect_type` - incorrect_type
       * @enum {string}
       */
      code: "does_not_exist" | "incorrect_type";
      detail: string;
    };
    ComponentsPartialUpdateSlugErrorComponent: {
      /**
       * @description * `slug` - slug (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "slug";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsPartialUpdateSourceLanguageCodeErrorComponent: {
      /**
       * @description * `source_language.code` - source_language.code (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.code";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsPartialUpdateSourceLanguageDirectionErrorComponent: {
      /**
       * @description * `source_language.direction` - source_language.direction (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.direction";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    ComponentsPartialUpdateSourceLanguageNameErrorComponent: {
      /**
       * @description * `source_language.name` - source_language.name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsPartialUpdateSourceLanguageNonFieldErrorsErrorComponent: {
      /**
       * @description * `source_language.non_field_errors` - source_language.non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsPartialUpdateSourceLanguagePluralFormulaErrorComponent: {
      /**
       * @description * `source_language.plural.formula` - source_language.plural.formula (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.plural.formula";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsPartialUpdateSourceLanguagePluralNonFieldErrorsErrorComponent: {
      /**
       * @description * `source_language.plural.non_field_errors` - source_language.plural.non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.plural.non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsPartialUpdateSourceLanguagePluralNumberErrorComponent: {
      /**
       * @description * `source_language.plural.number` - source_language.plural.number (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.plural.number";
      /**
       * @description * `invalid` - invalid
       *     * `max_string_length` - max_string_length
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_string_length"
        | "max_value"
        | "min_value"
        | "null";
      detail: string;
    };
    ComponentsPartialUpdateSourceLanguagePluralSourceErrorComponent: {
      /**
       * @description * `source_language.plural.source` - source_language.plural.source (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.plural.source";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "max_value" | "min_value" | "null";
      detail: string;
    };
    ComponentsPartialUpdateSourceLanguagePopulationErrorComponent: {
      /**
       * @description * `source_language.population` - source_language.population (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.population";
      /**
       * @description * `invalid` - invalid
       *     * `max_string_length` - max_string_length
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_string_length"
        | "max_value"
        | "min_value"
        | "null";
      detail: string;
    };
    ComponentsPartialUpdateSuggestionAutoacceptErrorComponent: {
      /**
       * @description * `suggestion_autoaccept` - suggestion_autoaccept (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "suggestion_autoaccept";
      /**
       * @description * `invalid` - invalid
       *     * `max_string_length` - max_string_length
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_string_length"
        | "max_value"
        | "min_value"
        | "null";
      detail: string;
    };
    ComponentsPartialUpdateSuggestionVotingErrorComponent: {
      /**
       * @description * `suggestion_voting` - suggestion_voting (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "suggestion_voting";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsPartialUpdateTemplateErrorComponent: {
      /**
       * @description * `template` - template (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "template";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsPartialUpdateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["ComponentsPartialUpdateError"][];
    };
    ComponentsPartialUpdateVariantRegexErrorComponent: {
      /**
       * @description * `variant_regex` - variant_regex (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "variant_regex";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsPartialUpdateVcsErrorComponent: {
      /**
       * @description * `vcs` - vcs (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "vcs";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    ComponentsPartialUpdateZipfileErrorComponent: {
      /**
       * @description * `zipfile` - zipfile (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "zipfile";
      /**
       * @description * `empty` - empty
       *     * `invalid` - invalid
       *     * `no_name` - no_name
       *     * `null` - null
       * @enum {string}
       */
      code: "empty" | "invalid" | "no_name" | "null";
      detail: string;
    };
    ComponentsRepositoryCreateError:
      | components["schemas"]["ComponentsRepositoryCreateNonFieldErrorsErrorComponent"]
      | components["schemas"]["ComponentsRepositoryCreateOperationErrorComponent"];
    ComponentsRepositoryCreateErrorResponse400:
      | components["schemas"]["ComponentsRepositoryCreateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    ComponentsRepositoryCreateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsRepositoryCreateOperationErrorComponent: {
      /**
       * @description * `operation` - operation (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "operation";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       *     * `required` - required
       * @enum {string}
       */
      code: "invalid_choice" | "null" | "required";
      detail: string;
    };
    ComponentsRepositoryCreateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["ComponentsRepositoryCreateError"][];
    };
    ComponentsRepositoryRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    ComponentsRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    ComponentsScreenshotsRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    ComponentsStatisticsRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    ComponentsTranslationsCreateAddMessageErrorComponent: {
      /**
       * @description * `add_message` - add_message (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "add_message";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsTranslationsCreateAddonMessageErrorComponent: {
      /**
       * @description * `addon_message` - addon_message (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "addon_message";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsTranslationsCreateAgreementErrorComponent: {
      /**
       * @description * `agreement` - agreement (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "agreement";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsTranslationsCreateAllowTranslationPropagationErrorComponent: {
      /**
       * @description * `allow_translation_propagation` - allow_translation_propagation (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "allow_translation_propagation";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsTranslationsCreateAutoLockErrorErrorComponent: {
      /**
       * @description * `auto_lock_error` - auto_lock_error (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "auto_lock_error";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsTranslationsCreateBranchErrorComponent: {
      /**
       * @description * `branch` - branch (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "branch";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsTranslationsCreateCategoryErrorComponent: {
      /**
       * @description * `category` - category (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "category";
      /**
       * @description * `does_not_exist` - does_not_exist
       *     * `incorrect_match` - incorrect_match
       *     * `incorrect_type` - incorrect_type
       *     * `no_match` - no_match
       * @enum {string}
       */
      code:
        | "does_not_exist"
        | "incorrect_match"
        | "incorrect_type"
        | "no_match";
      detail: string;
    };
    ComponentsTranslationsCreateCheckFlagsErrorComponent: {
      /**
       * @description * `check_flags` - check_flags (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "check_flags";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsTranslationsCreateCommitMessageErrorComponent: {
      /**
       * @description * `commit_message` - commit_message (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "commit_message";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsTranslationsCreateCommitPendingAgeErrorComponent: {
      /**
       * @description * `commit_pending_age` - commit_pending_age (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "commit_pending_age";
      /**
       * @description * `invalid` - invalid
       *     * `max_string_length` - max_string_length
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_string_length"
        | "max_value"
        | "min_value"
        | "null";
      detail: string;
    };
    ComponentsTranslationsCreateDeleteMessageErrorComponent: {
      /**
       * @description * `delete_message` - delete_message (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "delete_message";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsTranslationsCreateDisableAutoshareErrorComponent: {
      /**
       * @description * `disable_autoshare` - disable_autoshare (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "disable_autoshare";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsTranslationsCreateDocfileErrorComponent: {
      /**
       * @description * `docfile` - docfile (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "docfile";
      /**
       * @description * `empty` - empty
       *     * `invalid` - invalid
       *     * `no_name` - no_name
       *     * `null` - null
       * @enum {string}
       */
      code: "empty" | "invalid" | "no_name" | "null";
      detail: string;
    };
    ComponentsTranslationsCreateEditTemplateErrorComponent: {
      /**
       * @description * `edit_template` - edit_template (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "edit_template";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsTranslationsCreateEnableSuggestionsErrorComponent: {
      /**
       * @description * `enable_suggestions` - enable_suggestions (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "enable_suggestions";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsTranslationsCreateEnforcedChecksErrorComponent: {
      /**
       * @description * `enforced_checks` - enforced_checks (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "enforced_checks";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsTranslationsCreateError:
      | components["schemas"]["ComponentsTranslationsCreateNonFieldErrorsErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateNameErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateSlugErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateSourceLanguageNonFieldErrorsErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateSourceLanguageCodeErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateSourceLanguageNameErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateSourceLanguagePluralNonFieldErrorsErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateSourceLanguagePluralSourceErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateSourceLanguagePluralNumberErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateSourceLanguagePluralFormulaErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateSourceLanguageDirectionErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateSourceLanguagePopulationErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateVcsErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateRepoErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateGitExportErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateBranchErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreatePushBranchErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateFilemaskErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateScreenshotFilemaskErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateTemplateErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateEditTemplateErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateIntermediateErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateNewBaseErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateFileFormatErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateLicenseErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateAgreementErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateNewLangErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateLanguageCodeStyleErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreatePushErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateCheckFlagsErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreatePriorityErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateEnforcedChecksErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateRestrictedErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateRepowebErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateReportSourceBugsErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateMergeStyleErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateCommitMessageErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateAddMessageErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateDeleteMessageErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateMergeMessageErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateAddonMessageErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreatePullMessageErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateAllowTranslationPropagationErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateManageUnitsErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateEnableSuggestionsErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateSuggestionVotingErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateSuggestionAutoacceptErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreatePushOnCommitErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateCommitPendingAgeErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateAutoLockErrorErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateLanguageRegexErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateKeyFilterErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateSecondaryLanguageErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateVariantRegexErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateZipfileErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateDocfileErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateIsGlossaryErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateGlossaryColorErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateDisableAutoshareErrorComponent"]
      | components["schemas"]["ComponentsTranslationsCreateCategoryErrorComponent"];
    ComponentsTranslationsCreateErrorResponse400:
      | components["schemas"]["ComponentsTranslationsCreateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    ComponentsTranslationsCreateFileFormatErrorComponent: {
      /**
       * @description * `file_format` - file_format (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "file_format";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       *     * `required` - required
       * @enum {string}
       */
      code: "invalid_choice" | "null" | "required";
      detail: string;
    };
    ComponentsTranslationsCreateFilemaskErrorComponent: {
      /**
       * @description * `filemask` - filemask (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "filemask";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsTranslationsCreateGitExportErrorComponent: {
      /**
       * @description * `git_export` - git_export (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "git_export";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsTranslationsCreateGlossaryColorErrorComponent: {
      /**
       * @description * `glossary_color` - glossary_color (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "glossary_color";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    ComponentsTranslationsCreateIntermediateErrorComponent: {
      /**
       * @description * `intermediate` - intermediate (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "intermediate";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsTranslationsCreateIsGlossaryErrorComponent: {
      /**
       * @description * `is_glossary` - is_glossary (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "is_glossary";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsTranslationsCreateKeyFilterErrorComponent: {
      /**
       * @description * `key_filter` - key_filter (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "key_filter";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsTranslationsCreateLanguageCodeStyleErrorComponent: {
      /**
       * @description * `language_code_style` - language_code_style (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "language_code_style";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    ComponentsTranslationsCreateLanguageRegexErrorComponent: {
      /**
       * @description * `language_regex` - language_regex (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "language_regex";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsTranslationsCreateLicenseErrorComponent: {
      /**
       * @description * `license` - license (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "license";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    ComponentsTranslationsCreateManageUnitsErrorComponent: {
      /**
       * @description * `manage_units` - manage_units (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "manage_units";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsTranslationsCreateMergeMessageErrorComponent: {
      /**
       * @description * `merge_message` - merge_message (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "merge_message";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsTranslationsCreateMergeStyleErrorComponent: {
      /**
       * @description * `merge_style` - merge_style (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "merge_style";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    ComponentsTranslationsCreateNameErrorComponent: {
      /**
       * @description * `name` - name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsTranslationsCreateNewBaseErrorComponent: {
      /**
       * @description * `new_base` - new_base (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "new_base";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsTranslationsCreateNewLangErrorComponent: {
      /**
       * @description * `new_lang` - new_lang (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "new_lang";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    ComponentsTranslationsCreateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsTranslationsCreatePriorityErrorComponent: {
      /**
       * @description * `priority` - priority (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "priority";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "max_value" | "min_value" | "null";
      detail: string;
    };
    ComponentsTranslationsCreatePullMessageErrorComponent: {
      /**
       * @description * `pull_message` - pull_message (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "pull_message";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsTranslationsCreatePushBranchErrorComponent: {
      /**
       * @description * `push_branch` - push_branch (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "push_branch";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsTranslationsCreatePushErrorComponent: {
      /**
       * @description * `push` - push (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "push";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsTranslationsCreatePushOnCommitErrorComponent: {
      /**
       * @description * `push_on_commit` - push_on_commit (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "push_on_commit";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsTranslationsCreateRepoErrorComponent: {
      /**
       * @description * `repo` - repo (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "repo";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsTranslationsCreateReportSourceBugsErrorComponent: {
      /**
       * @description * `report_source_bugs` - report_source_bugs (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "report_source_bugs";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsTranslationsCreateRepowebErrorComponent: {
      /**
       * @description * `repoweb` - repoweb (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "repoweb";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsTranslationsCreateRestrictedErrorComponent: {
      /**
       * @description * `restricted` - restricted (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "restricted";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsTranslationsCreateScreenshotFilemaskErrorComponent: {
      /**
       * @description * `screenshot_filemask` - screenshot_filemask (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "screenshot_filemask";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsTranslationsCreateSecondaryLanguageErrorComponent: {
      /**
       * @description * `secondary_language` - secondary_language (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "secondary_language";
      /**
       * @description * `does_not_exist` - does_not_exist
       *     * `incorrect_type` - incorrect_type
       * @enum {string}
       */
      code: "does_not_exist" | "incorrect_type";
      detail: string;
    };
    ComponentsTranslationsCreateSlugErrorComponent: {
      /**
       * @description * `slug` - slug (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "slug";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsTranslationsCreateSourceLanguageCodeErrorComponent: {
      /**
       * @description * `source_language.code` - source_language.code (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.code";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsTranslationsCreateSourceLanguageDirectionErrorComponent: {
      /**
       * @description * `source_language.direction` - source_language.direction (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.direction";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    ComponentsTranslationsCreateSourceLanguageNameErrorComponent: {
      /**
       * @description * `source_language.name` - source_language.name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsTranslationsCreateSourceLanguageNonFieldErrorsErrorComponent: {
      /**
       * @description * `source_language.non_field_errors` - source_language.non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsTranslationsCreateSourceLanguagePluralFormulaErrorComponent: {
      /**
       * @description * `source_language.plural.formula` - source_language.plural.formula (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.plural.formula";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsTranslationsCreateSourceLanguagePluralNonFieldErrorsErrorComponent: {
      /**
       * @description * `source_language.plural.non_field_errors` - source_language.plural.non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.plural.non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsTranslationsCreateSourceLanguagePluralNumberErrorComponent: {
      /**
       * @description * `source_language.plural.number` - source_language.plural.number (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.plural.number";
      /**
       * @description * `invalid` - invalid
       *     * `max_string_length` - max_string_length
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_string_length"
        | "max_value"
        | "min_value"
        | "null";
      detail: string;
    };
    ComponentsTranslationsCreateSourceLanguagePluralSourceErrorComponent: {
      /**
       * @description * `source_language.plural.source` - source_language.plural.source (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.plural.source";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "max_value" | "min_value" | "null";
      detail: string;
    };
    ComponentsTranslationsCreateSourceLanguagePopulationErrorComponent: {
      /**
       * @description * `source_language.population` - source_language.population (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.population";
      /**
       * @description * `invalid` - invalid
       *     * `max_string_length` - max_string_length
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_string_length"
        | "max_value"
        | "min_value"
        | "null";
      detail: string;
    };
    ComponentsTranslationsCreateSuggestionAutoacceptErrorComponent: {
      /**
       * @description * `suggestion_autoaccept` - suggestion_autoaccept (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "suggestion_autoaccept";
      /**
       * @description * `invalid` - invalid
       *     * `max_string_length` - max_string_length
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_string_length"
        | "max_value"
        | "min_value"
        | "null";
      detail: string;
    };
    ComponentsTranslationsCreateSuggestionVotingErrorComponent: {
      /**
       * @description * `suggestion_voting` - suggestion_voting (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "suggestion_voting";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsTranslationsCreateTemplateErrorComponent: {
      /**
       * @description * `template` - template (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "template";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsTranslationsCreateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["ComponentsTranslationsCreateError"][];
    };
    ComponentsTranslationsCreateVariantRegexErrorComponent: {
      /**
       * @description * `variant_regex` - variant_regex (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "variant_regex";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsTranslationsCreateVcsErrorComponent: {
      /**
       * @description * `vcs` - vcs (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "vcs";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    ComponentsTranslationsCreateZipfileErrorComponent: {
      /**
       * @description * `zipfile` - zipfile (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "zipfile";
      /**
       * @description * `empty` - empty
       *     * `invalid` - invalid
       *     * `no_name` - no_name
       *     * `null` - null
       * @enum {string}
       */
      code: "empty" | "invalid" | "no_name" | "null";
      detail: string;
    };
    ComponentsTranslationsRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    ComponentsUpdateAddMessageErrorComponent: {
      /**
       * @description * `add_message` - add_message (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "add_message";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsUpdateAddonMessageErrorComponent: {
      /**
       * @description * `addon_message` - addon_message (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "addon_message";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsUpdateAgreementErrorComponent: {
      /**
       * @description * `agreement` - agreement (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "agreement";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsUpdateAllowTranslationPropagationErrorComponent: {
      /**
       * @description * `allow_translation_propagation` - allow_translation_propagation (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "allow_translation_propagation";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsUpdateAutoLockErrorErrorComponent: {
      /**
       * @description * `auto_lock_error` - auto_lock_error (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "auto_lock_error";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsUpdateBranchErrorComponent: {
      /**
       * @description * `branch` - branch (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "branch";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsUpdateCategoryErrorComponent: {
      /**
       * @description * `category` - category (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "category";
      /**
       * @description * `does_not_exist` - does_not_exist
       *     * `incorrect_match` - incorrect_match
       *     * `incorrect_type` - incorrect_type
       *     * `no_match` - no_match
       * @enum {string}
       */
      code:
        | "does_not_exist"
        | "incorrect_match"
        | "incorrect_type"
        | "no_match";
      detail: string;
    };
    ComponentsUpdateCheckFlagsErrorComponent: {
      /**
       * @description * `check_flags` - check_flags (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "check_flags";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsUpdateCommitMessageErrorComponent: {
      /**
       * @description * `commit_message` - commit_message (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "commit_message";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsUpdateCommitPendingAgeErrorComponent: {
      /**
       * @description * `commit_pending_age` - commit_pending_age (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "commit_pending_age";
      /**
       * @description * `invalid` - invalid
       *     * `max_string_length` - max_string_length
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_string_length"
        | "max_value"
        | "min_value"
        | "null";
      detail: string;
    };
    ComponentsUpdateDeleteMessageErrorComponent: {
      /**
       * @description * `delete_message` - delete_message (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "delete_message";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsUpdateDisableAutoshareErrorComponent: {
      /**
       * @description * `disable_autoshare` - disable_autoshare (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "disable_autoshare";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsUpdateDocfileErrorComponent: {
      /**
       * @description * `docfile` - docfile (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "docfile";
      /**
       * @description * `empty` - empty
       *     * `invalid` - invalid
       *     * `no_name` - no_name
       *     * `null` - null
       * @enum {string}
       */
      code: "empty" | "invalid" | "no_name" | "null";
      detail: string;
    };
    ComponentsUpdateEditTemplateErrorComponent: {
      /**
       * @description * `edit_template` - edit_template (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "edit_template";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsUpdateEnableSuggestionsErrorComponent: {
      /**
       * @description * `enable_suggestions` - enable_suggestions (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "enable_suggestions";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsUpdateEnforcedChecksErrorComponent: {
      /**
       * @description * `enforced_checks` - enforced_checks (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "enforced_checks";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsUpdateError:
      | components["schemas"]["ComponentsUpdateNonFieldErrorsErrorComponent"]
      | components["schemas"]["ComponentsUpdateNameErrorComponent"]
      | components["schemas"]["ComponentsUpdateSlugErrorComponent"]
      | components["schemas"]["ComponentsUpdateSourceLanguageNonFieldErrorsErrorComponent"]
      | components["schemas"]["ComponentsUpdateSourceLanguageCodeErrorComponent"]
      | components["schemas"]["ComponentsUpdateSourceLanguageNameErrorComponent"]
      | components["schemas"]["ComponentsUpdateSourceLanguagePluralNonFieldErrorsErrorComponent"]
      | components["schemas"]["ComponentsUpdateSourceLanguagePluralSourceErrorComponent"]
      | components["schemas"]["ComponentsUpdateSourceLanguagePluralNumberErrorComponent"]
      | components["schemas"]["ComponentsUpdateSourceLanguagePluralFormulaErrorComponent"]
      | components["schemas"]["ComponentsUpdateSourceLanguageDirectionErrorComponent"]
      | components["schemas"]["ComponentsUpdateSourceLanguagePopulationErrorComponent"]
      | components["schemas"]["ComponentsUpdateVcsErrorComponent"]
      | components["schemas"]["ComponentsUpdateRepoErrorComponent"]
      | components["schemas"]["ComponentsUpdateGitExportErrorComponent"]
      | components["schemas"]["ComponentsUpdateBranchErrorComponent"]
      | components["schemas"]["ComponentsUpdatePushBranchErrorComponent"]
      | components["schemas"]["ComponentsUpdateFilemaskErrorComponent"]
      | components["schemas"]["ComponentsUpdateScreenshotFilemaskErrorComponent"]
      | components["schemas"]["ComponentsUpdateTemplateErrorComponent"]
      | components["schemas"]["ComponentsUpdateEditTemplateErrorComponent"]
      | components["schemas"]["ComponentsUpdateIntermediateErrorComponent"]
      | components["schemas"]["ComponentsUpdateNewBaseErrorComponent"]
      | components["schemas"]["ComponentsUpdateFileFormatErrorComponent"]
      | components["schemas"]["ComponentsUpdateLicenseErrorComponent"]
      | components["schemas"]["ComponentsUpdateAgreementErrorComponent"]
      | components["schemas"]["ComponentsUpdateNewLangErrorComponent"]
      | components["schemas"]["ComponentsUpdateLanguageCodeStyleErrorComponent"]
      | components["schemas"]["ComponentsUpdatePushErrorComponent"]
      | components["schemas"]["ComponentsUpdateCheckFlagsErrorComponent"]
      | components["schemas"]["ComponentsUpdatePriorityErrorComponent"]
      | components["schemas"]["ComponentsUpdateEnforcedChecksErrorComponent"]
      | components["schemas"]["ComponentsUpdateRestrictedErrorComponent"]
      | components["schemas"]["ComponentsUpdateRepowebErrorComponent"]
      | components["schemas"]["ComponentsUpdateReportSourceBugsErrorComponent"]
      | components["schemas"]["ComponentsUpdateMergeStyleErrorComponent"]
      | components["schemas"]["ComponentsUpdateCommitMessageErrorComponent"]
      | components["schemas"]["ComponentsUpdateAddMessageErrorComponent"]
      | components["schemas"]["ComponentsUpdateDeleteMessageErrorComponent"]
      | components["schemas"]["ComponentsUpdateMergeMessageErrorComponent"]
      | components["schemas"]["ComponentsUpdateAddonMessageErrorComponent"]
      | components["schemas"]["ComponentsUpdatePullMessageErrorComponent"]
      | components["schemas"]["ComponentsUpdateAllowTranslationPropagationErrorComponent"]
      | components["schemas"]["ComponentsUpdateManageUnitsErrorComponent"]
      | components["schemas"]["ComponentsUpdateEnableSuggestionsErrorComponent"]
      | components["schemas"]["ComponentsUpdateSuggestionVotingErrorComponent"]
      | components["schemas"]["ComponentsUpdateSuggestionAutoacceptErrorComponent"]
      | components["schemas"]["ComponentsUpdatePushOnCommitErrorComponent"]
      | components["schemas"]["ComponentsUpdateCommitPendingAgeErrorComponent"]
      | components["schemas"]["ComponentsUpdateAutoLockErrorErrorComponent"]
      | components["schemas"]["ComponentsUpdateLanguageRegexErrorComponent"]
      | components["schemas"]["ComponentsUpdateKeyFilterErrorComponent"]
      | components["schemas"]["ComponentsUpdateSecondaryLanguageErrorComponent"]
      | components["schemas"]["ComponentsUpdateVariantRegexErrorComponent"]
      | components["schemas"]["ComponentsUpdateZipfileErrorComponent"]
      | components["schemas"]["ComponentsUpdateDocfileErrorComponent"]
      | components["schemas"]["ComponentsUpdateIsGlossaryErrorComponent"]
      | components["schemas"]["ComponentsUpdateGlossaryColorErrorComponent"]
      | components["schemas"]["ComponentsUpdateDisableAutoshareErrorComponent"]
      | components["schemas"]["ComponentsUpdateCategoryErrorComponent"];
    ComponentsUpdateErrorResponse400:
      | components["schemas"]["ComponentsUpdateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    ComponentsUpdateFileFormatErrorComponent: {
      /**
       * @description * `file_format` - file_format (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "file_format";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       *     * `required` - required
       * @enum {string}
       */
      code: "invalid_choice" | "null" | "required";
      detail: string;
    };
    ComponentsUpdateFilemaskErrorComponent: {
      /**
       * @description * `filemask` - filemask (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "filemask";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsUpdateGitExportErrorComponent: {
      /**
       * @description * `git_export` - git_export (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "git_export";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsUpdateGlossaryColorErrorComponent: {
      /**
       * @description * `glossary_color` - glossary_color (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "glossary_color";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    ComponentsUpdateIntermediateErrorComponent: {
      /**
       * @description * `intermediate` - intermediate (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "intermediate";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsUpdateIsGlossaryErrorComponent: {
      /**
       * @description * `is_glossary` - is_glossary (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "is_glossary";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsUpdateKeyFilterErrorComponent: {
      /**
       * @description * `key_filter` - key_filter (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "key_filter";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsUpdateLanguageCodeStyleErrorComponent: {
      /**
       * @description * `language_code_style` - language_code_style (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "language_code_style";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    ComponentsUpdateLanguageRegexErrorComponent: {
      /**
       * @description * `language_regex` - language_regex (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "language_regex";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsUpdateLicenseErrorComponent: {
      /**
       * @description * `license` - license (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "license";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    ComponentsUpdateManageUnitsErrorComponent: {
      /**
       * @description * `manage_units` - manage_units (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "manage_units";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsUpdateMergeMessageErrorComponent: {
      /**
       * @description * `merge_message` - merge_message (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "merge_message";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsUpdateMergeStyleErrorComponent: {
      /**
       * @description * `merge_style` - merge_style (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "merge_style";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    ComponentsUpdateNameErrorComponent: {
      /**
       * @description * `name` - name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsUpdateNewBaseErrorComponent: {
      /**
       * @description * `new_base` - new_base (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "new_base";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsUpdateNewLangErrorComponent: {
      /**
       * @description * `new_lang` - new_lang (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "new_lang";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    ComponentsUpdateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsUpdatePriorityErrorComponent: {
      /**
       * @description * `priority` - priority (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "priority";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "max_value" | "min_value" | "null";
      detail: string;
    };
    ComponentsUpdatePullMessageErrorComponent: {
      /**
       * @description * `pull_message` - pull_message (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "pull_message";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsUpdatePushBranchErrorComponent: {
      /**
       * @description * `push_branch` - push_branch (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "push_branch";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsUpdatePushErrorComponent: {
      /**
       * @description * `push` - push (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "push";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsUpdatePushOnCommitErrorComponent: {
      /**
       * @description * `push_on_commit` - push_on_commit (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "push_on_commit";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsUpdateRepoErrorComponent: {
      /**
       * @description * `repo` - repo (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "repo";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsUpdateReportSourceBugsErrorComponent: {
      /**
       * @description * `report_source_bugs` - report_source_bugs (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "report_source_bugs";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsUpdateRepowebErrorComponent: {
      /**
       * @description * `repoweb` - repoweb (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "repoweb";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsUpdateRestrictedErrorComponent: {
      /**
       * @description * `restricted` - restricted (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "restricted";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsUpdateScreenshotFilemaskErrorComponent: {
      /**
       * @description * `screenshot_filemask` - screenshot_filemask (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "screenshot_filemask";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsUpdateSecondaryLanguageErrorComponent: {
      /**
       * @description * `secondary_language` - secondary_language (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "secondary_language";
      /**
       * @description * `does_not_exist` - does_not_exist
       *     * `incorrect_type` - incorrect_type
       * @enum {string}
       */
      code: "does_not_exist" | "incorrect_type";
      detail: string;
    };
    ComponentsUpdateSlugErrorComponent: {
      /**
       * @description * `slug` - slug (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "slug";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsUpdateSourceLanguageCodeErrorComponent: {
      /**
       * @description * `source_language.code` - source_language.code (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.code";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsUpdateSourceLanguageDirectionErrorComponent: {
      /**
       * @description * `source_language.direction` - source_language.direction (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.direction";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    ComponentsUpdateSourceLanguageNameErrorComponent: {
      /**
       * @description * `source_language.name` - source_language.name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsUpdateSourceLanguageNonFieldErrorsErrorComponent: {
      /**
       * @description * `source_language.non_field_errors` - source_language.non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsUpdateSourceLanguagePluralFormulaErrorComponent: {
      /**
       * @description * `source_language.plural.formula` - source_language.plural.formula (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.plural.formula";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsUpdateSourceLanguagePluralNonFieldErrorsErrorComponent: {
      /**
       * @description * `source_language.plural.non_field_errors` - source_language.plural.non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.plural.non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsUpdateSourceLanguagePluralNumberErrorComponent: {
      /**
       * @description * `source_language.plural.number` - source_language.plural.number (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.plural.number";
      /**
       * @description * `invalid` - invalid
       *     * `max_string_length` - max_string_length
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_string_length"
        | "max_value"
        | "min_value"
        | "null";
      detail: string;
    };
    ComponentsUpdateSourceLanguagePluralSourceErrorComponent: {
      /**
       * @description * `source_language.plural.source` - source_language.plural.source (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.plural.source";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "max_value" | "min_value" | "null";
      detail: string;
    };
    ComponentsUpdateSourceLanguagePopulationErrorComponent: {
      /**
       * @description * `source_language.population` - source_language.population (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.population";
      /**
       * @description * `invalid` - invalid
       *     * `max_string_length` - max_string_length
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_string_length"
        | "max_value"
        | "min_value"
        | "null";
      detail: string;
    };
    ComponentsUpdateSuggestionAutoacceptErrorComponent: {
      /**
       * @description * `suggestion_autoaccept` - suggestion_autoaccept (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "suggestion_autoaccept";
      /**
       * @description * `invalid` - invalid
       *     * `max_string_length` - max_string_length
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_string_length"
        | "max_value"
        | "min_value"
        | "null";
      detail: string;
    };
    ComponentsUpdateSuggestionVotingErrorComponent: {
      /**
       * @description * `suggestion_voting` - suggestion_voting (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "suggestion_voting";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ComponentsUpdateTemplateErrorComponent: {
      /**
       * @description * `template` - template (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "template";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsUpdateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["ComponentsUpdateError"][];
    };
    ComponentsUpdateVariantRegexErrorComponent: {
      /**
       * @description * `variant_regex` - variant_regex (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "variant_regex";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ComponentsUpdateVcsErrorComponent: {
      /**
       * @description * `vcs` - vcs (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "vcs";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    ComponentsUpdateZipfileErrorComponent: {
      /**
       * @description * `zipfile` - zipfile (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "zipfile";
      /**
       * @description * `empty` - empty
       *     * `invalid` - invalid
       *     * `no_name` - no_name
       *     * `null` - null
       * @enum {string}
       */
      code: "empty" | "invalid" | "no_name" | "null";
      detail: string;
    };
    /**
     * @description * `` -
     *     * `ignore` - ignore
     *     * `replace-translated` - replace-translated
     *     * `replace-approved` - replace-approved
     * @enum {string}
     */
    ConflictsEnum: "ignore" | "replace-translated" | "replace-approved";
    /**
     * @description * `` - Automatically detect text direction
     *     * `ltr` - Left to right
     *     * `rtl` - Right to left
     * @enum {string}
     */
    DirectionEnum: "ltr" | "rtl";
    Error401: {
      code: components["schemas"]["ErrorCode401Enum"];
      detail: string;
      attr: string | null;
    };
    Error403: {
      code: components["schemas"]["ErrorCode403Enum"];
      detail: string;
      attr: string | null;
    };
    Error404: {
      code: components["schemas"]["ErrorCode404Enum"];
      detail: string;
      attr: string | null;
    };
    Error405: {
      code: components["schemas"]["ErrorCode405Enum"];
      detail: string;
      attr: string | null;
    };
    Error406: {
      code: components["schemas"]["ErrorCode406Enum"];
      detail: string;
      attr: string | null;
    };
    Error415: {
      code: components["schemas"]["ErrorCode415Enum"];
      detail: string;
      attr: string | null;
    };
    Error423: {
      code: components["schemas"]["ErrorCode423Enum"];
      detail: string;
      attr: string | null;
    };
    Error429: {
      code: components["schemas"]["ErrorCode429Enum"];
      detail: string;
      attr: string | null;
    };
    Error500: {
      code: components["schemas"]["ErrorCode500Enum"];
      detail: string;
      attr: string | null;
    };
    /**
     * @description * `authentication_failed` - Authentication Failed
     *     * `not_authenticated` - Not Authenticated
     * @enum {string}
     */
    ErrorCode401Enum: "authentication_failed" | "not_authenticated";
    /**
     * @description * `permission_denied` - Permission Denied
     * @enum {string}
     */
    ErrorCode403Enum: "permission_denied";
    /**
     * @description * `not_found` - Not Found
     * @enum {string}
     */
    ErrorCode404Enum: "not_found";
    /**
     * @description * `method_not_allowed` - Method Not Allowed
     * @enum {string}
     */
    ErrorCode405Enum: "method_not_allowed";
    /**
     * @description * `not_acceptable` - Not Acceptable
     * @enum {string}
     */
    ErrorCode406Enum: "not_acceptable";
    /**
     * @description * `unsupported_media_type` - Unsupported Media Type
     * @enum {string}
     */
    ErrorCode415Enum: "unsupported_media_type";
    /**
     * @description * `repository-locked` - Repository Locked
     *     * `component-locked` - Component Locked
     *     * `unknown-locked` - Unknown Locked
     * @enum {string}
     */
    ErrorCode423Enum:
      | "repository-locked"
      | "component-locked"
      | "unknown-locked";
    /**
     * @description * `throttled` - Throttled
     * @enum {string}
     */
    ErrorCode429Enum: "throttled";
    /**
     * @description * `error` - Error
     * @enum {string}
     */
    ErrorCode500Enum: "error";
    ErrorResponse401: {
      type: components["schemas"]["ClientErrorEnum"];
      errors: components["schemas"]["Error401"][];
    };
    ErrorResponse403: {
      type: components["schemas"]["ClientErrorEnum"];
      errors: components["schemas"]["Error403"][];
    };
    ErrorResponse404: {
      type: components["schemas"]["ClientErrorEnum"];
      errors: components["schemas"]["Error404"][];
    };
    ErrorResponse405: {
      type: components["schemas"]["ClientErrorEnum"];
      errors: components["schemas"]["Error405"][];
    };
    ErrorResponse406: {
      type: components["schemas"]["ClientErrorEnum"];
      errors: components["schemas"]["Error406"][];
    };
    ErrorResponse415: {
      type: components["schemas"]["ClientErrorEnum"];
      errors: components["schemas"]["Error415"][];
    };
    ErrorResponse423: {
      type: components["schemas"]["ServerErrorEnum"];
      errors: components["schemas"]["Error423"][];
    };
    ErrorResponse429: {
      type: components["schemas"]["ClientErrorEnum"];
      errors: components["schemas"]["Error429"][];
    };
    ErrorResponse500: {
      type: components["schemas"]["ServerErrorEnum"];
      errors: components["schemas"]["Error500"][];
    };
    /**
     * @description * `appstore` - App store metadata files
     *     * `arb` - ARB file
     *     * `aresource` - Android String Resource
     *     * `ass` - Advanced SubStation Alpha subtitle file
     *     * `csv` - CSV file
     *     * `csv-multi-utf-8` - Multivalue CSV file (UTF-8)
     *     * `csv-simple` - Simple CSV file
     *     * `csv-simple-iso` - Simple CSV file (ISO-8859-1)
     *     * `csv-simple-utf-8` - Simple CSV file (UTF-8)
     *     * `csv-utf-8` - CSV file (UTF-8)
     *     * `dokuwiki` - DokuWiki text file
     *     * `dtd` - DTD file
     *     * `flatxml` - Flat XML file
     *     * `fluent` - Fluent file
     *     * `formatjs` - Format.JS JSON file
     *     * `go-i18n-json` - go-i18n v1 JSON file
     *     * `go-i18n-json-v2` - go-i18n v2 JSON file
     *     * `gotext` - gotext JSON file
     *     * `gwt` - GWT properties (UTF-8)
     *     * `gwt-iso` - GWT properties (ISO-8859-1)
     *     * `html` - HTML file
     *     * `i18next` - i18next JSON file v3
     *     * `i18nextv4` - i18next JSON file v4
     *     * `idml` - IDML file
     *     * `ini` - INI file
     *     * `islu` - Inno Setup INI file
     *     * `joomla` - Joomla language file
     *     * `json` - JSON file
     *     * `json-nested` - JSON nested structure file
     *     * `laravel` - Laravel PHP strings
     *     * `markdown` - Markdown file
     *     * `mediawiki` - MediaWiki text file
     *     * `mi18n-lang` - @draggable/i18n lang file
     *     * `moko-resource` - Mobile Kotlin Resource
     *     * `odf` - OpenDocument file
     *     * `php` - PHP strings
     *     * `plainxliff` - XLIFF 1.2 translation file
     *     * `po` - gettext PO file
     *     * `po-mono` - gettext PO file (monolingual)
     *     * `poxliff` - XLIFF 1.2 with gettext extensions
     *     * `properties` - Java Properties (ISO 8859-1)
     *     * `properties-utf16` - Java Properties (UTF-16)
     *     * `properties-utf8` - Java Properties (UTF-8)
     *     * `rc` - RC file
     *     * `resourcedictionary` - ResourceDictionary file
     *     * `resx` - .NET resource file
     *     * `ruby-yaml` - Ruby YAML file
     *     * `srt` - SubRip subtitle file
     *     * `ssa` - SubStation Alpha subtitle file
     *     * `strings` - iOS strings (UTF-16)
     *     * `strings-utf8` - iOS strings (UTF-8)
     *     * `stringsdict` - Stringsdict file
     *     * `sub` - MicroDVD subtitle file
     *     * `tbx` - TermBase eXchange file
     *     * `ts` - Qt Linguist translation file
     *     * `txt` - Plain text file
     *     * `webextension` - WebExtension JSON file
     *     * `xliff` - XLIFF 1.2 with placeables support
     *     * `xlsx` - Excel Open XML
     *     * `xwiki-fullpage` - XWiki Full Page
     *     * `xwiki-java-properties` - XWiki Java Properties
     *     * `xwiki-page-properties` - XWiki Page Properties
     *     * `yaml` - YAML file
     * @enum {string}
     */
    FileFormatEnum:
      | "appstore"
      | "arb"
      | "aresource"
      | "ass"
      | "csv"
      | "csv-multi-utf-8"
      | "csv-simple"
      | "csv-simple-iso"
      | "csv-simple-utf-8"
      | "csv-utf-8"
      | "dokuwiki"
      | "dtd"
      | "flatxml"
      | "fluent"
      | "formatjs"
      | "go-i18n-json"
      | "go-i18n-json-v2"
      | "gotext"
      | "gwt"
      | "gwt-iso"
      | "html"
      | "i18next"
      | "i18nextv4"
      | "idml"
      | "ini"
      | "islu"
      | "joomla"
      | "json"
      | "json-nested"
      | "laravel"
      | "markdown"
      | "mediawiki"
      | "mi18n-lang"
      | "moko-resource"
      | "odf"
      | "php"
      | "plainxliff"
      | "po"
      | "po-mono"
      | "poxliff"
      | "properties"
      | "properties-utf16"
      | "properties-utf8"
      | "rc"
      | "resourcedictionary"
      | "resx"
      | "ruby-yaml"
      | "srt"
      | "ssa"
      | "strings"
      | "strings-utf8"
      | "stringsdict"
      | "sub"
      | "tbx"
      | "ts"
      | "txt"
      | "webextension"
      | "xliff"
      | "xlsx"
      | "xwiki-fullpage"
      | "xwiki-java-properties"
      | "xwiki-page-properties"
      | "yaml";
    /**
     * @description * `0` - No notification
     *     * `1` - Instant notification
     *     * `2` - Daily digest
     *     * `3` - Weekly digest
     *     * `4` - Monthly digest
     * @enum {integer}
     */
    FrequencyEnum: 0 | 1 | 2 | 3 | 4;
    /**
     * @description * `` -
     *     * `process` - process
     *     * `approve` - approve
     * @enum {string}
     */
    FuzzyEnum: "process" | "approve";
    Group: {
      readonly id: number;
      name: string;
      /** Format: uri */
      defining_project?: string;
      project_selection?: components["schemas"]["ProjectSelectionEnum"];
      language_selection?: components["schemas"]["LanguageSelectionEnum"];
      /** Format: uri */
      readonly url: string;
      readonly roles: string[];
      readonly languages: string[];
      readonly projects: string[];
      readonly componentlists: string[];
      readonly components: string[];
      /**
       * Enforced two-factor authentication
       * @description Requires users to have two-factor authentication configured.
       */
      enforced_2fa?: boolean;
    };
    GroupsAdminsCreateDefiningProjectErrorComponent: {
      /**
       * @description * `defining_project` - defining_project (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "defining_project";
      /**
       * @description * `does_not_exist` - does_not_exist
       *     * `incorrect_match` - incorrect_match
       *     * `incorrect_type` - incorrect_type
       *     * `no_match` - no_match
       *     * `null` - null
       * @enum {string}
       */
      code:
        | "does_not_exist"
        | "incorrect_match"
        | "incorrect_type"
        | "no_match"
        | "null";
      detail: string;
    };
    GroupsAdminsCreateEnforced2faErrorComponent: {
      /**
       * @description * `enforced_2fa` - enforced_2fa (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "enforced_2fa";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    GroupsAdminsCreateError:
      | components["schemas"]["GroupsAdminsCreateNonFieldErrorsErrorComponent"]
      | components["schemas"]["GroupsAdminsCreateNameErrorComponent"]
      | components["schemas"]["GroupsAdminsCreateDefiningProjectErrorComponent"]
      | components["schemas"]["GroupsAdminsCreateProjectSelectionErrorComponent"]
      | components["schemas"]["GroupsAdminsCreateLanguageSelectionErrorComponent"]
      | components["schemas"]["GroupsAdminsCreateEnforced2faErrorComponent"];
    GroupsAdminsCreateErrorResponse400:
      | components["schemas"]["GroupsAdminsCreateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    GroupsAdminsCreateLanguageSelectionErrorComponent: {
      /**
       * @description * `language_selection` - language_selection (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "language_selection";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "max_value" | "min_value" | "null";
      detail: string;
    };
    GroupsAdminsCreateNameErrorComponent: {
      /**
       * @description * `name` - name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    GroupsAdminsCreateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    GroupsAdminsCreateProjectSelectionErrorComponent: {
      /**
       * @description * `project_selection` - project_selection (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "project_selection";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "max_value" | "min_value" | "null";
      detail: string;
    };
    GroupsAdminsCreateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["GroupsAdminsCreateError"][];
    };
    GroupsAdminsDestroyErrorResponse400: components["schemas"]["ParseErrorResponse"];
    GroupsComponentlistsCreateDefiningProjectErrorComponent: {
      /**
       * @description * `defining_project` - defining_project (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "defining_project";
      /**
       * @description * `does_not_exist` - does_not_exist
       *     * `incorrect_match` - incorrect_match
       *     * `incorrect_type` - incorrect_type
       *     * `no_match` - no_match
       *     * `null` - null
       * @enum {string}
       */
      code:
        | "does_not_exist"
        | "incorrect_match"
        | "incorrect_type"
        | "no_match"
        | "null";
      detail: string;
    };
    GroupsComponentlistsCreateEnforced2faErrorComponent: {
      /**
       * @description * `enforced_2fa` - enforced_2fa (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "enforced_2fa";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    GroupsComponentlistsCreateError:
      | components["schemas"]["GroupsComponentlistsCreateNonFieldErrorsErrorComponent"]
      | components["schemas"]["GroupsComponentlistsCreateNameErrorComponent"]
      | components["schemas"]["GroupsComponentlistsCreateDefiningProjectErrorComponent"]
      | components["schemas"]["GroupsComponentlistsCreateProjectSelectionErrorComponent"]
      | components["schemas"]["GroupsComponentlistsCreateLanguageSelectionErrorComponent"]
      | components["schemas"]["GroupsComponentlistsCreateEnforced2faErrorComponent"];
    GroupsComponentlistsCreateErrorResponse400:
      | components["schemas"]["GroupsComponentlistsCreateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    GroupsComponentlistsCreateLanguageSelectionErrorComponent: {
      /**
       * @description * `language_selection` - language_selection (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "language_selection";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "max_value" | "min_value" | "null";
      detail: string;
    };
    GroupsComponentlistsCreateNameErrorComponent: {
      /**
       * @description * `name` - name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    GroupsComponentlistsCreateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    GroupsComponentlistsCreateProjectSelectionErrorComponent: {
      /**
       * @description * `project_selection` - project_selection (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "project_selection";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "max_value" | "min_value" | "null";
      detail: string;
    };
    GroupsComponentlistsCreateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["GroupsComponentlistsCreateError"][];
    };
    GroupsComponentlistsDestroyErrorResponse400: components["schemas"]["ParseErrorResponse"];
    GroupsComponentsCreateDefiningProjectErrorComponent: {
      /**
       * @description * `defining_project` - defining_project (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "defining_project";
      /**
       * @description * `does_not_exist` - does_not_exist
       *     * `incorrect_match` - incorrect_match
       *     * `incorrect_type` - incorrect_type
       *     * `no_match` - no_match
       *     * `null` - null
       * @enum {string}
       */
      code:
        | "does_not_exist"
        | "incorrect_match"
        | "incorrect_type"
        | "no_match"
        | "null";
      detail: string;
    };
    GroupsComponentsCreateEnforced2faErrorComponent: {
      /**
       * @description * `enforced_2fa` - enforced_2fa (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "enforced_2fa";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    GroupsComponentsCreateError:
      | components["schemas"]["GroupsComponentsCreateNonFieldErrorsErrorComponent"]
      | components["schemas"]["GroupsComponentsCreateNameErrorComponent"]
      | components["schemas"]["GroupsComponentsCreateDefiningProjectErrorComponent"]
      | components["schemas"]["GroupsComponentsCreateProjectSelectionErrorComponent"]
      | components["schemas"]["GroupsComponentsCreateLanguageSelectionErrorComponent"]
      | components["schemas"]["GroupsComponentsCreateEnforced2faErrorComponent"];
    GroupsComponentsCreateErrorResponse400:
      | components["schemas"]["GroupsComponentsCreateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    GroupsComponentsCreateLanguageSelectionErrorComponent: {
      /**
       * @description * `language_selection` - language_selection (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "language_selection";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "max_value" | "min_value" | "null";
      detail: string;
    };
    GroupsComponentsCreateNameErrorComponent: {
      /**
       * @description * `name` - name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    GroupsComponentsCreateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    GroupsComponentsCreateProjectSelectionErrorComponent: {
      /**
       * @description * `project_selection` - project_selection (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "project_selection";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "max_value" | "min_value" | "null";
      detail: string;
    };
    GroupsComponentsCreateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["GroupsComponentsCreateError"][];
    };
    GroupsComponentsDestroyErrorResponse400: components["schemas"]["ParseErrorResponse"];
    GroupsCreateDefiningProjectErrorComponent: {
      /**
       * @description * `defining_project` - defining_project (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "defining_project";
      /**
       * @description * `does_not_exist` - does_not_exist
       *     * `incorrect_match` - incorrect_match
       *     * `incorrect_type` - incorrect_type
       *     * `no_match` - no_match
       *     * `null` - null
       * @enum {string}
       */
      code:
        | "does_not_exist"
        | "incorrect_match"
        | "incorrect_type"
        | "no_match"
        | "null";
      detail: string;
    };
    GroupsCreateEnforced2faErrorComponent: {
      /**
       * @description * `enforced_2fa` - enforced_2fa (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "enforced_2fa";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    GroupsCreateError:
      | components["schemas"]["GroupsCreateNonFieldErrorsErrorComponent"]
      | components["schemas"]["GroupsCreateNameErrorComponent"]
      | components["schemas"]["GroupsCreateDefiningProjectErrorComponent"]
      | components["schemas"]["GroupsCreateProjectSelectionErrorComponent"]
      | components["schemas"]["GroupsCreateLanguageSelectionErrorComponent"]
      | components["schemas"]["GroupsCreateEnforced2faErrorComponent"];
    GroupsCreateErrorResponse400:
      | components["schemas"]["GroupsCreateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    GroupsCreateLanguageSelectionErrorComponent: {
      /**
       * @description * `language_selection` - language_selection (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "language_selection";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "max_value" | "min_value" | "null";
      detail: string;
    };
    GroupsCreateNameErrorComponent: {
      /**
       * @description * `name` - name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    GroupsCreateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    GroupsCreateProjectSelectionErrorComponent: {
      /**
       * @description * `project_selection` - project_selection (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "project_selection";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "max_value" | "min_value" | "null";
      detail: string;
    };
    GroupsCreateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["GroupsCreateError"][];
    };
    GroupsDestroyErrorResponse400: components["schemas"]["ParseErrorResponse"];
    GroupsLanguagesCreateDefiningProjectErrorComponent: {
      /**
       * @description * `defining_project` - defining_project (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "defining_project";
      /**
       * @description * `does_not_exist` - does_not_exist
       *     * `incorrect_match` - incorrect_match
       *     * `incorrect_type` - incorrect_type
       *     * `no_match` - no_match
       *     * `null` - null
       * @enum {string}
       */
      code:
        | "does_not_exist"
        | "incorrect_match"
        | "incorrect_type"
        | "no_match"
        | "null";
      detail: string;
    };
    GroupsLanguagesCreateEnforced2faErrorComponent: {
      /**
       * @description * `enforced_2fa` - enforced_2fa (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "enforced_2fa";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    GroupsLanguagesCreateError:
      | components["schemas"]["GroupsLanguagesCreateNonFieldErrorsErrorComponent"]
      | components["schemas"]["GroupsLanguagesCreateNameErrorComponent"]
      | components["schemas"]["GroupsLanguagesCreateDefiningProjectErrorComponent"]
      | components["schemas"]["GroupsLanguagesCreateProjectSelectionErrorComponent"]
      | components["schemas"]["GroupsLanguagesCreateLanguageSelectionErrorComponent"]
      | components["schemas"]["GroupsLanguagesCreateEnforced2faErrorComponent"];
    GroupsLanguagesCreateErrorResponse400:
      | components["schemas"]["GroupsLanguagesCreateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    GroupsLanguagesCreateLanguageSelectionErrorComponent: {
      /**
       * @description * `language_selection` - language_selection (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "language_selection";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "max_value" | "min_value" | "null";
      detail: string;
    };
    GroupsLanguagesCreateNameErrorComponent: {
      /**
       * @description * `name` - name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    GroupsLanguagesCreateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    GroupsLanguagesCreateProjectSelectionErrorComponent: {
      /**
       * @description * `project_selection` - project_selection (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "project_selection";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "max_value" | "min_value" | "null";
      detail: string;
    };
    GroupsLanguagesCreateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["GroupsLanguagesCreateError"][];
    };
    GroupsLanguagesDestroyErrorResponse400: components["schemas"]["ParseErrorResponse"];
    GroupsListErrorResponse400: components["schemas"]["ParseErrorResponse"];
    GroupsPartialUpdateDefiningProjectErrorComponent: {
      /**
       * @description * `defining_project` - defining_project (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "defining_project";
      /**
       * @description * `does_not_exist` - does_not_exist
       *     * `incorrect_match` - incorrect_match
       *     * `incorrect_type` - incorrect_type
       *     * `no_match` - no_match
       *     * `null` - null
       * @enum {string}
       */
      code:
        | "does_not_exist"
        | "incorrect_match"
        | "incorrect_type"
        | "no_match"
        | "null";
      detail: string;
    };
    GroupsPartialUpdateEnforced2faErrorComponent: {
      /**
       * @description * `enforced_2fa` - enforced_2fa (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "enforced_2fa";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    GroupsPartialUpdateError:
      | components["schemas"]["GroupsPartialUpdateNonFieldErrorsErrorComponent"]
      | components["schemas"]["GroupsPartialUpdateNameErrorComponent"]
      | components["schemas"]["GroupsPartialUpdateDefiningProjectErrorComponent"]
      | components["schemas"]["GroupsPartialUpdateProjectSelectionErrorComponent"]
      | components["schemas"]["GroupsPartialUpdateLanguageSelectionErrorComponent"]
      | components["schemas"]["GroupsPartialUpdateEnforced2faErrorComponent"];
    GroupsPartialUpdateErrorResponse400:
      | components["schemas"]["GroupsPartialUpdateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    GroupsPartialUpdateLanguageSelectionErrorComponent: {
      /**
       * @description * `language_selection` - language_selection (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "language_selection";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "max_value" | "min_value" | "null";
      detail: string;
    };
    GroupsPartialUpdateNameErrorComponent: {
      /**
       * @description * `name` - name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    GroupsPartialUpdateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    GroupsPartialUpdateProjectSelectionErrorComponent: {
      /**
       * @description * `project_selection` - project_selection (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "project_selection";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "max_value" | "min_value" | "null";
      detail: string;
    };
    GroupsPartialUpdateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["GroupsPartialUpdateError"][];
    };
    GroupsProjectsCreateDefiningProjectErrorComponent: {
      /**
       * @description * `defining_project` - defining_project (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "defining_project";
      /**
       * @description * `does_not_exist` - does_not_exist
       *     * `incorrect_match` - incorrect_match
       *     * `incorrect_type` - incorrect_type
       *     * `no_match` - no_match
       *     * `null` - null
       * @enum {string}
       */
      code:
        | "does_not_exist"
        | "incorrect_match"
        | "incorrect_type"
        | "no_match"
        | "null";
      detail: string;
    };
    GroupsProjectsCreateEnforced2faErrorComponent: {
      /**
       * @description * `enforced_2fa` - enforced_2fa (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "enforced_2fa";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    GroupsProjectsCreateError:
      | components["schemas"]["GroupsProjectsCreateNonFieldErrorsErrorComponent"]
      | components["schemas"]["GroupsProjectsCreateNameErrorComponent"]
      | components["schemas"]["GroupsProjectsCreateDefiningProjectErrorComponent"]
      | components["schemas"]["GroupsProjectsCreateProjectSelectionErrorComponent"]
      | components["schemas"]["GroupsProjectsCreateLanguageSelectionErrorComponent"]
      | components["schemas"]["GroupsProjectsCreateEnforced2faErrorComponent"];
    GroupsProjectsCreateErrorResponse400:
      | components["schemas"]["GroupsProjectsCreateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    GroupsProjectsCreateLanguageSelectionErrorComponent: {
      /**
       * @description * `language_selection` - language_selection (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "language_selection";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "max_value" | "min_value" | "null";
      detail: string;
    };
    GroupsProjectsCreateNameErrorComponent: {
      /**
       * @description * `name` - name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    GroupsProjectsCreateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    GroupsProjectsCreateProjectSelectionErrorComponent: {
      /**
       * @description * `project_selection` - project_selection (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "project_selection";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "max_value" | "min_value" | "null";
      detail: string;
    };
    GroupsProjectsCreateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["GroupsProjectsCreateError"][];
    };
    GroupsProjectsDestroyErrorResponse400: components["schemas"]["ParseErrorResponse"];
    GroupsRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    GroupsRolesCreateDefiningProjectErrorComponent: {
      /**
       * @description * `defining_project` - defining_project (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "defining_project";
      /**
       * @description * `does_not_exist` - does_not_exist
       *     * `incorrect_match` - incorrect_match
       *     * `incorrect_type` - incorrect_type
       *     * `no_match` - no_match
       *     * `null` - null
       * @enum {string}
       */
      code:
        | "does_not_exist"
        | "incorrect_match"
        | "incorrect_type"
        | "no_match"
        | "null";
      detail: string;
    };
    GroupsRolesCreateEnforced2faErrorComponent: {
      /**
       * @description * `enforced_2fa` - enforced_2fa (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "enforced_2fa";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    GroupsRolesCreateError:
      | components["schemas"]["GroupsRolesCreateNonFieldErrorsErrorComponent"]
      | components["schemas"]["GroupsRolesCreateNameErrorComponent"]
      | components["schemas"]["GroupsRolesCreateDefiningProjectErrorComponent"]
      | components["schemas"]["GroupsRolesCreateProjectSelectionErrorComponent"]
      | components["schemas"]["GroupsRolesCreateLanguageSelectionErrorComponent"]
      | components["schemas"]["GroupsRolesCreateEnforced2faErrorComponent"];
    GroupsRolesCreateErrorResponse400:
      | components["schemas"]["GroupsRolesCreateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    GroupsRolesCreateLanguageSelectionErrorComponent: {
      /**
       * @description * `language_selection` - language_selection (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "language_selection";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "max_value" | "min_value" | "null";
      detail: string;
    };
    GroupsRolesCreateNameErrorComponent: {
      /**
       * @description * `name` - name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    GroupsRolesCreateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    GroupsRolesCreateProjectSelectionErrorComponent: {
      /**
       * @description * `project_selection` - project_selection (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "project_selection";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "max_value" | "min_value" | "null";
      detail: string;
    };
    GroupsRolesCreateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["GroupsRolesCreateError"][];
    };
    GroupsRolesDestroyErrorResponse400: components["schemas"]["ParseErrorResponse"];
    GroupsUpdateDefiningProjectErrorComponent: {
      /**
       * @description * `defining_project` - defining_project (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "defining_project";
      /**
       * @description * `does_not_exist` - does_not_exist
       *     * `incorrect_match` - incorrect_match
       *     * `incorrect_type` - incorrect_type
       *     * `no_match` - no_match
       *     * `null` - null
       * @enum {string}
       */
      code:
        | "does_not_exist"
        | "incorrect_match"
        | "incorrect_type"
        | "no_match"
        | "null";
      detail: string;
    };
    GroupsUpdateEnforced2faErrorComponent: {
      /**
       * @description * `enforced_2fa` - enforced_2fa (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "enforced_2fa";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    GroupsUpdateError:
      | components["schemas"]["GroupsUpdateNonFieldErrorsErrorComponent"]
      | components["schemas"]["GroupsUpdateNameErrorComponent"]
      | components["schemas"]["GroupsUpdateDefiningProjectErrorComponent"]
      | components["schemas"]["GroupsUpdateProjectSelectionErrorComponent"]
      | components["schemas"]["GroupsUpdateLanguageSelectionErrorComponent"]
      | components["schemas"]["GroupsUpdateEnforced2faErrorComponent"];
    GroupsUpdateErrorResponse400:
      | components["schemas"]["GroupsUpdateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    GroupsUpdateLanguageSelectionErrorComponent: {
      /**
       * @description * `language_selection` - language_selection (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "language_selection";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "max_value" | "min_value" | "null";
      detail: string;
    };
    GroupsUpdateNameErrorComponent: {
      /**
       * @description * `name` - name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    GroupsUpdateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    GroupsUpdateProjectSelectionErrorComponent: {
      /**
       * @description * `project_selection` - project_selection (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "project_selection";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "max_value" | "min_value" | "null";
      detail: string;
    };
    GroupsUpdateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["GroupsUpdateError"][];
    };
    Language: {
      readonly id: number;
      /** Language code */
      code: string;
      name?: string;
      plural?: components["schemas"]["LanguagePlural"];
      readonly aliases: unknown[];
      /** Text direction */
      direction?:
        | components["schemas"]["DirectionEnum"]
        | components["schemas"]["BlankEnum"];
      /**
       * Number of speakers
       * Format: int64
       * @description Number of people speaking this language.
       */
      population?: number;
      readonly web_url: string;
      /** Format: uri */
      readonly url: string;
      /** Format: uri */
      readonly statistics_url: string;
    };
    /**
     * @description * `` - Default based on the file format
     *     * `posix` - POSIX style using underscore as a separator
     *     * `posix_lowercase` - POSIX style using underscore as a separator, lower cased
     *     * `bcp` - BCP style using hyphen as a separator
     *     * `posix_long` - POSIX style using underscore as a separator, including country code
     *     * `posix_long_lowercase` - POSIX style using underscore as a separator, including country code, lower cased
     *     * `bcp_long` - BCP style using hyphen as a separator, including country code
     *     * `bcp_legacy` - BCP style using hyphen as a separator, legacy language codes
     *     * `bcp_lower` - BCP style using hyphen as a separator, lower cased
     *     * `android` - Android style
     *     * `appstore` - Apple App Store metadata style
     *     * `googleplay` - Google Play metadata style
     *     * `linux` - Linux style
     *     * `linux_lowercase` - Linux style, lower cased
     * @enum {string}
     */
    LanguageCodeStyleEnum:
      | "posix"
      | "posix_lowercase"
      | "bcp"
      | "posix_long"
      | "posix_long_lowercase"
      | "bcp_long"
      | "bcp_legacy"
      | "bcp_lower"
      | "android"
      | "appstore"
      | "googleplay"
      | "linux"
      | "linux_lowercase";
    LanguagePlural: {
      readonly id: number;
      /** Plural definition source */
      source?: components["schemas"]["SourceEnum"];
      /** Number of plurals */
      number?: number;
      /** Plural formula */
      formula?: string;
      /** Plural type */
      readonly type: number;
    };
    /**
     * @description * `0` - As defined
     *     * `1` - All languages
     * @enum {integer}
     */
    LanguageSelectionEnum: 0 | 1;
    LanguagesCreateCodeErrorComponent: {
      /**
       * @description * `code` - code (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "code";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    LanguagesCreateDirectionErrorComponent: {
      /**
       * @description * `direction` - direction (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "direction";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    LanguagesCreateError:
      | components["schemas"]["LanguagesCreateNonFieldErrorsErrorComponent"]
      | components["schemas"]["LanguagesCreateCodeErrorComponent"]
      | components["schemas"]["LanguagesCreateNameErrorComponent"]
      | components["schemas"]["LanguagesCreatePluralNonFieldErrorsErrorComponent"]
      | components["schemas"]["LanguagesCreatePluralSourceErrorComponent"]
      | components["schemas"]["LanguagesCreatePluralNumberErrorComponent"]
      | components["schemas"]["LanguagesCreatePluralFormulaErrorComponent"]
      | components["schemas"]["LanguagesCreateDirectionErrorComponent"]
      | components["schemas"]["LanguagesCreatePopulationErrorComponent"];
    LanguagesCreateErrorResponse400:
      | components["schemas"]["LanguagesCreateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    LanguagesCreateNameErrorComponent: {
      /**
       * @description * `name` - name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    LanguagesCreateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    LanguagesCreatePluralFormulaErrorComponent: {
      /**
       * @description * `plural.formula` - plural.formula (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "plural.formula";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    LanguagesCreatePluralNonFieldErrorsErrorComponent: {
      /**
       * @description * `plural.non_field_errors` - plural.non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "plural.non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    LanguagesCreatePluralNumberErrorComponent: {
      /**
       * @description * `plural.number` - plural.number (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "plural.number";
      /**
       * @description * `invalid` - invalid
       *     * `max_string_length` - max_string_length
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_string_length"
        | "max_value"
        | "min_value"
        | "null";
      detail: string;
    };
    LanguagesCreatePluralSourceErrorComponent: {
      /**
       * @description * `plural.source` - plural.source (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "plural.source";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "max_value" | "min_value" | "null";
      detail: string;
    };
    LanguagesCreatePopulationErrorComponent: {
      /**
       * @description * `population` - population (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "population";
      /**
       * @description * `invalid` - invalid
       *     * `max_string_length` - max_string_length
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_string_length"
        | "max_value"
        | "min_value"
        | "null";
      detail: string;
    };
    LanguagesCreateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["LanguagesCreateError"][];
    };
    LanguagesDestroyErrorResponse400: components["schemas"]["ParseErrorResponse"];
    LanguagesListErrorResponse400: components["schemas"]["ParseErrorResponse"];
    LanguagesPartialUpdateCodeErrorComponent: {
      /**
       * @description * `code` - code (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "code";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    LanguagesPartialUpdateDirectionErrorComponent: {
      /**
       * @description * `direction` - direction (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "direction";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    LanguagesPartialUpdateError:
      | components["schemas"]["LanguagesPartialUpdateNonFieldErrorsErrorComponent"]
      | components["schemas"]["LanguagesPartialUpdateCodeErrorComponent"]
      | components["schemas"]["LanguagesPartialUpdateNameErrorComponent"]
      | components["schemas"]["LanguagesPartialUpdatePluralNonFieldErrorsErrorComponent"]
      | components["schemas"]["LanguagesPartialUpdatePluralSourceErrorComponent"]
      | components["schemas"]["LanguagesPartialUpdatePluralNumberErrorComponent"]
      | components["schemas"]["LanguagesPartialUpdatePluralFormulaErrorComponent"]
      | components["schemas"]["LanguagesPartialUpdateDirectionErrorComponent"]
      | components["schemas"]["LanguagesPartialUpdatePopulationErrorComponent"];
    LanguagesPartialUpdateErrorResponse400:
      | components["schemas"]["LanguagesPartialUpdateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    LanguagesPartialUpdateNameErrorComponent: {
      /**
       * @description * `name` - name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    LanguagesPartialUpdateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    LanguagesPartialUpdatePluralFormulaErrorComponent: {
      /**
       * @description * `plural.formula` - plural.formula (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "plural.formula";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    LanguagesPartialUpdatePluralNonFieldErrorsErrorComponent: {
      /**
       * @description * `plural.non_field_errors` - plural.non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "plural.non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    LanguagesPartialUpdatePluralNumberErrorComponent: {
      /**
       * @description * `plural.number` - plural.number (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "plural.number";
      /**
       * @description * `invalid` - invalid
       *     * `max_string_length` - max_string_length
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_string_length"
        | "max_value"
        | "min_value"
        | "null";
      detail: string;
    };
    LanguagesPartialUpdatePluralSourceErrorComponent: {
      /**
       * @description * `plural.source` - plural.source (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "plural.source";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "max_value" | "min_value" | "null";
      detail: string;
    };
    LanguagesPartialUpdatePopulationErrorComponent: {
      /**
       * @description * `population` - population (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "population";
      /**
       * @description * `invalid` - invalid
       *     * `max_string_length` - max_string_length
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_string_length"
        | "max_value"
        | "min_value"
        | "null";
      detail: string;
    };
    LanguagesPartialUpdateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["LanguagesPartialUpdateError"][];
    };
    LanguagesRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    LanguagesStatisticsRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    LanguagesUpdateCodeErrorComponent: {
      /**
       * @description * `code` - code (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "code";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    LanguagesUpdateDirectionErrorComponent: {
      /**
       * @description * `direction` - direction (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "direction";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    LanguagesUpdateError:
      | components["schemas"]["LanguagesUpdateNonFieldErrorsErrorComponent"]
      | components["schemas"]["LanguagesUpdateCodeErrorComponent"]
      | components["schemas"]["LanguagesUpdateNameErrorComponent"]
      | components["schemas"]["LanguagesUpdatePluralNonFieldErrorsErrorComponent"]
      | components["schemas"]["LanguagesUpdatePluralSourceErrorComponent"]
      | components["schemas"]["LanguagesUpdatePluralNumberErrorComponent"]
      | components["schemas"]["LanguagesUpdatePluralFormulaErrorComponent"]
      | components["schemas"]["LanguagesUpdateDirectionErrorComponent"]
      | components["schemas"]["LanguagesUpdatePopulationErrorComponent"];
    LanguagesUpdateErrorResponse400:
      | components["schemas"]["LanguagesUpdateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    LanguagesUpdateNameErrorComponent: {
      /**
       * @description * `name` - name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    LanguagesUpdateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    LanguagesUpdatePluralFormulaErrorComponent: {
      /**
       * @description * `plural.formula` - plural.formula (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "plural.formula";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    LanguagesUpdatePluralNonFieldErrorsErrorComponent: {
      /**
       * @description * `plural.non_field_errors` - plural.non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "plural.non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    LanguagesUpdatePluralNumberErrorComponent: {
      /**
       * @description * `plural.number` - plural.number (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "plural.number";
      /**
       * @description * `invalid` - invalid
       *     * `max_string_length` - max_string_length
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_string_length"
        | "max_value"
        | "min_value"
        | "null";
      detail: string;
    };
    LanguagesUpdatePluralSourceErrorComponent: {
      /**
       * @description * `plural.source` - plural.source (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "plural.source";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "max_value" | "min_value" | "null";
      detail: string;
    };
    LanguagesUpdatePopulationErrorComponent: {
      /**
       * @description * `population` - population (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "population";
      /**
       * @description * `invalid` - invalid
       *     * `max_string_length` - max_string_length
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_string_length"
        | "max_value"
        | "min_value"
        | "null";
      detail: string;
    };
    LanguagesUpdateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["LanguagesUpdateError"][];
    };
    /**
     * @description * `proprietary` - Proprietary
     *     * `3D-Slicer-1.0` - 3D Slicer License v1.0
     *     * `Glide` - 3dfx Glide License
     *     * `Abstyles` - Abstyles License
     *     * `AFL-1.1` - Academic Free License v1.1
     *     * `AFL-1.2` - Academic Free License v1.2
     *     * `AFL-2.0` - Academic Free License v2.0
     *     * `AFL-2.1` - Academic Free License v2.1
     *     * `AFL-3.0` - Academic Free License v3.0
     *     * `AMPAS` - Academy of Motion Picture Arts and Sciences BSD
     *     * `AdaCore-doc` - AdaCore Doc License
     *     * `APL-1.0` - Adaptive Public License 1.0
     *     * `Adobe-Display-PostScript` - Adobe Display PostScript License
     *     * `Adobe-Glyph` - Adobe Glyph List License
     *     * `APAFML` - Adobe Postscript AFM License
     *     * `Adobe-2006` - Adobe Systems Incorporated Source Code License Agreement
     *     * `Adobe-Utopia` - Adobe Utopia Font License
     *     * `AGPL-1.0-only` - Affero General Public License v1.0 only
     *     * `AGPL-1.0-or-later` - Affero General Public License v1.0 or later
     *     * `Afmparse` - Afmparse License
     *     * `Aladdin` - Aladdin Free Public License
     *     * `ADSL` - Amazon Digital Services License
     *     * `AMD-newlib` - AMD newlib License
     *     * `AMDPLPA` - AMD's plpa_map.c License
     *     * `AML-glslang` - AML glslang variant License
     *     * `ANTLR-PD` - ANTLR Software Rights Notice
     *     * `ANTLR-PD-fallback` - ANTLR Software Rights Notice with license fallback
     *     * `any-OSI` - Any OSI License
     *     * `any-OSI-perl-modules` - Any OSI License - Perl Modules
     *     * `Apache-1.0` - Apache License 1.0
     *     * `Apache-1.1` - Apache License 1.1
     *     * `Apache-2.0` - Apache License 2.0
     *     * `App-s2p` - App::s2p License
     *     * `AML` - Apple MIT License
     *     * `APSL-1.0` - Apple Public Source License 1.0
     *     * `APSL-1.1` - Apple Public Source License 1.1
     *     * `APSL-1.2` - Apple Public Source License 1.2
     *     * `APSL-2.0` - Apple Public Source License 2.0
     *     * `Arphic-1999` - Arphic Public License
     *     * `Artistic-1.0` - Artistic License 1.0
     *     * `Artistic-1.0-Perl` - Artistic License 1.0 (Perl)
     *     * `Artistic-1.0-cl8` - Artistic License 1.0 w/clause 8
     *     * `Artistic-2.0` - Artistic License 2.0
     *     * `ASWF-Digital-Assets-1.1` - ASWF Digital Assets License 1.1
     *     * `ASWF-Digital-Assets-1.0` - ASWF Digital Assets License version 1.0
     *     * `AAL` - Attribution Assurance License
     *     * `Baekmuk` - Baekmuk License
     *     * `Bahyph` - Bahyph License
     *     * `Barr` - Barr License
     *     * `bcrypt-Solar-Designer` - bcrypt Solar Designer License
     *     * `Beerware` - Beerware License
     *     * `Bitstream-Charter` - Bitstream Charter Font License
     *     * `Bitstream-Vera` - Bitstream Vera Font License
     *     * `BitTorrent-1.0` - BitTorrent Open Source License v1.0
     *     * `BitTorrent-1.1` - BitTorrent Open Source License v1.1
     *     * `BlueOak-1.0.0` - Blue Oak Model License 1.0.0
     *     * `Boehm-GC` - Boehm-Demers-Weiser GC License
     *     * `Boehm-GC-without-fee` - Boehm-Demers-Weiser GC License (without fee)
     *     * `BSL-1.0` - Boost Software License 1.0
     *     * `Borceux` - Borceux license
     *     * `Brian-Gladman-2-Clause` - Brian Gladman 2-Clause License
     *     * `Brian-Gladman-3-Clause` - Brian Gladman 3-Clause License
     *     * `BSD-1-Clause` - BSD 1-Clause License
     *     * `BSD-2-Clause` - BSD 2-Clause "Simplified" License
     *     * `BSD-2-Clause-first-lines` - BSD 2-Clause - first lines requirement
     *     * `BSD-2-Clause-Darwin` - BSD 2-Clause - Ian Darwin variant
     *     * `BSD-2-Clause-pkgconf-disclaimer` - BSD 2-Clause pkgconf disclaimer variant
     *     * `BSD-2-Clause-Views` - BSD 2-Clause with views sentence
     *     * `BSD-3-Clause` - BSD 3-Clause "New" or "Revised" License
     *     * `BSD-3-Clause-acpica` - BSD 3-Clause acpica variant
     *     * `BSD-3-Clause-Clear` - BSD 3-Clause Clear License
     *     * `BSD-3-Clause-flex` - BSD 3-Clause Flex variant
     *     * `BSD-3-Clause-Modification` - BSD 3-Clause Modification
     *     * `BSD-3-Clause-No-Military-License` - BSD 3-Clause No Military License
     *     * `BSD-3-Clause-No-Nuclear-License` - BSD 3-Clause No Nuclear License
     *     * `BSD-3-Clause-No-Nuclear-License-2014` - BSD 3-Clause No Nuclear License 2014
     *     * `BSD-3-Clause-No-Nuclear-Warranty` - BSD 3-Clause No Nuclear Warranty
     *     * `BSD-3-Clause-Open-MPI` - BSD 3-Clause Open MPI variant
     *     * `BSD-3-Clause-Sun` - BSD 3-Clause Sun Microsystems
     *     * `BSD-4-Clause-Shortened` - BSD 4 Clause Shortened
     *     * `BSD-4-Clause` - BSD 4-Clause "Original" or "Old" License
     *     * `BSD-4.3RENO` - BSD 4.3 RENO License
     *     * `BSD-4.3TAHOE` - BSD 4.3 TAHOE License
     *     * `BSD-Advertising-Acknowledgement` - BSD Advertising Acknowledgement License
     *     * `BSD-Protection` - BSD Protection License
     *     * `BSD-Source-Code` - BSD Source Code Attribution
     *     * `BSD-Source-beginning-file` - BSD Source Code Attribution - beginning of file variant
     *     * `BSD-3-Clause-Attribution` - BSD with attribution
     *     * `BSD-Attribution-HPND-disclaimer` - BSD with Attribution and HPND disclaimer
     *     * `0BSD` - BSD Zero Clause License
     *     * `BSD-2-Clause-Patent` - BSD-2-Clause Plus Patent License
     *     * `BSD-4-Clause-UC` - BSD-4-Clause (University of California-Specific)
     *     * `BSD-Inferno-Nettverk` - BSD-Inferno-Nettverk
     *     * `BUSL-1.1` - Business Source License 1.1
     *     * `bzip2-1.0.6` - bzip2 and libbzip2 License v1.0.6
     *     * `Caldera` - Caldera License
     *     * `Caldera-no-preamble` - Caldera License (without preamble)
     *     * `Catharon` - Catharon License
     *     * `CECILL-1.0` - CeCILL Free Software License Agreement v1.0
     *     * `CECILL-1.1` - CeCILL Free Software License Agreement v1.1
     *     * `CECILL-2.0` - CeCILL Free Software License Agreement v2.0
     *     * `CECILL-2.1` - CeCILL Free Software License Agreement v2.1
     *     * `CECILL-B` - CeCILL-B Free Software License Agreement
     *     * `CECILL-C` - CeCILL-C Free Software License Agreement
     *     * `CERN-OHL-1.1` - CERN Open Hardware Licence v1.1
     *     * `CERN-OHL-1.2` - CERN Open Hardware Licence v1.2
     *     * `CERN-OHL-P-2.0` - CERN Open Hardware Licence Version 2 - Permissive
     *     * `CERN-OHL-S-2.0` - CERN Open Hardware Licence Version 2 - Strongly Reciprocal
     *     * `CERN-OHL-W-2.0` - CERN Open Hardware Licence Version 2 - Weakly Reciprocal
     *     * `CFITSIO` - CFITSIO License
     *     * `check-cvs` - check-cvs License
     *     * `checkmk` - Checkmk License
     *     * `ClArtistic` - Clarified Artistic License
     *     * `Clips` - Clips License
     *     * `CMU-Mach-nodoc` - CMU    Mach - no notices-in-documentation variant
     *     * `MIT-CMU` - CMU License
     *     * `CMU-Mach` - CMU Mach License
     *     * `CNRI-Jython` - CNRI Jython License
     *     * `CNRI-Python` - CNRI Python License
     *     * `CNRI-Python-GPL-Compatible` - CNRI Python Open Source GPL Compatible License Agreement
     *     * `CPOL-1.02` - Code Project Open License 1.02
     *     * `CDDL-1.0` - Common Development and Distribution License 1.0
     *     * `CDDL-1.1` - Common Development and Distribution License 1.1
     *     * `CDL-1.0` - Common Documentation License 1.0
     *     * `LOOP` - Common Lisp LOOP License
     *     * `CPAL-1.0` - Common Public Attribution License 1.0
     *     * `CPL-1.0` - Common Public License 1.0
     *     * `cve-tou` - Common Vulnerability Enumeration ToU License
     *     * `CDLA-Permissive-1.0` - Community Data License Agreement Permissive 1.0
     *     * `CDLA-Permissive-2.0` - Community Data License Agreement Permissive 2.0
     *     * `CDLA-Sharing-1.0` - Community Data License Agreement Sharing 1.0
     *     * `Community-Spec-1.0` - Community Specification License 1.0
     *     * `C-UDA-1.0` - Computational Use of Data Agreement v1.0
     *     * `CATOSL-1.1` - Computer Associates Trusted Open Source License 1.1
     *     * `Condor-1.1` - Condor Public License v1.1
     *     * `COIL-1.0` - Copyfree Open Innovation License
     *     * `copyleft-next-0.3.0` - copyleft-next 0.3.0
     *     * `copyleft-next-0.3.1` - copyleft-next 0.3.1
     *     * `Cornell-Lossless-JPEG` - Cornell Lossless JPEG License
     *     * `CC-PDM-1.0` - Creative    Commons Public Domain Mark 1.0 Universal
     *     * `CC-BY-1.0` - Creative Commons Attribution 1.0 Generic
     *     * `CC-BY-2.0` - Creative Commons Attribution 2.0 Generic
     *     * `CC-BY-2.5-AU` - Creative Commons Attribution 2.5 Australia
     *     * `CC-BY-2.5` - Creative Commons Attribution 2.5 Generic
     *     * `CC-BY-3.0-AU` - Creative Commons Attribution 3.0 Australia
     *     * `CC-BY-3.0-AT` - Creative Commons Attribution 3.0 Austria
     *     * `CC-BY-3.0-DE` - Creative Commons Attribution 3.0 Germany
     *     * `CC-BY-3.0-IGO` - Creative Commons Attribution 3.0 IGO
     *     * `CC-BY-3.0-NL` - Creative Commons Attribution 3.0 Netherlands
     *     * `CC-BY-3.0-US` - Creative Commons Attribution 3.0 United States
     *     * `CC-BY-3.0` - Creative Commons Attribution 3.0 Unported
     *     * `CC-BY-4.0` - Creative Commons Attribution 4.0 International
     *     * `CC-BY-ND-1.0` - Creative Commons Attribution No Derivatives 1.0 Generic
     *     * `CC-BY-ND-2.0` - Creative Commons Attribution No Derivatives 2.0 Generic
     *     * `CC-BY-ND-2.5` - Creative Commons Attribution No Derivatives 2.5 Generic
     *     * `CC-BY-ND-3.0-DE` - Creative Commons Attribution No Derivatives 3.0 Germany
     *     * `CC-BY-ND-3.0` - Creative Commons Attribution No Derivatives 3.0 Unported
     *     * `CC-BY-ND-4.0` - Creative Commons Attribution No Derivatives 4.0 International
     *     * `CC-BY-NC-1.0` - Creative Commons Attribution Non Commercial 1.0 Generic
     *     * `CC-BY-NC-2.0` - Creative Commons Attribution Non Commercial 2.0 Generic
     *     * `CC-BY-NC-2.5` - Creative Commons Attribution Non Commercial 2.5 Generic
     *     * `CC-BY-NC-3.0-DE` - Creative Commons Attribution Non Commercial 3.0 Germany
     *     * `CC-BY-NC-3.0` - Creative Commons Attribution Non Commercial 3.0 Unported
     *     * `CC-BY-NC-4.0` - Creative Commons Attribution Non Commercial 4.0 International
     *     * `CC-BY-NC-ND-1.0` - Creative Commons Attribution Non Commercial No Derivatives 1.0 Generic
     *     * `CC-BY-NC-ND-2.0` - Creative Commons Attribution Non Commercial No Derivatives 2.0 Generic
     *     * `CC-BY-NC-ND-2.5` - Creative Commons Attribution Non Commercial No Derivatives 2.5 Generic
     *     * `CC-BY-NC-ND-3.0-DE` - Creative Commons Attribution Non Commercial No Derivatives 3.0 Germany
     *     * `CC-BY-NC-ND-3.0-IGO` - Creative Commons Attribution Non Commercial No Derivatives 3.0 IGO
     *     * `CC-BY-NC-ND-3.0` - Creative Commons Attribution Non Commercial No Derivatives 3.0 Unported
     *     * `CC-BY-NC-ND-4.0` - Creative Commons Attribution Non Commercial No Derivatives 4.0 International
     *     * `CC-BY-NC-SA-1.0` - Creative Commons Attribution Non Commercial Share Alike 1.0 Generic
     *     * `CC-BY-NC-SA-2.0-UK` - Creative Commons Attribution Non Commercial Share Alike 2.0 England and Wales
     *     * `CC-BY-NC-SA-2.0` - Creative Commons Attribution Non Commercial Share Alike 2.0 Generic
     *     * `CC-BY-NC-SA-2.0-DE` - Creative Commons Attribution Non Commercial Share Alike 2.0 Germany
     *     * `CC-BY-NC-SA-2.5` - Creative Commons Attribution Non Commercial Share Alike 2.5 Generic
     *     * `CC-BY-NC-SA-3.0-DE` - Creative Commons Attribution Non Commercial Share Alike 3.0 Germany
     *     * `CC-BY-NC-SA-3.0-IGO` - Creative Commons Attribution Non Commercial Share Alike 3.0 IGO
     *     * `CC-BY-NC-SA-3.0` - Creative Commons Attribution Non Commercial Share Alike 3.0 Unported
     *     * `CC-BY-NC-SA-4.0` - Creative Commons Attribution Non Commercial Share Alike 4.0 International
     *     * `CC-BY-SA-1.0` - Creative Commons Attribution Share Alike 1.0 Generic
     *     * `CC-BY-SA-2.0-UK` - Creative Commons Attribution Share Alike 2.0 England and Wales
     *     * `CC-BY-SA-2.0` - Creative Commons Attribution Share Alike 2.0 Generic
     *     * `CC-BY-SA-2.1-JP` - Creative Commons Attribution Share Alike 2.1 Japan
     *     * `CC-BY-SA-2.5` - Creative Commons Attribution Share Alike 2.5 Generic
     *     * `CC-BY-SA-3.0-AT` - Creative Commons Attribution Share Alike 3.0 Austria
     *     * `CC-BY-SA-3.0-DE` - Creative Commons Attribution Share Alike 3.0 Germany
     *     * `CC-BY-SA-3.0` - Creative Commons Attribution Share Alike 3.0 Unported
     *     * `CC-BY-SA-4.0` - Creative Commons Attribution Share Alike 4.0 International
     *     * `CC-BY-NC-SA-2.0-FR` - Creative Commons Attribution-NonCommercial-ShareAlike 2.0 France
     *     * `CC-BY-SA-3.0-IGO` - Creative Commons Attribution-ShareAlike 3.0 IGO
     *     * `CC-PDDC` - Creative Commons Public Domain Dedication and Certification
     *     * `CC-SA-1.0` - Creative Commons Share Alike 1.0 Generic
     *     * `CC0-1.0` - Creative Commons Zero v1.0 Universal
     *     * `Cronyx` - Cronyx License
     *     * `Crossword` - Crossword License
     *     * `CAL-1.0` - Cryptographic Autonomy License 1.0
     *     * `CAL-1.0-Combined-Work-Exception` - Cryptographic Autonomy License 1.0 (Combined Work Exception)
     *     * `CryptoSwift` - CryptoSwift License
     *     * `CrystalStacker` - CrystalStacker License
     *     * `CUA-OPL-1.0` - CUA Office Public License v1.0
     *     * `Cube` - Cube License
     *     * `curl` - curl License
     *     * `DL-DE-BY-2.0` - Data licence Germany – attribution – version 2.0
     *     * `DL-DE-ZERO-2.0` - Data licence Germany – zero – version 2.0
     *     * `dtoa` - David M. Gay dtoa License
     *     * `DEC-3-Clause` - DEC 3-Clause License
     *     * `DRL-1.0` - Detection Rule License 1.0
     *     * `DRL-1.1` - Detection Rule License 1.1
     *     * `D-FSL-1.0` - Deutsche Freie Software Lizenz
     *     * `diffmark` - diffmark license
     *     * `WTFPL` - Do What The F*ck You Want To Public License
     *     * `DOC` - DOC License
     *     * `DocBook-DTD` - DocBook DTD License
     *     * `DocBook-Schema` - DocBook Schema License
     *     * `DocBook-Stylesheet` - DocBook Stylesheet License
     *     * `DocBook-XML` - DocBook XML License
     *     * `Dotseqn` - Dotseqn License
     *     * `DSDP` - DSDP License
     *     * `dvipdfm` - dvipdfm License
     *     * `EPL-1.0` - Eclipse Public License 1.0
     *     * `EPL-2.0` - Eclipse Public License 2.0
     *     * `ECL-1.0` - Educational Community License v1.0
     *     * `ECL-2.0` - Educational Community License v2.0
     *     * `eGenix` - eGenix.com Public License 1.1.0
     *     * `EFL-1.0` - Eiffel Forum License v1.0
     *     * `EFL-2.0` - Eiffel Forum License v2.0
     *     * `Elastic-2.0` - Elastic License 2.0
     *     * `MIT-advertising` - Enlightenment License (e16)
     *     * `MIT-enna` - enna License
     *     * `Entessa` - Entessa Public License v1.0
     *     * `EPICS` - EPICS Open License
     *     * `ErlPL-1.1` - Erlang Public License v1.1
     *     * `etalab-2.0` - Etalab Open License 2.0
     *     * `EUDatagrid` - EU DataGrid Software License
     *     * `EUPL-1.0` - European Union Public License 1.0
     *     * `EUPL-1.1` - European Union Public License 1.1
     *     * `EUPL-1.2` - European Union Public License 1.2
     *     * `Eurosym` - Eurosym License
     *     * `Fair` - Fair License
     *     * `MIT-feh` - feh License
     *     * `Ferguson-Twofish` - Ferguson Twofish License
     *     * `Frameworx-1.0` - Frameworx Open License 1.0
     *     * `FDK-AAC` - Fraunhofer FDK AAC Codec Library
     *     * `FreeBSD-DOC` - FreeBSD Documentation License
     *     * `FreeImage` - FreeImage Public License v1.0
     *     * `FTL` - Freetype Project License
     *     * `FSFAP` - FSF All Permissive License
     *     * `FSFAP-no-warranty-disclaimer` - FSF All Permissive License (without Warranty)
     *     * `FSFUL` - FSF Unlimited License
     *     * `FSFULLRWD` - FSF Unlimited License (With License Retention and Warranty Disclaimer)
     *     * `FSFULLR` - FSF Unlimited License (with License Retention)
     *     * `FSL-1.1-ALv2` - Functional Source License, Version 1.1, ALv2 Future License
     *     * `FSL-1.1-MIT` - Functional Source License, Version 1.1, MIT Future License
     *     * `Furuseth` - Furuseth License
     *     * `FBM` - Fuzzy Bitmap License
     *     * `fwlw` - fwlw License
     *     * `Game-Programming-Gems` - Game Programming Gems License
     *     * `GD` - GD License
     *     * `generic-xts` - Generic XTS License
     *     * `Giftware` - Giftware License
     *     * `GL2PS` - GL2PS License
     *     * `Glulxe` - Glulxe License
     *     * `GCR-docs` - Gnome GCR Documentation License
     *     * `AGPL-3.0-only` - GNU Affero General Public License v3.0 only
     *     * `AGPL-3.0-or-later` - GNU Affero General Public License v3.0 or later
     *     * `GFDL-1.1-only` - GNU Free Documentation License v1.1 only
     *     * `GFDL-1.1-invariants-only` - GNU Free Documentation License v1.1 only - invariants
     *     * `GFDL-1.1-no-invariants-only` - GNU Free Documentation License v1.1 only - no invariants
     *     * `GFDL-1.1-or-later` - GNU Free Documentation License v1.1 or later
     *     * `GFDL-1.1-invariants-or-later` - GNU Free Documentation License v1.1 or later - invariants
     *     * `GFDL-1.1-no-invariants-or-later` - GNU Free Documentation License v1.1 or later - no invariants
     *     * `GFDL-1.2-only` - GNU Free Documentation License v1.2 only
     *     * `GFDL-1.2-invariants-only` - GNU Free Documentation License v1.2 only - invariants
     *     * `GFDL-1.2-no-invariants-only` - GNU Free Documentation License v1.2 only - no invariants
     *     * `GFDL-1.2-or-later` - GNU Free Documentation License v1.2 or later
     *     * `GFDL-1.2-invariants-or-later` - GNU Free Documentation License v1.2 or later - invariants
     *     * `GFDL-1.2-no-invariants-or-later` - GNU Free Documentation License v1.2 or later - no invariants
     *     * `GFDL-1.3-only` - GNU Free Documentation License v1.3 only
     *     * `GFDL-1.3-invariants-only` - GNU Free Documentation License v1.3 only - invariants
     *     * `GFDL-1.3-no-invariants-only` - GNU Free Documentation License v1.3 only - no invariants
     *     * `GFDL-1.3-or-later` - GNU Free Documentation License v1.3 or later
     *     * `GFDL-1.3-invariants-or-later` - GNU Free Documentation License v1.3 or later - invariants
     *     * `GFDL-1.3-no-invariants-or-later` - GNU Free Documentation License v1.3 or later - no invariants
     *     * `GPL-1.0-only` - GNU General Public License v1.0 only
     *     * `GPL-1.0-or-later` - GNU General Public License v1.0 or later
     *     * `GPL-2.0-only` - GNU General Public License v2.0 only
     *     * `GPL-2.0-or-later` - GNU General Public License v2.0 or later
     *     * `GPL-3.0-only` - GNU General Public License v3.0 only
     *     * `GPL-3.0-or-later` - GNU General Public License v3.0 or later
     *     * `LGPL-2.1-only` - GNU Lesser General Public License v2.1 only
     *     * `LGPL-2.1-or-later` - GNU Lesser General Public License v2.1 or later
     *     * `LGPL-3.0-only` - GNU Lesser General Public License v3.0 only
     *     * `LGPL-3.0-or-later` - GNU Lesser General Public License v3.0 or later
     *     * `LGPL-2.0-only` - GNU Library General Public License v2 only
     *     * `LGPL-2.0-or-later` - GNU Library General Public License v2 or later
     *     * `gnuplot` - gnuplot License
     *     * `GLWTPL` - Good Luck With That Public License
     *     * `Graphics-Gems` - Graphics Gems License
     *     * `gSOAP-1.3b` - gSOAP Public License v1.3b
     *     * `gtkbook` - gtkbook License
     *     * `Gutmann` - Gutmann License
     *     * `HaskellReport` - Haskell Language Report License
     *     * `hdparm` - hdparm License
     *     * `HP-1986` - Hewlett-Packard 1986 License
     *     * `HP-1989` - Hewlett-Packard 1989 License
     *     * `BSD-3-Clause-HP` - Hewlett-Packard BSD variant license
     *     * `HIDAPI` - HIDAPI License
     *     * `Hippocratic-2.1` - Hippocratic License 2.1
     *     * `HPND` - Historical Permission Notice and Disclaimer
     *     * `HPND-INRIA-IMAG` - Historical Permission Notice and Disclaimer    - INRIA-IMAG variant
     *     * `HPND-DEC` - Historical Permission Notice and Disclaimer - DEC variant
     *     * `HPND-doc-sell` - Historical Permission Notice and Disclaimer - documentation sell variant
     *     * `HPND-doc` - Historical Permission Notice and Disclaimer - documentation variant
     *     * `HPND-Fenneberg-Livingston` - Historical Permission Notice and Disclaimer - Fenneberg-Livingston variant
     *     * `HPND-Intel` - Historical Permission Notice and Disclaimer - Intel variant
     *     * `HPND-Kevlin-Henney` - Historical Permission Notice and Disclaimer - Kevlin Henney variant
     *     * `HPND-Markus-Kuhn` - Historical Permission Notice and Disclaimer - Markus Kuhn variant
     *     * `HPND-merchantability-variant` - Historical Permission Notice and Disclaimer - merchantability variant
     *     * `HPND-Netrek` - Historical Permission Notice and Disclaimer - Netrek variant
     *     * `HPND-Pbmplus` - Historical Permission Notice and Disclaimer - Pbmplus variant
     *     * `HPND-sell-regexpr` - Historical Permission Notice and Disclaimer - sell regexpr variant
     *     * `HPND-sell-variant` - Historical Permission Notice and Disclaimer - sell variant
     *     * `HPND-sell-MIT-disclaimer-xserver` - Historical Permission Notice and Disclaimer - sell xserver variant with MIT disclaimer
     *     * `HPND-UC` - Historical Permission Notice and Disclaimer - University of California variant
     *     * `HPND-UC-export-US` - Historical Permission Notice and Disclaimer - University of California, US export warning
     *     * `HPND-MIT-disclaimer` - Historical Permission Notice and Disclaimer with MIT disclaimer
     *     * `HPND-sell-variant-MIT-disclaimer` - HPND sell variant with MIT disclaimer
     *     * `HPND-sell-variant-MIT-disclaimer-rev` - HPND sell variant with MIT disclaimer - reverse
     *     * `HPND-export2-US` - HPND with US Government export control and 2 disclaimers
     *     * `HPND-export-US` - HPND with US Government export control warning
     *     * `HPND-export-US-acknowledgement` - HPND with US Government export control warning and acknowledgment
     *     * `HPND-export-US-modify` - HPND with US Government export control warning and modification rqmt
     *     * `HTMLTIDY` - HTML Tidy License
     *     * `IBM-pibs` - IBM PowerPC Initialization and Boot Software
     *     * `IPL-1.0` - IBM Public License v1.0
     *     * `ICU` - ICU License
     *     * `IEC-Code-Components-EULA` - IEC    Code Components End-user licence agreement
     *     * `ImageMagick` - ImageMagick License
     *     * `iMatix` - iMatix Standard Function Library Agreement
     *     * `Imlib2` - Imlib2 License
     *     * `IJG` - Independent JPEG Group License
     *     * `IJG-short` - Independent JPEG Group License - short
     *     * `Info-ZIP` - Info-ZIP License
     *     * `Inner-Net-2.0` - Inner Net License v2.0
     *     * `InnoSetup` - Inno Setup License
     *     * `Intel-ACPI` - Intel ACPI Software License Agreement
     *     * `Intel` - Intel Open Source License
     *     * `Interbase-1.0` - Interbase Public License v1.0
     *     * `IPA` - IPA Font License
     *     * `ISC` - ISC License
     *     * `ISC-Veillard` - ISC Veillard variant
     *     * `Jam` - Jam License
     *     * `JPNIC` - Japan Network Information Center License
     *     * `JasPer-2.0` - JasPer License
     *     * `jove` - Jove License
     *     * `JPL-image` - JPL Image Use Policy
     *     * `JSON` - JSON License
     *     * `Kastrup` - Kastrup License
     *     * `Kazlib` - Kazlib License
     *     * `Knuth-CTAN` - Knuth CTAN License
     *     * `LPPL-1.0` - LaTeX Project Public License v1.0
     *     * `LPPL-1.1` - LaTeX Project Public License v1.1
     *     * `LPPL-1.2` - LaTeX Project Public License v1.2
     *     * `LPPL-1.3a` - LaTeX Project Public License v1.3a
     *     * `LPPL-1.3c` - LaTeX Project Public License v1.3c
     *     * `Latex2e` - Latex2e License
     *     * `Latex2e-translated-notice` - Latex2e with translated notice permission
     *     * `BSD-3-Clause-LBNL` - Lawrence Berkeley National Labs BSD variant license
     *     * `Leptonica` - Leptonica License
     *     * `LGPLLR` - Lesser General Public License For Linguistic Resources
     *     * `Libpng` - libpng License
     *     * `libselinux-1.0` - libselinux public domain notice
     *     * `libtiff` - libtiff License
     *     * `libutil-David-Nugent` - libutil David Nugent License
     *     * `LAL-1.2` - Licence Art Libre 1.2
     *     * `LAL-1.3` - Licence Art Libre 1.3
     *     * `LiLiQ-P-1.1` - Licence Libre du Québec – Permissive version 1.1
     *     * `LiLiQ-Rplus-1.1` - Licence Libre du Québec – Réciprocité forte version 1.1
     *     * `LiLiQ-R-1.1` - Licence Libre du Québec – Réciprocité version 1.1
     *     * `Linux-OpenIB` - Linux Kernel Variant of OpenIB.org license
     *     * `Linux-man-pages-1-para` - Linux man-pages - 1 paragraph
     *     * `Linux-man-pages-copyleft` - Linux man-pages Copyleft
     *     * `Linux-man-pages-copyleft-2-para` - Linux man-pages Copyleft - 2 paragraphs
     *     * `Linux-man-pages-copyleft-var` - Linux man-pages Copyleft Variant
     *     * `LPD-document` - LPD Documentation License
     *     * `lsof` - lsof License
     *     * `LPL-1.02` - Lucent Public License v1.02
     *     * `LPL-1.0` - Lucent Public License Version 1.0
     *     * `Lucida-Bitmap-Fonts` - Lucida Bitmap Fonts License
     *     * `LZMA-SDK-9.11-to-9.20` - LZMA SDK License (versions 9.11 to 9.20)
     *     * `LZMA-SDK-9.22` - LZMA SDK License (versions 9.22 and beyond)
     *     * `Mackerras-3-Clause-acknowledgment` - Mackerras 3-Clause - acknowledgment variant
     *     * `Mackerras-3-Clause` - Mackerras 3-Clause License
     *     * `magaz` - magaz License
     *     * `mailprio` - mailprio License
     *     * `MakeIndex` - MakeIndex License
     *     * `man2html` - man2html License
     *     * `Martin-Birgmeier` - Martin Birgmeier License
     *     * `MTLL` - Matrix Template Library License
     *     * `McPhee-slideshow` - McPhee Slideshow License
     *     * `metamail` - metamail License
     *     * `UMich-Merit` - Michigan/Merit Networks License
     *     * `MS-LPL` - Microsoft Limited Public License
     *     * `MS-PL` - Microsoft Public License
     *     * `MS-RL` - Microsoft Reciprocal License
     *     * `Minpack` - Minpack License
     *     * `MIPS` - MIPS License
     *     * `MITNFA` - MIT +no-false-attribs license
     *     * `MIT-Click` - MIT Click License
     *     * `MIT-Festival` - MIT Festival Variant
     *     * `MIT-Khronos-old` - MIT Khronos - old variant
     *     * `MIT` - MIT License
     *     * `MIT-Modern-Variant` - MIT License Modern Variant
     *     * `MIT-0` - MIT No Attribution
     *     * `MIT-open-group` - MIT Open Group variant
     *     * `MIT-testregex` - MIT testregex Variant
     *     * `MIT-Wu` - MIT Tom Wu Variant
     *     * `MMIXware` - MMIXware License
     *     * `Motosoto` - Motosoto License
     *     * `MPL-1.0` - Mozilla Public License 1.0
     *     * `MPL-1.1` - Mozilla Public License 1.1
     *     * `MPL-2.0` - Mozilla Public License 2.0
     *     * `MPL-2.0-no-copyleft-exception` - Mozilla Public License 2.0 (no copyleft exception)
     *     * `MPEG-SSG` - MPEG Software Simulation
     *     * `mpi-permissive` - mpi Permissive License
     *     * `mpich2` - mpich2 License
     *     * `mplus` - mplus Font License
     *     * `MulanPSL-1.0` - Mulan Permissive Software License, Version 1
     *     * `MulanPSL-2.0` - Mulan Permissive Software License, Version 2
     *     * `Multics` - Multics License
     *     * `Mup` - Mup License
     *     * `NAIST-2003` - Nara Institute of Science and Technology License (2003)
     *     * `NASA-1.3` - NASA Open Source Agreement 1.3
     *     * `Naumen` - Naumen Public License
     *     * `NCBI-PD` - NCBI Public Domain Notice
     *     * `NCL` - NCL Source Code License
     *     * `NBPL-1.0` - Net Boolean Public License v1
     *     * `NetCDF` - NetCDF license
     *     * `NGPL` - Nethack General Public License
     *     * `NOSL` - Netizen Open Source License
     *     * `NPL-1.0` - Netscape Public License v1.0
     *     * `NPL-1.1` - Netscape Public License v1.1
     *     * `Newsletr` - Newsletr License
     *     * `NICTA-1.0` - NICTA Public Software License, Version 1.0
     *     * `NIST-PD` - NIST Public Domain Notice
     *     * `NIST-PD-fallback` - NIST Public Domain Notice with license fallback
     *     * `NIST-Software` - NIST Software License
     *     * `NLPL` - No Limit Public License
     *     * `Nokia` - Nokia Open Source License
     *     * `NCGL-UK-2.0` - Non-Commercial Government Licence
     *     * `NPOSL-3.0` - Non-Profit Open Software License 3.0
     *     * `NLOD-1.0` - Norwegian Licence for Open Government Data (NLOD) 1.0
     *     * `NLOD-2.0` - Norwegian Licence for Open Government Data (NLOD) 2.0
     *     * `Noweb` - Noweb License
     *     * `NRL` - NRL License
     *     * `NTIA-PD` - NTIA Public Domain Notice
     *     * `NTP` - NTP License
     *     * `NTP-0` - NTP No Attribution
     *     * `OAR` - OAR License
     *     * `OCLC-2.0` - OCLC Research Public License 2.0
     *     * `OFFIS` - OFFIS License
     *     * `OGC-1.0` - OGC Software License, Version 1.0
     *     * `OCCT-PL` - Open CASCADE Technology Public License
     *     * `ODC-By-1.0` - Open Data Commons Attribution License v1.0
     *     * `ODbL-1.0` - Open Data Commons Open Database License v1.0
     *     * `PDDL-1.0` - Open Data Commons Public Domain Dedication & License 1.0
     *     * `OGL-Canada-2.0` - Open Government Licence - Canada
     *     * `OGL-UK-1.0` - Open Government Licence v1.0
     *     * `OGL-UK-2.0` - Open Government Licence v2.0
     *     * `OGL-UK-3.0` - Open Government Licence v3.0
     *     * `OGTSL` - Open Group Test Suite License
     *     * `OLDAP-2.2.2` - Open LDAP Public License 2.2.2
     *     * `OLDAP-1.1` - Open LDAP Public License v1.1
     *     * `OLDAP-1.2` - Open LDAP Public License v1.2
     *     * `OLDAP-1.3` - Open LDAP Public License v1.3
     *     * `OLDAP-1.4` - Open LDAP Public License v1.4
     *     * `OLDAP-2.0` - Open LDAP Public License v2.0 (or possibly 2.0A and 2.0B)
     *     * `OLDAP-2.0.1` - Open LDAP Public License v2.0.1
     *     * `OLDAP-2.1` - Open LDAP Public License v2.1
     *     * `OLDAP-2.2` - Open LDAP Public License v2.2
     *     * `OLDAP-2.2.1` - Open LDAP Public License v2.2.1
     *     * `OLDAP-2.3` - Open LDAP Public License v2.3
     *     * `OLDAP-2.4` - Open LDAP Public License v2.4
     *     * `OLDAP-2.5` - Open LDAP Public License v2.5
     *     * `OLDAP-2.6` - Open LDAP Public License v2.6
     *     * `OLDAP-2.7` - Open LDAP Public License v2.7
     *     * `OLDAP-2.8` - Open LDAP Public License v2.8
     *     * `OLFL-1.3` - Open Logistics Foundation License Version 1.3
     *     * `OML` - Open Market License
     *     * `OPL-1.0` - Open Public License v1.0
     *     * `OPUBL-1.0` - Open Publication License v1.0
     *     * `OSL-1.0` - Open Software License 1.0
     *     * `OSL-1.1` - Open Software License 1.1
     *     * `OSL-2.0` - Open Software License 2.0
     *     * `OSL-2.1` - Open Software License 2.1
     *     * `OSL-3.0` - Open Software License 3.0
     *     * `O-UDA-1.0` - Open Use of Data Agreement v1.0
     *     * `OpenPBS-2.3` - OpenPBS v2.3 Software License
     *     * `OpenSSL` - OpenSSL License
     *     * `OpenSSL-standalone` - OpenSSL License - standalone
     *     * `OpenVision` - OpenVision License
     *     * `OSET-PL-2.1` - OSET Public License version 2.1
     *     * `PADL` - PADL License
     *     * `PPL` - Peer Production License
     *     * `PHP-3.0` - PHP License v3.0
     *     * `PHP-3.01` - PHP License v3.01
     *     * `Pixar` - Pixar License
     *     * `pkgconf` - pkgconf License
     *     * `Plexus` - Plexus Classworlds License
     *     * `libpng-2.0` - PNG Reference Library version 2
     *     * `pnmstitch` - pnmstitch License
     *     * `PolyForm-Noncommercial-1.0.0` - PolyForm Noncommercial License 1.0.0
     *     * `PolyForm-Small-Business-1.0.0` - PolyForm Small Business License 1.0.0
     *     * `PostgreSQL` - PostgreSQL License
     *     * `psfrag` - psfrag License
     *     * `psutils` - psutils License
     *     * `python-ldap` - Python ldap License
     *     * `Python-2.0` - Python License 2.0
     *     * `Python-2.0.1` - Python License 2.0.1
     *     * `PSF-2.0` - Python Software Foundation License 2.0
     *     * `QPL-1.0` - Q Public License 1.0
     *     * `QPL-1.0-INRIA-2004` - Q Public License 1.0 - INRIA 2004 variant
     *     * `Qhull` - Qhull License
     *     * `radvd` - radvd License
     *     * `Rdisc` - Rdisc License
     *     * `RPSL-1.0` - RealNetworks Public Source License v1.0
     *     * `RPL-1.1` - Reciprocal Public License 1.1
     *     * `RPL-1.5` - Reciprocal Public License 1.5
     *     * `RHeCos-1.1` - Red Hat eCos Public License v1.1
     *     * `RSCPL` - Ricoh Source Code Public License
     *     * `RSA-MD` - RSA Message-Digest License
     *     * `Ruby` - Ruby License
     *     * `Ruby-pty` - Ruby pty extension license
     *     * `SAX-PD` - Sax Public Domain Notice
     *     * `SAX-PD-2.0` - Sax Public Domain Notice 2.0
     *     * `Saxpath` - Saxpath License
     *     * `SCEA` - SCEA Shared Source License
     *     * `SchemeReport` - Scheme Language Report License
     *     * `SWL` - Scheme Widget Library (SWL) Software License Agreement
     *     * `SMPPL` - Secure Messaging Protocol Public License
     *     * `Sendmail` - Sendmail License
     *     * `Sendmail-8.23` - Sendmail License 8.23
     *     * `Sendmail-Open-Source-1.1` - Sendmail Open Source License v1.1
     *     * `SSPL-1.0` - Server Side Public License, v 1
     *     * `SGI-B-1.0` - SGI Free Software License B v1.0
     *     * `SGI-B-1.1` - SGI Free Software License B v1.1
     *     * `SGI-B-2.0` - SGI Free Software License B v2.0
     *     * `SGI-OpenGL` - SGI OpenGL License
     *     * `SGP4` - SGP4 Permission Notice
     *     * `OFL-1.0` - SIL Open Font License 1.0
     *     * `OFL-1.0-no-RFN` - SIL Open Font License 1.0 with no Reserved Font Name
     *     * `OFL-1.0-RFN` - SIL Open Font License 1.0 with Reserved Font Name
     *     * `OFL-1.1` - SIL Open Font License 1.1
     *     * `OFL-1.1-no-RFN` - SIL Open Font License 1.1 with no Reserved Font Name
     *     * `OFL-1.1-RFN` - SIL Open Font License 1.1 with Reserved Font Name
     *     * `SimPL-2.0` - Simple Public License 2.0
     *     * `SL` - SL License
     *     * `Sleepycat` - Sleepycat License
     *     * `SMAIL-GPL` - SMAIL General Public License
     *     * `SNIA` - SNIA Public License 1.1
     *     * `snprintf` - snprintf License
     *     * `softSurfer` - softSurfer License
     *     * `SHL-0.5` - Solderpad Hardware License v0.5
     *     * `SHL-0.51` - Solderpad Hardware License, Version 0.51
     *     * `Soundex` - Soundex License
     *     * `Spencer-86` - Spencer License 86
     *     * `Spencer-94` - Spencer License 94
     *     * `Spencer-99` - Spencer License 99
     *     * `blessing` - SQLite Blessing
     *     * `SSH-OpenSSH` - SSH OpenSSH license
     *     * `SSH-short` - SSH short notice
     *     * `ssh-keyscan` - ssh-keyscan License
     *     * `SSLeay-standalone` - SSLeay License - standalone
     *     * `SMLNJ` - Standard ML of New Jersey License
     *     * `SugarCRM-1.1.3` - SugarCRM Public License v1.1.3
     *     * `SISSL` - Sun Industry Standards Source License v1.1
     *     * `SISSL-1.2` - Sun Industry Standards Source License v1.2
     *     * `Sun-PPP` - Sun PPP License
     *     * `Sun-PPP-2000` - Sun PPP License (2000)
     *     * `SPL-1.0` - Sun Public License v1.0
     *     * `SunPro` - SunPro License
     *     * `swrule` - swrule License
     *     * `Watcom-1.0` - Sybase Open Watcom Public License 1.0
     *     * `Symlinks` - Symlinks License
     *     * `BSD-Systemics` - Systemics BSD variant license
     *     * `BSD-Systemics-W3Works` - Systemics W3Works BSD variant license
     *     * `OGDL-Taiwan-1.0` - Taiwan Open Government Data License, version 1.0
     *     * `TAPR-OHL-1.0` - TAPR Open Hardware License v1.0
     *     * `TCL` - TCL/TK License
     *     * `TCP-wrappers` - TCP Wrappers License
     *     * `TU-Berlin-1.0` - Technische Universitaet Berlin License 1.0
     *     * `TU-Berlin-2.0` - Technische Universitaet Berlin License 2.0
     *     * `TermReadKey` - TermReadKey License
     *     * `TTWL` - Text-Tabs+Wrap License
     *     * `MirOS` - The MirOS Licence
     *     * `Parity-6.0.0` - The Parity Public License 6.0.0
     *     * `Parity-7.0.0` - The Parity Public License 7.0.0
     *     * `Unlicense` - The Unlicense
     *     * `ThirdEye` - ThirdEye License
     *     * `TPL-1.0` - THOR Public License 1.0
     *     * `threeparttable` - threeparttable License
     *     * `TPDL` - Time::ParseDate License
     *     * `TMate` - TMate Open Source License
     *     * `TORQUE-1.1` - TORQUE v2.5+ Software License v1.1
     *     * `TGPPL-1.0` - Transitive Grace Period Public Licence 1.0
     *     * `TOSL` - Trusster Open Source License
     *     * `TrustedQSL` - TrustedQSL License
     *     * `TTYP0` - TTYP0 License
     *     * `Ubuntu-font-1.0` - Ubuntu Font Licence v1.0
     *     * `UCAR` - UCAR License
     *     * `ulem` - ulem License
     *     * `Unicode-DFS-2015` - Unicode License Agreement - Data Files and Software (2015)
     *     * `Unicode-DFS-2016` - Unicode License Agreement - Data Files and Software (2016)
     *     * `Unicode-3.0` - Unicode License v3
     *     * `Unicode-TOU` - Unicode Terms of Use
     *     * `OPL-UK-3.0` - United    Kingdom Open Parliament Licence v3.0
     *     * `UPL-1.0` - Universal Permissive License v1.0
     *     * `NCSA` - University of Illinois/NCSA Open Source License
     *     * `UnixCrypt` - UnixCrypt License
     *     * `UCL-1.0` - Upstream Compatibility License v1.0
     *     * `URT-RLE` - Utah Raster Toolkit Run Length Encoded License
     *     * `Vim` - Vim License
     *     * `VOSTROM` - VOSTROM Public License for Open Source
     *     * `VSL-1.0` - Vovida Software License v1.0
     *     * `W3C-20150513` - W3C Software Notice and Document License (2015-05-13)
     *     * `W3C-19980720` - W3C Software Notice and License (1998-07-20)
     *     * `W3C` - W3C Software Notice and License (2002-12-31)
     *     * `w3m` - w3m License
     *     * `Widget-Workshop` - Widget Workshop License
     *     * `Wsuipa` - Wsuipa License
     *     * `wwl` - WWL License
     *     * `Xnet` - X.Net License
     *     * `X11` - X11 License
     *     * `X11-distribute-modifications-variant` - X11 License Distribution Modification Variant
     *     * `X11-swapped` - X11 swapped final paragraphs
     *     * `Xdebug-1.03` - Xdebug License v 1.03
     *     * `Xerox` - Xerox License
     *     * `Xfig` - Xfig License
     *     * `XFree86-1.1` - XFree86 License 1.1
     *     * `xinetd` - xinetd License
     *     * `xkeyboard-config-Zinoviev` - xkeyboard-config Zinoviev License
     *     * `xlock` - xlock License
     *     * `xpp` - XPP License
     *     * `XSkat` - XSkat License
     *     * `xzoom` - xzoom License
     *     * `YPL-1.0` - Yahoo! Public License v1.0
     *     * `YPL-1.1` - Yahoo! Public License v1.1
     *     * `Zed` - Zed License
     *     * `Zeeff` - Zeeff License
     *     * `Zend-2.0` - Zend License v2.0
     *     * `Zimbra-1.3` - Zimbra Public License v1.3
     *     * `Zimbra-1.4` - Zimbra Public License v1.4
     *     * `Zlib` - zlib License
     *     * `zlib-acknowledgement` - zlib/libpng License with Acknowledgement
     *     * `ZPL-1.1` - Zope Public License 1.1
     *     * `ZPL-2.0` - Zope Public License 2.0
     *     * `ZPL-2.1` - Zope Public License 2.1
     * @enum {string}
     */
    LicenseEnum:
      | "proprietary"
      | "3D-Slicer-1.0"
      | "Glide"
      | "Abstyles"
      | "AFL-1.1"
      | "AFL-1.2"
      | "AFL-2.0"
      | "AFL-2.1"
      | "AFL-3.0"
      | "AMPAS"
      | "AdaCore-doc"
      | "APL-1.0"
      | "Adobe-Display-PostScript"
      | "Adobe-Glyph"
      | "APAFML"
      | "Adobe-2006"
      | "Adobe-Utopia"
      | "AGPL-1.0-only"
      | "AGPL-1.0-or-later"
      | "Afmparse"
      | "Aladdin"
      | "ADSL"
      | "AMD-newlib"
      | "AMDPLPA"
      | "AML-glslang"
      | "ANTLR-PD"
      | "ANTLR-PD-fallback"
      | "any-OSI"
      | "any-OSI-perl-modules"
      | "Apache-1.0"
      | "Apache-1.1"
      | "Apache-2.0"
      | "App-s2p"
      | "AML"
      | "APSL-1.0"
      | "APSL-1.1"
      | "APSL-1.2"
      | "APSL-2.0"
      | "Arphic-1999"
      | "Artistic-1.0"
      | "Artistic-1.0-Perl"
      | "Artistic-1.0-cl8"
      | "Artistic-2.0"
      | "ASWF-Digital-Assets-1.1"
      | "ASWF-Digital-Assets-1.0"
      | "AAL"
      | "Baekmuk"
      | "Bahyph"
      | "Barr"
      | "bcrypt-Solar-Designer"
      | "Beerware"
      | "Bitstream-Charter"
      | "Bitstream-Vera"
      | "BitTorrent-1.0"
      | "BitTorrent-1.1"
      | "BlueOak-1.0.0"
      | "Boehm-GC"
      | "Boehm-GC-without-fee"
      | "BSL-1.0"
      | "Borceux"
      | "Brian-Gladman-2-Clause"
      | "Brian-Gladman-3-Clause"
      | "BSD-1-Clause"
      | "BSD-2-Clause"
      | "BSD-2-Clause-first-lines"
      | "BSD-2-Clause-Darwin"
      | "BSD-2-Clause-pkgconf-disclaimer"
      | "BSD-2-Clause-Views"
      | "BSD-3-Clause"
      | "BSD-3-Clause-acpica"
      | "BSD-3-Clause-Clear"
      | "BSD-3-Clause-flex"
      | "BSD-3-Clause-Modification"
      | "BSD-3-Clause-No-Military-License"
      | "BSD-3-Clause-No-Nuclear-License"
      | "BSD-3-Clause-No-Nuclear-License-2014"
      | "BSD-3-Clause-No-Nuclear-Warranty"
      | "BSD-3-Clause-Open-MPI"
      | "BSD-3-Clause-Sun"
      | "BSD-4-Clause-Shortened"
      | "BSD-4-Clause"
      | "BSD-4.3RENO"
      | "BSD-4.3TAHOE"
      | "BSD-Advertising-Acknowledgement"
      | "BSD-Protection"
      | "BSD-Source-Code"
      | "BSD-Source-beginning-file"
      | "BSD-3-Clause-Attribution"
      | "BSD-Attribution-HPND-disclaimer"
      | "0BSD"
      | "BSD-2-Clause-Patent"
      | "BSD-4-Clause-UC"
      | "BSD-Inferno-Nettverk"
      | "BUSL-1.1"
      | "bzip2-1.0.6"
      | "Caldera"
      | "Caldera-no-preamble"
      | "Catharon"
      | "CECILL-1.0"
      | "CECILL-1.1"
      | "CECILL-2.0"
      | "CECILL-2.1"
      | "CECILL-B"
      | "CECILL-C"
      | "CERN-OHL-1.1"
      | "CERN-OHL-1.2"
      | "CERN-OHL-P-2.0"
      | "CERN-OHL-S-2.0"
      | "CERN-OHL-W-2.0"
      | "CFITSIO"
      | "check-cvs"
      | "checkmk"
      | "ClArtistic"
      | "Clips"
      | "CMU-Mach-nodoc"
      | "MIT-CMU"
      | "CMU-Mach"
      | "CNRI-Jython"
      | "CNRI-Python"
      | "CNRI-Python-GPL-Compatible"
      | "CPOL-1.02"
      | "CDDL-1.0"
      | "CDDL-1.1"
      | "CDL-1.0"
      | "LOOP"
      | "CPAL-1.0"
      | "CPL-1.0"
      | "cve-tou"
      | "CDLA-Permissive-1.0"
      | "CDLA-Permissive-2.0"
      | "CDLA-Sharing-1.0"
      | "Community-Spec-1.0"
      | "C-UDA-1.0"
      | "CATOSL-1.1"
      | "Condor-1.1"
      | "COIL-1.0"
      | "copyleft-next-0.3.0"
      | "copyleft-next-0.3.1"
      | "Cornell-Lossless-JPEG"
      | "CC-PDM-1.0"
      | "CC-BY-1.0"
      | "CC-BY-2.0"
      | "CC-BY-2.5-AU"
      | "CC-BY-2.5"
      | "CC-BY-3.0-AU"
      | "CC-BY-3.0-AT"
      | "CC-BY-3.0-DE"
      | "CC-BY-3.0-IGO"
      | "CC-BY-3.0-NL"
      | "CC-BY-3.0-US"
      | "CC-BY-3.0"
      | "CC-BY-4.0"
      | "CC-BY-ND-1.0"
      | "CC-BY-ND-2.0"
      | "CC-BY-ND-2.5"
      | "CC-BY-ND-3.0-DE"
      | "CC-BY-ND-3.0"
      | "CC-BY-ND-4.0"
      | "CC-BY-NC-1.0"
      | "CC-BY-NC-2.0"
      | "CC-BY-NC-2.5"
      | "CC-BY-NC-3.0-DE"
      | "CC-BY-NC-3.0"
      | "CC-BY-NC-4.0"
      | "CC-BY-NC-ND-1.0"
      | "CC-BY-NC-ND-2.0"
      | "CC-BY-NC-ND-2.5"
      | "CC-BY-NC-ND-3.0-DE"
      | "CC-BY-NC-ND-3.0-IGO"
      | "CC-BY-NC-ND-3.0"
      | "CC-BY-NC-ND-4.0"
      | "CC-BY-NC-SA-1.0"
      | "CC-BY-NC-SA-2.0-UK"
      | "CC-BY-NC-SA-2.0"
      | "CC-BY-NC-SA-2.0-DE"
      | "CC-BY-NC-SA-2.5"
      | "CC-BY-NC-SA-3.0-DE"
      | "CC-BY-NC-SA-3.0-IGO"
      | "CC-BY-NC-SA-3.0"
      | "CC-BY-NC-SA-4.0"
      | "CC-BY-SA-1.0"
      | "CC-BY-SA-2.0-UK"
      | "CC-BY-SA-2.0"
      | "CC-BY-SA-2.1-JP"
      | "CC-BY-SA-2.5"
      | "CC-BY-SA-3.0-AT"
      | "CC-BY-SA-3.0-DE"
      | "CC-BY-SA-3.0"
      | "CC-BY-SA-4.0"
      | "CC-BY-NC-SA-2.0-FR"
      | "CC-BY-SA-3.0-IGO"
      | "CC-PDDC"
      | "CC-SA-1.0"
      | "CC0-1.0"
      | "Cronyx"
      | "Crossword"
      | "CAL-1.0"
      | "CAL-1.0-Combined-Work-Exception"
      | "CryptoSwift"
      | "CrystalStacker"
      | "CUA-OPL-1.0"
      | "Cube"
      | "curl"
      | "DL-DE-BY-2.0"
      | "DL-DE-ZERO-2.0"
      | "dtoa"
      | "DEC-3-Clause"
      | "DRL-1.0"
      | "DRL-1.1"
      | "D-FSL-1.0"
      | "diffmark"
      | "WTFPL"
      | "DOC"
      | "DocBook-DTD"
      | "DocBook-Schema"
      | "DocBook-Stylesheet"
      | "DocBook-XML"
      | "Dotseqn"
      | "DSDP"
      | "dvipdfm"
      | "EPL-1.0"
      | "EPL-2.0"
      | "ECL-1.0"
      | "ECL-2.0"
      | "eGenix"
      | "EFL-1.0"
      | "EFL-2.0"
      | "Elastic-2.0"
      | "MIT-advertising"
      | "MIT-enna"
      | "Entessa"
      | "EPICS"
      | "ErlPL-1.1"
      | "etalab-2.0"
      | "EUDatagrid"
      | "EUPL-1.0"
      | "EUPL-1.1"
      | "EUPL-1.2"
      | "Eurosym"
      | "Fair"
      | "MIT-feh"
      | "Ferguson-Twofish"
      | "Frameworx-1.0"
      | "FDK-AAC"
      | "FreeBSD-DOC"
      | "FreeImage"
      | "FTL"
      | "FSFAP"
      | "FSFAP-no-warranty-disclaimer"
      | "FSFUL"
      | "FSFULLRWD"
      | "FSFULLR"
      | "FSL-1.1-ALv2"
      | "FSL-1.1-MIT"
      | "Furuseth"
      | "FBM"
      | "fwlw"
      | "Game-Programming-Gems"
      | "GD"
      | "generic-xts"
      | "Giftware"
      | "GL2PS"
      | "Glulxe"
      | "GCR-docs"
      | "AGPL-3.0-only"
      | "AGPL-3.0-or-later"
      | "GFDL-1.1-only"
      | "GFDL-1.1-invariants-only"
      | "GFDL-1.1-no-invariants-only"
      | "GFDL-1.1-or-later"
      | "GFDL-1.1-invariants-or-later"
      | "GFDL-1.1-no-invariants-or-later"
      | "GFDL-1.2-only"
      | "GFDL-1.2-invariants-only"
      | "GFDL-1.2-no-invariants-only"
      | "GFDL-1.2-or-later"
      | "GFDL-1.2-invariants-or-later"
      | "GFDL-1.2-no-invariants-or-later"
      | "GFDL-1.3-only"
      | "GFDL-1.3-invariants-only"
      | "GFDL-1.3-no-invariants-only"
      | "GFDL-1.3-or-later"
      | "GFDL-1.3-invariants-or-later"
      | "GFDL-1.3-no-invariants-or-later"
      | "GPL-1.0-only"
      | "GPL-1.0-or-later"
      | "GPL-2.0-only"
      | "GPL-2.0-or-later"
      | "GPL-3.0-only"
      | "GPL-3.0-or-later"
      | "LGPL-2.1-only"
      | "LGPL-2.1-or-later"
      | "LGPL-3.0-only"
      | "LGPL-3.0-or-later"
      | "LGPL-2.0-only"
      | "LGPL-2.0-or-later"
      | "gnuplot"
      | "GLWTPL"
      | "Graphics-Gems"
      | "gSOAP-1.3b"
      | "gtkbook"
      | "Gutmann"
      | "HaskellReport"
      | "hdparm"
      | "HP-1986"
      | "HP-1989"
      | "BSD-3-Clause-HP"
      | "HIDAPI"
      | "Hippocratic-2.1"
      | "HPND"
      | "HPND-INRIA-IMAG"
      | "HPND-DEC"
      | "HPND-doc-sell"
      | "HPND-doc"
      | "HPND-Fenneberg-Livingston"
      | "HPND-Intel"
      | "HPND-Kevlin-Henney"
      | "HPND-Markus-Kuhn"
      | "HPND-merchantability-variant"
      | "HPND-Netrek"
      | "HPND-Pbmplus"
      | "HPND-sell-regexpr"
      | "HPND-sell-variant"
      | "HPND-sell-MIT-disclaimer-xserver"
      | "HPND-UC"
      | "HPND-UC-export-US"
      | "HPND-MIT-disclaimer"
      | "HPND-sell-variant-MIT-disclaimer"
      | "HPND-sell-variant-MIT-disclaimer-rev"
      | "HPND-export2-US"
      | "HPND-export-US"
      | "HPND-export-US-acknowledgement"
      | "HPND-export-US-modify"
      | "HTMLTIDY"
      | "IBM-pibs"
      | "IPL-1.0"
      | "ICU"
      | "IEC-Code-Components-EULA"
      | "ImageMagick"
      | "iMatix"
      | "Imlib2"
      | "IJG"
      | "IJG-short"
      | "Info-ZIP"
      | "Inner-Net-2.0"
      | "InnoSetup"
      | "Intel-ACPI"
      | "Intel"
      | "Interbase-1.0"
      | "IPA"
      | "ISC"
      | "ISC-Veillard"
      | "Jam"
      | "JPNIC"
      | "JasPer-2.0"
      | "jove"
      | "JPL-image"
      | "JSON"
      | "Kastrup"
      | "Kazlib"
      | "Knuth-CTAN"
      | "LPPL-1.0"
      | "LPPL-1.1"
      | "LPPL-1.2"
      | "LPPL-1.3a"
      | "LPPL-1.3c"
      | "Latex2e"
      | "Latex2e-translated-notice"
      | "BSD-3-Clause-LBNL"
      | "Leptonica"
      | "LGPLLR"
      | "Libpng"
      | "libselinux-1.0"
      | "libtiff"
      | "libutil-David-Nugent"
      | "LAL-1.2"
      | "LAL-1.3"
      | "LiLiQ-P-1.1"
      | "LiLiQ-Rplus-1.1"
      | "LiLiQ-R-1.1"
      | "Linux-OpenIB"
      | "Linux-man-pages-1-para"
      | "Linux-man-pages-copyleft"
      | "Linux-man-pages-copyleft-2-para"
      | "Linux-man-pages-copyleft-var"
      | "LPD-document"
      | "lsof"
      | "LPL-1.02"
      | "LPL-1.0"
      | "Lucida-Bitmap-Fonts"
      | "LZMA-SDK-9.11-to-9.20"
      | "LZMA-SDK-9.22"
      | "Mackerras-3-Clause-acknowledgment"
      | "Mackerras-3-Clause"
      | "magaz"
      | "mailprio"
      | "MakeIndex"
      | "man2html"
      | "Martin-Birgmeier"
      | "MTLL"
      | "McPhee-slideshow"
      | "metamail"
      | "UMich-Merit"
      | "MS-LPL"
      | "MS-PL"
      | "MS-RL"
      | "Minpack"
      | "MIPS"
      | "MITNFA"
      | "MIT-Click"
      | "MIT-Festival"
      | "MIT-Khronos-old"
      | "MIT"
      | "MIT-Modern-Variant"
      | "MIT-0"
      | "MIT-open-group"
      | "MIT-testregex"
      | "MIT-Wu"
      | "MMIXware"
      | "Motosoto"
      | "MPL-1.0"
      | "MPL-1.1"
      | "MPL-2.0"
      | "MPL-2.0-no-copyleft-exception"
      | "MPEG-SSG"
      | "mpi-permissive"
      | "mpich2"
      | "mplus"
      | "MulanPSL-1.0"
      | "MulanPSL-2.0"
      | "Multics"
      | "Mup"
      | "NAIST-2003"
      | "NASA-1.3"
      | "Naumen"
      | "NCBI-PD"
      | "NCL"
      | "NBPL-1.0"
      | "NetCDF"
      | "NGPL"
      | "NOSL"
      | "NPL-1.0"
      | "NPL-1.1"
      | "Newsletr"
      | "NICTA-1.0"
      | "NIST-PD"
      | "NIST-PD-fallback"
      | "NIST-Software"
      | "NLPL"
      | "Nokia"
      | "NCGL-UK-2.0"
      | "NPOSL-3.0"
      | "NLOD-1.0"
      | "NLOD-2.0"
      | "Noweb"
      | "NRL"
      | "NTIA-PD"
      | "NTP"
      | "NTP-0"
      | "OAR"
      | "OCLC-2.0"
      | "OFFIS"
      | "OGC-1.0"
      | "OCCT-PL"
      | "ODC-By-1.0"
      | "ODbL-1.0"
      | "PDDL-1.0"
      | "OGL-Canada-2.0"
      | "OGL-UK-1.0"
      | "OGL-UK-2.0"
      | "OGL-UK-3.0"
      | "OGTSL"
      | "OLDAP-2.2.2"
      | "OLDAP-1.1"
      | "OLDAP-1.2"
      | "OLDAP-1.3"
      | "OLDAP-1.4"
      | "OLDAP-2.0"
      | "OLDAP-2.0.1"
      | "OLDAP-2.1"
      | "OLDAP-2.2"
      | "OLDAP-2.2.1"
      | "OLDAP-2.3"
      | "OLDAP-2.4"
      | "OLDAP-2.5"
      | "OLDAP-2.6"
      | "OLDAP-2.7"
      | "OLDAP-2.8"
      | "OLFL-1.3"
      | "OML"
      | "OPL-1.0"
      | "OPUBL-1.0"
      | "OSL-1.0"
      | "OSL-1.1"
      | "OSL-2.0"
      | "OSL-2.1"
      | "OSL-3.0"
      | "O-UDA-1.0"
      | "OpenPBS-2.3"
      | "OpenSSL"
      | "OpenSSL-standalone"
      | "OpenVision"
      | "OSET-PL-2.1"
      | "PADL"
      | "PPL"
      | "PHP-3.0"
      | "PHP-3.01"
      | "Pixar"
      | "pkgconf"
      | "Plexus"
      | "libpng-2.0"
      | "pnmstitch"
      | "PolyForm-Noncommercial-1.0.0"
      | "PolyForm-Small-Business-1.0.0"
      | "PostgreSQL"
      | "psfrag"
      | "psutils"
      | "python-ldap"
      | "Python-2.0"
      | "Python-2.0.1"
      | "PSF-2.0"
      | "QPL-1.0"
      | "QPL-1.0-INRIA-2004"
      | "Qhull"
      | "radvd"
      | "Rdisc"
      | "RPSL-1.0"
      | "RPL-1.1"
      | "RPL-1.5"
      | "RHeCos-1.1"
      | "RSCPL"
      | "RSA-MD"
      | "Ruby"
      | "Ruby-pty"
      | "SAX-PD"
      | "SAX-PD-2.0"
      | "Saxpath"
      | "SCEA"
      | "SchemeReport"
      | "SWL"
      | "SMPPL"
      | "Sendmail"
      | "Sendmail-8.23"
      | "Sendmail-Open-Source-1.1"
      | "SSPL-1.0"
      | "SGI-B-1.0"
      | "SGI-B-1.1"
      | "SGI-B-2.0"
      | "SGI-OpenGL"
      | "SGP4"
      | "OFL-1.0"
      | "OFL-1.0-no-RFN"
      | "OFL-1.0-RFN"
      | "OFL-1.1"
      | "OFL-1.1-no-RFN"
      | "OFL-1.1-RFN"
      | "SimPL-2.0"
      | "SL"
      | "Sleepycat"
      | "SMAIL-GPL"
      | "SNIA"
      | "snprintf"
      | "softSurfer"
      | "SHL-0.5"
      | "SHL-0.51"
      | "Soundex"
      | "Spencer-86"
      | "Spencer-94"
      | "Spencer-99"
      | "blessing"
      | "SSH-OpenSSH"
      | "SSH-short"
      | "ssh-keyscan"
      | "SSLeay-standalone"
      | "SMLNJ"
      | "SugarCRM-1.1.3"
      | "SISSL"
      | "SISSL-1.2"
      | "Sun-PPP"
      | "Sun-PPP-2000"
      | "SPL-1.0"
      | "SunPro"
      | "swrule"
      | "Watcom-1.0"
      | "Symlinks"
      | "BSD-Systemics"
      | "BSD-Systemics-W3Works"
      | "OGDL-Taiwan-1.0"
      | "TAPR-OHL-1.0"
      | "TCL"
      | "TCP-wrappers"
      | "TU-Berlin-1.0"
      | "TU-Berlin-2.0"
      | "TermReadKey"
      | "TTWL"
      | "MirOS"
      | "Parity-6.0.0"
      | "Parity-7.0.0"
      | "Unlicense"
      | "ThirdEye"
      | "TPL-1.0"
      | "threeparttable"
      | "TPDL"
      | "TMate"
      | "TORQUE-1.1"
      | "TGPPL-1.0"
      | "TOSL"
      | "TrustedQSL"
      | "TTYP0"
      | "Ubuntu-font-1.0"
      | "UCAR"
      | "ulem"
      | "Unicode-DFS-2015"
      | "Unicode-DFS-2016"
      | "Unicode-3.0"
      | "Unicode-TOU"
      | "OPL-UK-3.0"
      | "UPL-1.0"
      | "NCSA"
      | "UnixCrypt"
      | "UCL-1.0"
      | "URT-RLE"
      | "Vim"
      | "VOSTROM"
      | "VSL-1.0"
      | "W3C-20150513"
      | "W3C-19980720"
      | "W3C"
      | "w3m"
      | "Widget-Workshop"
      | "Wsuipa"
      | "wwl"
      | "Xnet"
      | "X11"
      | "X11-distribute-modifications-variant"
      | "X11-swapped"
      | "Xdebug-1.03"
      | "Xerox"
      | "Xfig"
      | "XFree86-1.1"
      | "xinetd"
      | "xkeyboard-config-Zinoviev"
      | "xlock"
      | "xpp"
      | "XSkat"
      | "xzoom"
      | "YPL-1.0"
      | "YPL-1.1"
      | "Zed"
      | "Zeeff"
      | "Zend-2.0"
      | "Zimbra-1.3"
      | "Zimbra-1.4"
      | "Zlib"
      | "zlib-acknowledgement"
      | "ZPL-1.1"
      | "ZPL-2.0"
      | "ZPL-2.1";
    LockRequest: {
      lock: boolean;
    };
    Memory: {
      readonly id: number;
      source: string;
      target: string;
      source_language: number;
      target_language: number;
      origin: string;
      project?: number | null;
      from_file?: boolean;
      shared?: boolean;
    };
    MemoryCreateError:
      | components["schemas"]["MemoryCreateNonFieldErrorsErrorComponent"]
      | components["schemas"]["MemoryCreateSourceErrorComponent"]
      | components["schemas"]["MemoryCreateTargetErrorComponent"]
      | components["schemas"]["MemoryCreateSourceLanguageErrorComponent"]
      | components["schemas"]["MemoryCreateTargetLanguageErrorComponent"]
      | components["schemas"]["MemoryCreateOriginErrorComponent"]
      | components["schemas"]["MemoryCreateProjectErrorComponent"]
      | components["schemas"]["MemoryCreateFromFileErrorComponent"]
      | components["schemas"]["MemoryCreateSharedErrorComponent"];
    MemoryCreateErrorResponse400:
      | components["schemas"]["MemoryCreateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    MemoryCreateFromFileErrorComponent: {
      /**
       * @description * `from_file` - from_file (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "from_file";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    MemoryCreateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    MemoryCreateOriginErrorComponent: {
      /**
       * @description * `origin` - origin (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "origin";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    MemoryCreateProjectErrorComponent: {
      /**
       * @description * `project` - project (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "project";
      /**
       * @description * `does_not_exist` - does_not_exist
       *     * `incorrect_type` - incorrect_type
       * @enum {string}
       */
      code: "does_not_exist" | "incorrect_type";
      detail: string;
    };
    MemoryCreateSharedErrorComponent: {
      /**
       * @description * `shared` - shared (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "shared";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    MemoryCreateSourceErrorComponent: {
      /**
       * @description * `source` - source (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    MemoryCreateSourceLanguageErrorComponent: {
      /**
       * @description * `source_language` - source_language (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language";
      /**
       * @description * `does_not_exist` - does_not_exist
       *     * `incorrect_type` - incorrect_type
       *     * `null` - null
       *     * `required` - required
       * @enum {string}
       */
      code: "does_not_exist" | "incorrect_type" | "null" | "required";
      detail: string;
    };
    MemoryCreateTargetErrorComponent: {
      /**
       * @description * `target` - target (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "target";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    MemoryCreateTargetLanguageErrorComponent: {
      /**
       * @description * `target_language` - target_language (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "target_language";
      /**
       * @description * `does_not_exist` - does_not_exist
       *     * `incorrect_type` - incorrect_type
       *     * `null` - null
       *     * `required` - required
       * @enum {string}
       */
      code: "does_not_exist" | "incorrect_type" | "null" | "required";
      detail: string;
    };
    MemoryCreateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["MemoryCreateError"][];
    };
    MemoryDestroyErrorResponse400: components["schemas"]["ParseErrorResponse"];
    MemoryListErrorResponse400: components["schemas"]["ParseErrorResponse"];
    MemoryPartialUpdateError:
      | components["schemas"]["MemoryPartialUpdateNonFieldErrorsErrorComponent"]
      | components["schemas"]["MemoryPartialUpdateSourceErrorComponent"]
      | components["schemas"]["MemoryPartialUpdateTargetErrorComponent"]
      | components["schemas"]["MemoryPartialUpdateSourceLanguageErrorComponent"]
      | components["schemas"]["MemoryPartialUpdateTargetLanguageErrorComponent"]
      | components["schemas"]["MemoryPartialUpdateOriginErrorComponent"]
      | components["schemas"]["MemoryPartialUpdateProjectErrorComponent"]
      | components["schemas"]["MemoryPartialUpdateFromFileErrorComponent"]
      | components["schemas"]["MemoryPartialUpdateSharedErrorComponent"];
    MemoryPartialUpdateErrorResponse400:
      | components["schemas"]["MemoryPartialUpdateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    MemoryPartialUpdateFromFileErrorComponent: {
      /**
       * @description * `from_file` - from_file (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "from_file";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    MemoryPartialUpdateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    MemoryPartialUpdateOriginErrorComponent: {
      /**
       * @description * `origin` - origin (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "origin";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    MemoryPartialUpdateProjectErrorComponent: {
      /**
       * @description * `project` - project (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "project";
      /**
       * @description * `does_not_exist` - does_not_exist
       *     * `incorrect_type` - incorrect_type
       * @enum {string}
       */
      code: "does_not_exist" | "incorrect_type";
      detail: string;
    };
    MemoryPartialUpdateSharedErrorComponent: {
      /**
       * @description * `shared` - shared (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "shared";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    MemoryPartialUpdateSourceErrorComponent: {
      /**
       * @description * `source` - source (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    MemoryPartialUpdateSourceLanguageErrorComponent: {
      /**
       * @description * `source_language` - source_language (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language";
      /**
       * @description * `does_not_exist` - does_not_exist
       *     * `incorrect_type` - incorrect_type
       *     * `null` - null
       *     * `required` - required
       * @enum {string}
       */
      code: "does_not_exist" | "incorrect_type" | "null" | "required";
      detail: string;
    };
    MemoryPartialUpdateTargetErrorComponent: {
      /**
       * @description * `target` - target (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "target";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    MemoryPartialUpdateTargetLanguageErrorComponent: {
      /**
       * @description * `target_language` - target_language (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "target_language";
      /**
       * @description * `does_not_exist` - does_not_exist
       *     * `incorrect_type` - incorrect_type
       *     * `null` - null
       *     * `required` - required
       * @enum {string}
       */
      code: "does_not_exist" | "incorrect_type" | "null" | "required";
      detail: string;
    };
    MemoryPartialUpdateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["MemoryPartialUpdateError"][];
    };
    MemoryRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    MemoryUpdateError:
      | components["schemas"]["MemoryUpdateNonFieldErrorsErrorComponent"]
      | components["schemas"]["MemoryUpdateSourceErrorComponent"]
      | components["schemas"]["MemoryUpdateTargetErrorComponent"]
      | components["schemas"]["MemoryUpdateSourceLanguageErrorComponent"]
      | components["schemas"]["MemoryUpdateTargetLanguageErrorComponent"]
      | components["schemas"]["MemoryUpdateOriginErrorComponent"]
      | components["schemas"]["MemoryUpdateProjectErrorComponent"]
      | components["schemas"]["MemoryUpdateFromFileErrorComponent"]
      | components["schemas"]["MemoryUpdateSharedErrorComponent"];
    MemoryUpdateErrorResponse400:
      | components["schemas"]["MemoryUpdateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    MemoryUpdateFromFileErrorComponent: {
      /**
       * @description * `from_file` - from_file (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "from_file";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    MemoryUpdateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    MemoryUpdateOriginErrorComponent: {
      /**
       * @description * `origin` - origin (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "origin";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    MemoryUpdateProjectErrorComponent: {
      /**
       * @description * `project` - project (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "project";
      /**
       * @description * `does_not_exist` - does_not_exist
       *     * `incorrect_type` - incorrect_type
       * @enum {string}
       */
      code: "does_not_exist" | "incorrect_type";
      detail: string;
    };
    MemoryUpdateSharedErrorComponent: {
      /**
       * @description * `shared` - shared (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "shared";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    MemoryUpdateSourceErrorComponent: {
      /**
       * @description * `source` - source (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    MemoryUpdateSourceLanguageErrorComponent: {
      /**
       * @description * `source_language` - source_language (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language";
      /**
       * @description * `does_not_exist` - does_not_exist
       *     * `incorrect_type` - incorrect_type
       *     * `null` - null
       *     * `required` - required
       * @enum {string}
       */
      code: "does_not_exist" | "incorrect_type" | "null" | "required";
      detail: string;
    };
    MemoryUpdateTargetErrorComponent: {
      /**
       * @description * `target` - target (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "target";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    MemoryUpdateTargetLanguageErrorComponent: {
      /**
       * @description * `target_language` - target_language (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "target_language";
      /**
       * @description * `does_not_exist` - does_not_exist
       *     * `incorrect_type` - incorrect_type
       *     * `null` - null
       *     * `required` - required
       * @enum {string}
       */
      code: "does_not_exist" | "incorrect_type" | "null" | "required";
      detail: string;
    };
    MemoryUpdateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["MemoryUpdateError"][];
    };
    /**
     * @description * `merge` - Merge
     *     * `rebase` - Rebase
     *     * `merge_noff` - Merge without fast-forward
     * @enum {string}
     */
    MergeStyleEnum: "merge" | "rebase" | "merge_noff";
    /**
     * @description * `translate` - translate
     *     * `approve` - approve
     *     * `suggest` - suggest
     *     * `fuzzy` - fuzzy
     *     * `replace` - replace
     *     * `source` - source
     *     * `add` - add
     * @enum {string}
     */
    MethodEnum:
      | "translate"
      | "approve"
      | "suggest"
      | "fuzzy"
      | "replace"
      | "source"
      | "add";
    Metrics: {
      units: number;
      units_translated: number;
      users: number;
      changes: number;
      projects: number;
      components: number;
      translations: number;
      languages: number;
      checks: number;
      configuration_errors: number;
      suggestions: number;
      celery_queues: {
        [key: string]: number;
      };
      name: string;
    };
    MetricsRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    /**
     * @description * `contact` - Contact maintainers
     *     * `url` - Point to translation instructions URL
     *     * `add` - Create new language file
     *     * `none` - Disable adding new translations
     * @enum {string}
     */
    NewLangEnum: "contact" | "url" | "add" | "none";
    Notification: {
      notification: components["schemas"]["NotificationEnum"];
      readonly id: number;
      scope: components["schemas"]["NotificationScopeEnum"];
      frequency: components["schemas"]["FrequencyEnum"];
      readonly project: components["schemas"]["Project"];
      readonly component: components["schemas"]["Component"];
    };
    /**
     * @description * `RepositoryNotification` - Operation was performed in the repository
     *     * `LockNotification` - Component was locked or unlocked
     *     * `LicenseNotification` - License was changed
     *     * `ParseErrorNotification` - Parse error occurred
     *     * `NewStringNotificaton` - String is available for translation
     *     * `NewContributorNotificaton` - Contributor made their first translation
     *     * `NewSuggestionNotificaton` - Suggestion was added
     *     * `LanguageTranslatedNotificaton` - Language was translated
     *     * `ComponentTranslatedNotificaton` - Component was translated
     *     * `NewCommentNotificaton` - Comment was added
     *     * `MentionCommentNotificaton` - You were mentioned in a comment
     *     * `LastAuthorCommentNotificaton` - Your translation received a comment
     *     * `TranslatedStringNotificaton` - String was edited by user
     *     * `ApprovedStringNotificaton` - String was approved
     *     * `ChangedStringNotificaton` - String was changed
     *     * `NewTranslationNotificaton` - New language was added or requested
     *     * `NewComponentNotificaton` - New translation component was created
     *     * `NewAnnouncementNotificaton` - Announcement was published
     *     * `NewAlertNotificaton` - New alert emerged in a component
     *     * `MergeFailureNotification` - Repository operation failed
     *     * `PendingSuggestionsNotification` - Pending suggestions exist
     *     * `ToDoStringsNotification` - Unfinished strings exist
     * @enum {string}
     */
    NotificationEnum:
      | "RepositoryNotification"
      | "LockNotification"
      | "LicenseNotification"
      | "ParseErrorNotification"
      | "NewStringNotificaton"
      | "NewContributorNotificaton"
      | "NewSuggestionNotificaton"
      | "LanguageTranslatedNotificaton"
      | "ComponentTranslatedNotificaton"
      | "NewCommentNotificaton"
      | "MentionCommentNotificaton"
      | "LastAuthorCommentNotificaton"
      | "TranslatedStringNotificaton"
      | "ApprovedStringNotificaton"
      | "ChangedStringNotificaton"
      | "NewTranslationNotificaton"
      | "NewComponentNotificaton"
      | "NewAnnouncementNotificaton"
      | "NewAlertNotificaton"
      | "MergeFailureNotification"
      | "PendingSuggestionsNotification"
      | "ToDoStringsNotification";
    /**
     * @description * `0` - All
     *     * `10` - Watched
     *     * `20` - Administered
     *     * `30` - Project
     *     * `40` - Component
     * @enum {integer}
     */
    NotificationScopeEnum: 0 | 10 | 20 | 30 | 40;
    /**
     * @description * `commit` - commit
     *     * `pull` - pull
     *     * `push` - push
     *     * `reset` - reset
     *     * `cleanup` - cleanup
     * @enum {string}
     */
    OperationEnum: "commit" | "pull" | "push" | "reset" | "cleanup";
    PaginatedAddonList: {
      /** @example 123 */
      count: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string;
      results: components["schemas"]["Addon"][];
    };
    PaginatedBasicUserList: {
      /** @example 123 */
      count: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string;
      results: components["schemas"]["BasicUser"][];
    };
    PaginatedCategoryList: {
      /** @example 123 */
      count: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string;
      results: components["schemas"]["Category"][];
    };
    PaginatedChangeList: {
      /** @example 123 */
      count: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string;
      results: components["schemas"]["Change"][];
    };
    PaginatedComponentList: {
      /** @example 123 */
      count: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string;
      results: components["schemas"]["Component"][];
    };
    PaginatedComponentListList: {
      /** @example 123 */
      count: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string;
      results: components["schemas"]["ComponentList"][];
    };
    PaginatedGroupList: {
      /** @example 123 */
      count: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string;
      results: components["schemas"]["Group"][];
    };
    PaginatedLanguageList: {
      /** @example 123 */
      count: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string;
      results: components["schemas"]["Language"][];
    };
    PaginatedMemoryList: {
      /** @example 123 */
      count: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string;
      results: components["schemas"]["Memory"][];
    };
    PaginatedNotificationList: {
      /** @example 123 */
      count: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string;
      results: components["schemas"]["Notification"][];
    };
    PaginatedProjectList: {
      /** @example 123 */
      count: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string;
      results: components["schemas"]["Project"][];
    };
    PaginatedRoleList: {
      /** @example 123 */
      count: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string;
      results: components["schemas"]["Role"][];
    };
    PaginatedScreenshotList: {
      /** @example 123 */
      count: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string;
      results: components["schemas"]["Screenshot"][];
    };
    PaginatedTranslationList: {
      /** @example 123 */
      count: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string;
      results: components["schemas"]["Translation"][];
    };
    PaginatedUnitList: {
      /** @example 123 */
      count: number;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string;
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string;
      results: components["schemas"]["Unit"][];
    };
    ParseError: {
      code: components["schemas"]["ParseErrorCodeEnum"];
      detail: string;
      attr: string | null;
    };
    /**
     * @description * `parse_error` - Parse Error
     * @enum {string}
     */
    ParseErrorCodeEnum: "parse_error";
    ParseErrorResponse: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "client_error";
      errors: components["schemas"]["ParseError"][];
    };
    PatchedAddon: {
      /** Format: uri */
      readonly component?: string;
      /** Format: uri */
      readonly project?: string;
      name?: string;
      readonly id?: number;
      configuration?: unknown;
      /** Format: uri */
      readonly url?: string;
    };
    PatchedBasicUser: {
      readonly id?: number;
      full_name?: string;
      /** @description Username may only contain letters, numbers or the following characters: @ . + - _ */
      username?: string;
    };
    PatchedCategory: {
      readonly id?: number;
      /**
       * Category name
       * @description Display name
       */
      name?: string;
      /**
       * URL slug
       * @description Name used in URLs and filenames.
       */
      slug?: string;
      /** Format: uri */
      project?: string;
      /** Format: uri */
      category?: string;
      /** Format: uri */
      readonly url?: string;
      /** Format: uri */
      readonly statistics_url?: string;
    };
    PatchedComponent: {
      /**
       * Component name
       * @description Display name
       */
      name?: string;
      /**
       * URL slug
       * @description Name used in URLs and filenames.
       */
      slug?: string;
      readonly id?: number;
      source_language?: components["schemas"]["Language"];
      readonly project?: components["schemas"]["Project"];
      /**
       * Version control system
       * @description Version control system to use to access your repository containing translations. You can also choose additional integration with third party providers to submit merge requests.
       *
       *     * `gerrit` - Gerrit
       *     * `git` - Git
       *     * `git-force-push` - Git with force push
       *     * `github` - GitHub pull request
       *     * `gitlab` - GitLab merge request
       *     * `local` - No remote repository
       *     * `mercurial` - Mercurial
       *     * `subversion` - Subversion
       */
      vcs?: components["schemas"]["VcsEnum"];
      repo?: string;
      /**
       * Exported repository URL
       * @description URL of repository where users can fetch changes from Weblate
       */
      git_export?: string;
      branch?: string;
      push_branch?: string;
      /**
       * File mask
       * @description Path of files to translate relative to repository root, use * instead of language code, for example: po/*.po or locale/*\/LC_MESSAGES/django.po.
       */
      filemask?: string;
      /**
       * Screenshot file mask
       * @description Path of screenshots relative to repository root, for example: docs/screenshots/*.png.
       */
      screenshot_filemask?: string;
      /**
       * Monolingual base language file
       * @description Filename of translation base file, containing all strings and their source for monolingual translations.
       */
      template?: string;
      /**
       * Edit base file
       * @description Whether users will be able to edit the base file for monolingual translations.
       */
      edit_template?: boolean;
      /**
       * Intermediate language file
       * @description Filename of intermediate translation file. In most cases this is a translation file provided by developers and is used when creating actual source strings.
       */
      intermediate?: string;
      /**
       * Template for new translations
       * @description Filename of file used for creating new translations. For gettext choose .pot file.
       */
      new_base?: string;
      file_format?: components["schemas"]["FileFormatEnum"];
      /** Translation license */
      license?: components["schemas"]["LicenseEnum"];
      readonly license_url?: string;
      /**
       * Contributor license agreement
       * @description Contributor license agreement which needs to be approved before a user can translate this component.
       */
      agreement?: string;
      readonly web_url?: string;
      /** Format: uri */
      readonly url?: string;
      /** Format: uri */
      readonly repository_url?: string;
      /** Format: uri */
      readonly translations_url?: string;
      /** Format: uri */
      readonly statistics_url?: string;
      /** Format: uri */
      readonly lock_url?: string;
      /** Format: uri */
      readonly links_url?: string;
      /** Format: uri */
      readonly changes_list_url?: string;
      /** Format: uri */
      readonly task_url?: string | null;
      /** Format: uri */
      readonly credits_url?: string;
      /**
       * Adding new translation
       * @description How to handle requests for creating new translations.
       *
       *     * `contact` - Contact maintainers
       *     * `url` - Point to translation instructions URL
       *     * `add` - Create new language file
       *     * `none` - Disable adding new translations
       */
      new_lang?: components["schemas"]["NewLangEnum"];
      /** @description Customize language code used to generate the filename for translations created by Weblate.
       *
       *     * `` - Default based on the file format
       *     * `posix` - POSIX style using underscore as a separator
       *     * `posix_lowercase` - POSIX style using underscore as a separator, lower cased
       *     * `bcp` - BCP style using hyphen as a separator
       *     * `posix_long` - POSIX style using underscore as a separator, including country code
       *     * `posix_long_lowercase` - POSIX style using underscore as a separator, including country code, lower cased
       *     * `bcp_long` - BCP style using hyphen as a separator, including country code
       *     * `bcp_legacy` - BCP style using hyphen as a separator, legacy language codes
       *     * `bcp_lower` - BCP style using hyphen as a separator, lower cased
       *     * `android` - Android style
       *     * `appstore` - Apple App Store metadata style
       *     * `googleplay` - Google Play metadata style
       *     * `linux` - Linux style
       *     * `linux_lowercase` - Linux style, lower cased */
      language_code_style?:
        | components["schemas"]["LanguageCodeStyleEnum"]
        | components["schemas"]["BlankEnum"];
      push?: string;
      /**
       * Translation flags
       * @description Additional comma-separated flags to influence Weblate behavior.
       */
      check_flags?: string;
      /** @description Components with higher priority are offered first to translators.
       *
       *     * `60` - Very high
       *     * `80` - High
       *     * `100` - Medium
       *     * `120` - Low
       *     * `140` - Very low */
      priority?: components["schemas"]["PriorityEnum"];
      enforced_checks?: unknown;
      /**
       * Restricted component
       * @description Restrict access to the component to only those explicitly given permission.
       */
      restricted?: boolean;
      /**
       * Repository browser
       * @description Link to repository browser, use {{branch}} for branch, {{filename}} and {{line}} as filename and line placeholders. You might want to strip leading directory by using {{filename|parentdir}}.
       */
      repoweb?: string;
      /**
       * Source string bug reporting address
       * Format: email
       * @description E-mail address for reports on errors in source strings. Leave empty for no e-mails.
       */
      report_source_bugs?: string;
      /** @description Define whether Weblate should merge the upstream repository or rebase changes onto it.
       *
       *     * `merge` - Merge
       *     * `rebase` - Rebase
       *     * `merge_noff` - Merge without fast-forward */
      merge_style?: components["schemas"]["MergeStyleEnum"];
      /**
       * Commit message when translating
       * @description You can use template language for various info, please consult the documentation for more details.
       */
      commit_message?: string;
      /**
       * Commit message when adding translation
       * @description You can use template language for various info, please consult the documentation for more details.
       */
      add_message?: string;
      /**
       * Commit message when removing translation
       * @description You can use template language for various info, please consult the documentation for more details.
       */
      delete_message?: string;
      /**
       * Commit message when merging translation
       * @description You can use template language for various info, please consult the documentation for more details.
       */
      merge_message?: string;
      /**
       * Commit message when add-on makes a change
       * @description You can use template language for various info, please consult the documentation for more details.
       */
      addon_message?: string;
      /**
       * Merge request message
       * @description You can use template language for various info, please consult the documentation for more details.
       */
      pull_message?: string;
      /** @description Whether translation updates in other components will cause automatic translation in this one */
      allow_translation_propagation?: boolean;
      /**
       * Manage strings
       * @description Enables adding and removing strings straight from Weblate. If your strings are extracted from the source code or managed externally you probably want to keep it disabled.
       */
      manage_units?: boolean;
      /**
       * Turn on suggestions
       * @description Whether to allow translation suggestions at all.
       */
      enable_suggestions?: boolean;
      /** @description Users can only vote for suggestions and can’t make direct translations. */
      suggestion_voting?: boolean;
      /**
       * Automatically accept suggestions
       * @description Automatically accept suggestions with this number of votes, use 0 to turn it off.
       */
      suggestion_autoaccept?: number;
      /** @description Whether the repository should be pushed upstream on every commit. */
      push_on_commit?: boolean;
      /**
       * Age of changes to commit
       * @description Time in hours after which any pending changes will be committed to the VCS.
       */
      commit_pending_age?: number;
      /**
       * Lock on error
       * @description Whether the component should be locked on repository errors.
       */
      auto_lock_error?: boolean;
      /**
       * Language filter
       * @description Regular expression used to filter translation files when scanning for file mask.
       */
      language_regex?: string;
      /** @description Regular expression used to filter keys. This is only available for monolingual formats. */
      key_filter?: string;
      /** @description Additional language to show together with the source language while translating. This setting is inherited from the project if left empty. */
      secondary_language?: number | null;
      /**
       * Variants regular expression
       * @description Regular expression used to determine variants of a string.
       */
      variant_regex?: string;
      /** Format: uri */
      zipfile?: string;
      /** Format: uri */
      docfile?: string;
      readonly addons?: string[];
      /** Use as a glossary */
      is_glossary?: boolean;
      glossary_color?: components["schemas"]["ColorEnum"];
      disable_autoshare?: boolean;
      /** Format: uri */
      category?: string | null;
      /** Format: uri */
      readonly linked_component?: string;
      readonly locked?: boolean;
    };
    PatchedComponentList: {
      /**
       * Component list name
       * @description Display name
       */
      name?: string;
      /**
       * URL slug
       * @description Name used in URLs and filenames.
       */
      slug?: string;
      readonly id?: number;
      /**
       * Show on dashboard
       * @description When enabled this component list will be shown as a tab on the dashboard
       */
      show_dashboard?: boolean;
      readonly components?: string[];
      readonly auto_assign?: components["schemas"]["AutoComponentList"][];
      /** Format: uri */
      readonly url?: string;
    };
    PatchedGroup: {
      readonly id?: number;
      name?: string;
      /** Format: uri */
      defining_project?: string;
      project_selection?: components["schemas"]["ProjectSelectionEnum"];
      language_selection?: components["schemas"]["LanguageSelectionEnum"];
      /** Format: uri */
      readonly url?: string;
      readonly roles?: string[];
      readonly languages?: string[];
      readonly projects?: string[];
      readonly componentlists?: string[];
      readonly components?: string[];
      /**
       * Enforced two-factor authentication
       * @description Requires users to have two-factor authentication configured.
       */
      enforced_2fa?: boolean;
    };
    PatchedLanguage: {
      readonly id?: number;
      /** Language code */
      code?: string;
      name?: string;
      plural?: components["schemas"]["LanguagePlural"];
      readonly aliases?: unknown[];
      /** Text direction */
      direction?:
        | components["schemas"]["DirectionEnum"]
        | components["schemas"]["BlankEnum"];
      /**
       * Number of speakers
       * Format: int64
       * @description Number of people speaking this language.
       */
      population?: number;
      readonly web_url?: string;
      /** Format: uri */
      readonly url?: string;
      /** Format: uri */
      readonly statistics_url?: string;
    };
    PatchedMemory: {
      readonly id?: number;
      source?: string;
      target?: string;
      source_language?: number;
      target_language?: number;
      origin?: string;
      project?: number | null;
      from_file?: boolean;
      shared?: boolean;
    };
    PatchedNotification: {
      notification?: components["schemas"]["NotificationEnum"];
      readonly id?: number;
      scope?: components["schemas"]["NotificationScopeEnum"];
      frequency?: components["schemas"]["FrequencyEnum"];
      readonly project?: components["schemas"]["Project"];
      readonly component?: components["schemas"]["Component"];
    };
    PatchedProject: {
      /**
       * Project name
       * @description Display name
       */
      name?: string;
      /**
       * URL slug
       * @description Name used in URLs and filenames.
       */
      slug?: string;
      readonly id?: number;
      /**
       * Project website
       * Format: uri
       * @description Main website of translated project.
       */
      web?: string;
      readonly web_url?: string;
      /** Format: uri */
      readonly url?: string;
      /**
       * Translation flags
       * @description Additional comma-separated flags to influence Weblate behavior.
       */
      check_flags?: string;
      /** Format: uri */
      readonly components_list_url?: string;
      /** Format: uri */
      readonly repository_url?: string;
      /** Format: uri */
      readonly statistics_url?: string;
      /** Format: uri */
      readonly categories_url?: string;
      /** Format: uri */
      readonly changes_list_url?: string;
      /** Format: uri */
      readonly languages_url?: string;
      /** Format: uri */
      readonly labels_url?: string;
      /** Format: uri */
      readonly credits_url?: string;
      /**
       * Enable reviews
       * @description Requires dedicated reviewers to approve translations.
       */
      translation_review?: boolean;
      /**
       * Enable source reviews
       * @description Requires dedicated reviewers to approve source strings.
       */
      source_review?: boolean;
      /**
       * Set "Language-Team" header
       * @description Lets Weblate update the "Language-Team" file header of your project.
       */
      set_language_team?: boolean;
      /**
       * Translation instructions
       * @description You can use Markdown and mention users by @username.
       */
      instructions?: string;
      /** @description Whether to allow updating this repository by remote hooks. */
      enable_hooks?: boolean;
      /** @description Comma-separated list of language code mappings, for example: en_GB:en,en_US:en */
      language_aliases?: string;
      /** @description Additional language to show together with the source language while translating. */
      secondary_language?: number | null;
      /**
       * Enforced two-factor authentication
       * @description Requires contributors to have two-factor authentication configured before being able to contribute.
       */
      enforced_2fa?: boolean;
      /** Format: uri */
      readonly machinery_settings?: string;
    };
    PatchedRole: {
      readonly id?: number;
      name?: string;
      permissions?: string[];
      /** Format: uri */
      readonly url?: string;
    };
    PatchedScreenshot: {
      readonly id?: number;
      /** Screenshot name */
      name?: string;
      /**
       * Repository path to screenshot
       * @description Scan for screenshot file change on repository update.
       */
      repository_filename?: string;
      /** Format: uri */
      readonly translation?: string;
      /** Format: uri */
      readonly file_url?: string;
      readonly units?: string[];
      /** Format: uri */
      readonly url?: string;
    };
    PatchedSingleServiceConfig: {
      service?: string;
      configuration?: {
        [key: string]: unknown;
      };
    };
    /** @description Serializer for updating source unit. */
    PatchedUnitWrite: {
      target?: string[];
      state?: components["schemas"]["StateEnum"];
      /** @description Additional explanation to clarify meaning or usage of the string. */
      explanation?: string;
      /**
       * Translation flags
       * @description Additional comma-separated flags to influence Weblate behavior.
       */
      extra_flags?: string;
      labels?: components["schemas"]["UnitFlatLabels"][];
    };
    /**
     * @description * `60` - Very high
     *     * `80` - High
     *     * `100` - Medium
     *     * `120` - Low
     *     * `140` - Very low
     * @enum {integer}
     */
    PriorityEnum: 60 | 80 | 100 | 120 | 140;
    Project: {
      /**
       * Project name
       * @description Display name
       */
      name: string;
      /**
       * URL slug
       * @description Name used in URLs and filenames.
       */
      slug: string;
      readonly id: number;
      /**
       * Project website
       * Format: uri
       * @description Main website of translated project.
       */
      web?: string;
      readonly web_url: string;
      /** Format: uri */
      readonly url: string;
      /**
       * Translation flags
       * @description Additional comma-separated flags to influence Weblate behavior.
       */
      check_flags?: string;
      /** Format: uri */
      readonly components_list_url: string;
      /** Format: uri */
      readonly repository_url: string;
      /** Format: uri */
      readonly statistics_url: string;
      /** Format: uri */
      readonly categories_url: string;
      /** Format: uri */
      readonly changes_list_url: string;
      /** Format: uri */
      readonly languages_url: string;
      /** Format: uri */
      readonly labels_url: string;
      /** Format: uri */
      readonly credits_url: string;
      /**
       * Enable reviews
       * @description Requires dedicated reviewers to approve translations.
       */
      translation_review?: boolean;
      /**
       * Enable source reviews
       * @description Requires dedicated reviewers to approve source strings.
       */
      source_review?: boolean;
      /**
       * Set "Language-Team" header
       * @description Lets Weblate update the "Language-Team" file header of your project.
       */
      set_language_team?: boolean;
      /**
       * Translation instructions
       * @description You can use Markdown and mention users by @username.
       */
      instructions?: string;
      /** @description Whether to allow updating this repository by remote hooks. */
      enable_hooks?: boolean;
      /** @description Comma-separated list of language code mappings, for example: en_GB:en,en_US:en */
      language_aliases?: string;
      /** @description Additional language to show together with the source language while translating. */
      secondary_language?: number | null;
      /**
       * Enforced two-factor authentication
       * @description Requires contributors to have two-factor authentication configured before being able to contribute.
       */
      enforced_2fa?: boolean;
      /** Format: uri */
      readonly machinery_settings: string;
    };
    ProjectMachinerySettings: {
      service_name?: {
        [key: string]: unknown;
      };
    };
    /**
     * @description * `0` - As defined
     *     * `1` - All projects
     *     * `3` - All public projects
     *     * `4` - All protected projects
     *     * `2` - From component list
     * @enum {integer}
     */
    ProjectSelectionEnum: 0 | 1 | 3 | 4 | 2;
    ProjectsAddonsCreateCheckFlagsErrorComponent: {
      /**
       * @description * `check_flags` - check_flags (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "check_flags";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ProjectsAddonsCreateEnableHooksErrorComponent: {
      /**
       * @description * `enable_hooks` - enable_hooks (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "enable_hooks";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ProjectsAddonsCreateEnforced2faErrorComponent: {
      /**
       * @description * `enforced_2fa` - enforced_2fa (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "enforced_2fa";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ProjectsAddonsCreateError:
      | components["schemas"]["ProjectsAddonsCreateNonFieldErrorsErrorComponent"]
      | components["schemas"]["ProjectsAddonsCreateNameErrorComponent"]
      | components["schemas"]["ProjectsAddonsCreateSlugErrorComponent"]
      | components["schemas"]["ProjectsAddonsCreateWebErrorComponent"]
      | components["schemas"]["ProjectsAddonsCreateCheckFlagsErrorComponent"]
      | components["schemas"]["ProjectsAddonsCreateTranslationReviewErrorComponent"]
      | components["schemas"]["ProjectsAddonsCreateSourceReviewErrorComponent"]
      | components["schemas"]["ProjectsAddonsCreateSetLanguageTeamErrorComponent"]
      | components["schemas"]["ProjectsAddonsCreateInstructionsErrorComponent"]
      | components["schemas"]["ProjectsAddonsCreateEnableHooksErrorComponent"]
      | components["schemas"]["ProjectsAddonsCreateLanguageAliasesErrorComponent"]
      | components["schemas"]["ProjectsAddonsCreateSecondaryLanguageErrorComponent"]
      | components["schemas"]["ProjectsAddonsCreateEnforced2faErrorComponent"];
    ProjectsAddonsCreateErrorResponse400:
      | components["schemas"]["ProjectsAddonsCreateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    ProjectsAddonsCreateInstructionsErrorComponent: {
      /**
       * @description * `instructions` - instructions (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "instructions";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ProjectsAddonsCreateLanguageAliasesErrorComponent: {
      /**
       * @description * `language_aliases` - language_aliases (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "language_aliases";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ProjectsAddonsCreateNameErrorComponent: {
      /**
       * @description * `name` - name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       *     * `unique` - unique
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed"
        | "unique";
      detail: string;
    };
    ProjectsAddonsCreateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ProjectsAddonsCreateSecondaryLanguageErrorComponent: {
      /**
       * @description * `secondary_language` - secondary_language (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "secondary_language";
      /**
       * @description * `does_not_exist` - does_not_exist
       *     * `incorrect_type` - incorrect_type
       * @enum {string}
       */
      code: "does_not_exist" | "incorrect_type";
      detail: string;
    };
    ProjectsAddonsCreateSetLanguageTeamErrorComponent: {
      /**
       * @description * `set_language_team` - set_language_team (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "set_language_team";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ProjectsAddonsCreateSlugErrorComponent: {
      /**
       * @description * `slug` - slug (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "slug";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       *     * `unique` - unique
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed"
        | "unique";
      detail: string;
    };
    ProjectsAddonsCreateSourceReviewErrorComponent: {
      /**
       * @description * `source_review` - source_review (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_review";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ProjectsAddonsCreateTranslationReviewErrorComponent: {
      /**
       * @description * `translation_review` - translation_review (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "translation_review";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ProjectsAddonsCreateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["ProjectsAddonsCreateError"][];
    };
    ProjectsAddonsCreateWebErrorComponent: {
      /**
       * @description * `web` - web (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "web";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ProjectsCategoriesRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    ProjectsChangesRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    ProjectsComponentsCreateAddMessageErrorComponent: {
      /**
       * @description * `add_message` - add_message (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "add_message";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ProjectsComponentsCreateAddonMessageErrorComponent: {
      /**
       * @description * `addon_message` - addon_message (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "addon_message";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ProjectsComponentsCreateAgreementErrorComponent: {
      /**
       * @description * `agreement` - agreement (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "agreement";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ProjectsComponentsCreateAllowTranslationPropagationErrorComponent: {
      /**
       * @description * `allow_translation_propagation` - allow_translation_propagation (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "allow_translation_propagation";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ProjectsComponentsCreateAutoLockErrorErrorComponent: {
      /**
       * @description * `auto_lock_error` - auto_lock_error (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "auto_lock_error";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ProjectsComponentsCreateBranchErrorComponent: {
      /**
       * @description * `branch` - branch (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "branch";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ProjectsComponentsCreateCategoryErrorComponent: {
      /**
       * @description * `category` - category (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "category";
      /**
       * @description * `does_not_exist` - does_not_exist
       *     * `incorrect_match` - incorrect_match
       *     * `incorrect_type` - incorrect_type
       *     * `no_match` - no_match
       * @enum {string}
       */
      code:
        | "does_not_exist"
        | "incorrect_match"
        | "incorrect_type"
        | "no_match";
      detail: string;
    };
    ProjectsComponentsCreateCheckFlagsErrorComponent: {
      /**
       * @description * `check_flags` - check_flags (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "check_flags";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ProjectsComponentsCreateCommitMessageErrorComponent: {
      /**
       * @description * `commit_message` - commit_message (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "commit_message";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ProjectsComponentsCreateCommitPendingAgeErrorComponent: {
      /**
       * @description * `commit_pending_age` - commit_pending_age (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "commit_pending_age";
      /**
       * @description * `invalid` - invalid
       *     * `max_string_length` - max_string_length
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_string_length"
        | "max_value"
        | "min_value"
        | "null";
      detail: string;
    };
    ProjectsComponentsCreateDeleteMessageErrorComponent: {
      /**
       * @description * `delete_message` - delete_message (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "delete_message";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ProjectsComponentsCreateDisableAutoshareErrorComponent: {
      /**
       * @description * `disable_autoshare` - disable_autoshare (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "disable_autoshare";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ProjectsComponentsCreateDocfileErrorComponent: {
      /**
       * @description * `docfile` - docfile (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "docfile";
      /**
       * @description * `empty` - empty
       *     * `invalid` - invalid
       *     * `no_name` - no_name
       *     * `null` - null
       * @enum {string}
       */
      code: "empty" | "invalid" | "no_name" | "null";
      detail: string;
    };
    ProjectsComponentsCreateEditTemplateErrorComponent: {
      /**
       * @description * `edit_template` - edit_template (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "edit_template";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ProjectsComponentsCreateEnableSuggestionsErrorComponent: {
      /**
       * @description * `enable_suggestions` - enable_suggestions (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "enable_suggestions";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ProjectsComponentsCreateEnforcedChecksErrorComponent: {
      /**
       * @description * `enforced_checks` - enforced_checks (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "enforced_checks";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ProjectsComponentsCreateError:
      | components["schemas"]["ProjectsComponentsCreateNonFieldErrorsErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateNameErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateSlugErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateSourceLanguageNonFieldErrorsErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateSourceLanguageCodeErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateSourceLanguageNameErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateSourceLanguagePluralNonFieldErrorsErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateSourceLanguagePluralSourceErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateSourceLanguagePluralNumberErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateSourceLanguagePluralFormulaErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateSourceLanguageDirectionErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateSourceLanguagePopulationErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateVcsErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateRepoErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateGitExportErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateBranchErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreatePushBranchErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateFilemaskErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateScreenshotFilemaskErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateTemplateErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateEditTemplateErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateIntermediateErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateNewBaseErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateFileFormatErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateLicenseErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateAgreementErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateNewLangErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateLanguageCodeStyleErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreatePushErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateCheckFlagsErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreatePriorityErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateEnforcedChecksErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateRestrictedErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateRepowebErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateReportSourceBugsErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateMergeStyleErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateCommitMessageErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateAddMessageErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateDeleteMessageErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateMergeMessageErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateAddonMessageErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreatePullMessageErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateAllowTranslationPropagationErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateManageUnitsErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateEnableSuggestionsErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateSuggestionVotingErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateSuggestionAutoacceptErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreatePushOnCommitErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateCommitPendingAgeErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateAutoLockErrorErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateLanguageRegexErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateKeyFilterErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateSecondaryLanguageErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateVariantRegexErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateZipfileErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateDocfileErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateIsGlossaryErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateGlossaryColorErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateDisableAutoshareErrorComponent"]
      | components["schemas"]["ProjectsComponentsCreateCategoryErrorComponent"];
    ProjectsComponentsCreateErrorResponse400:
      | components["schemas"]["ProjectsComponentsCreateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    ProjectsComponentsCreateFileFormatErrorComponent: {
      /**
       * @description * `file_format` - file_format (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "file_format";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       *     * `required` - required
       * @enum {string}
       */
      code: "invalid_choice" | "null" | "required";
      detail: string;
    };
    ProjectsComponentsCreateFilemaskErrorComponent: {
      /**
       * @description * `filemask` - filemask (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "filemask";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ProjectsComponentsCreateGitExportErrorComponent: {
      /**
       * @description * `git_export` - git_export (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "git_export";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ProjectsComponentsCreateGlossaryColorErrorComponent: {
      /**
       * @description * `glossary_color` - glossary_color (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "glossary_color";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    ProjectsComponentsCreateIntermediateErrorComponent: {
      /**
       * @description * `intermediate` - intermediate (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "intermediate";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ProjectsComponentsCreateIsGlossaryErrorComponent: {
      /**
       * @description * `is_glossary` - is_glossary (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "is_glossary";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ProjectsComponentsCreateKeyFilterErrorComponent: {
      /**
       * @description * `key_filter` - key_filter (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "key_filter";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ProjectsComponentsCreateLanguageCodeStyleErrorComponent: {
      /**
       * @description * `language_code_style` - language_code_style (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "language_code_style";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    ProjectsComponentsCreateLanguageRegexErrorComponent: {
      /**
       * @description * `language_regex` - language_regex (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "language_regex";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ProjectsComponentsCreateLicenseErrorComponent: {
      /**
       * @description * `license` - license (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "license";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    ProjectsComponentsCreateManageUnitsErrorComponent: {
      /**
       * @description * `manage_units` - manage_units (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "manage_units";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ProjectsComponentsCreateMergeMessageErrorComponent: {
      /**
       * @description * `merge_message` - merge_message (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "merge_message";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ProjectsComponentsCreateMergeStyleErrorComponent: {
      /**
       * @description * `merge_style` - merge_style (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "merge_style";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    ProjectsComponentsCreateNameErrorComponent: {
      /**
       * @description * `name` - name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ProjectsComponentsCreateNewBaseErrorComponent: {
      /**
       * @description * `new_base` - new_base (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "new_base";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ProjectsComponentsCreateNewLangErrorComponent: {
      /**
       * @description * `new_lang` - new_lang (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "new_lang";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    ProjectsComponentsCreateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ProjectsComponentsCreatePriorityErrorComponent: {
      /**
       * @description * `priority` - priority (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "priority";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "max_value" | "min_value" | "null";
      detail: string;
    };
    ProjectsComponentsCreatePullMessageErrorComponent: {
      /**
       * @description * `pull_message` - pull_message (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "pull_message";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ProjectsComponentsCreatePushBranchErrorComponent: {
      /**
       * @description * `push_branch` - push_branch (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "push_branch";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ProjectsComponentsCreatePushErrorComponent: {
      /**
       * @description * `push` - push (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "push";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ProjectsComponentsCreatePushOnCommitErrorComponent: {
      /**
       * @description * `push_on_commit` - push_on_commit (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "push_on_commit";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ProjectsComponentsCreateRepoErrorComponent: {
      /**
       * @description * `repo` - repo (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "repo";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ProjectsComponentsCreateReportSourceBugsErrorComponent: {
      /**
       * @description * `report_source_bugs` - report_source_bugs (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "report_source_bugs";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ProjectsComponentsCreateRepowebErrorComponent: {
      /**
       * @description * `repoweb` - repoweb (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "repoweb";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ProjectsComponentsCreateRestrictedErrorComponent: {
      /**
       * @description * `restricted` - restricted (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "restricted";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ProjectsComponentsCreateScreenshotFilemaskErrorComponent: {
      /**
       * @description * `screenshot_filemask` - screenshot_filemask (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "screenshot_filemask";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ProjectsComponentsCreateSecondaryLanguageErrorComponent: {
      /**
       * @description * `secondary_language` - secondary_language (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "secondary_language";
      /**
       * @description * `does_not_exist` - does_not_exist
       *     * `incorrect_type` - incorrect_type
       * @enum {string}
       */
      code: "does_not_exist" | "incorrect_type";
      detail: string;
    };
    ProjectsComponentsCreateSlugErrorComponent: {
      /**
       * @description * `slug` - slug (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "slug";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ProjectsComponentsCreateSourceLanguageCodeErrorComponent: {
      /**
       * @description * `source_language.code` - source_language.code (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.code";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ProjectsComponentsCreateSourceLanguageDirectionErrorComponent: {
      /**
       * @description * `source_language.direction` - source_language.direction (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.direction";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    ProjectsComponentsCreateSourceLanguageNameErrorComponent: {
      /**
       * @description * `source_language.name` - source_language.name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ProjectsComponentsCreateSourceLanguageNonFieldErrorsErrorComponent: {
      /**
       * @description * `source_language.non_field_errors` - source_language.non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ProjectsComponentsCreateSourceLanguagePluralFormulaErrorComponent: {
      /**
       * @description * `source_language.plural.formula` - source_language.plural.formula (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.plural.formula";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ProjectsComponentsCreateSourceLanguagePluralNonFieldErrorsErrorComponent: {
      /**
       * @description * `source_language.plural.non_field_errors` - source_language.plural.non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.plural.non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ProjectsComponentsCreateSourceLanguagePluralNumberErrorComponent: {
      /**
       * @description * `source_language.plural.number` - source_language.plural.number (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.plural.number";
      /**
       * @description * `invalid` - invalid
       *     * `max_string_length` - max_string_length
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_string_length"
        | "max_value"
        | "min_value"
        | "null";
      detail: string;
    };
    ProjectsComponentsCreateSourceLanguagePluralSourceErrorComponent: {
      /**
       * @description * `source_language.plural.source` - source_language.plural.source (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.plural.source";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "max_value" | "min_value" | "null";
      detail: string;
    };
    ProjectsComponentsCreateSourceLanguagePopulationErrorComponent: {
      /**
       * @description * `source_language.population` - source_language.population (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_language.population";
      /**
       * @description * `invalid` - invalid
       *     * `max_string_length` - max_string_length
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_string_length"
        | "max_value"
        | "min_value"
        | "null";
      detail: string;
    };
    ProjectsComponentsCreateSuggestionAutoacceptErrorComponent: {
      /**
       * @description * `suggestion_autoaccept` - suggestion_autoaccept (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "suggestion_autoaccept";
      /**
       * @description * `invalid` - invalid
       *     * `max_string_length` - max_string_length
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_string_length"
        | "max_value"
        | "min_value"
        | "null";
      detail: string;
    };
    ProjectsComponentsCreateSuggestionVotingErrorComponent: {
      /**
       * @description * `suggestion_voting` - suggestion_voting (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "suggestion_voting";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ProjectsComponentsCreateTemplateErrorComponent: {
      /**
       * @description * `template` - template (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "template";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ProjectsComponentsCreateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["ProjectsComponentsCreateError"][];
    };
    ProjectsComponentsCreateVariantRegexErrorComponent: {
      /**
       * @description * `variant_regex` - variant_regex (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "variant_regex";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ProjectsComponentsCreateVcsErrorComponent: {
      /**
       * @description * `vcs` - vcs (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "vcs";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    ProjectsComponentsCreateZipfileErrorComponent: {
      /**
       * @description * `zipfile` - zipfile (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "zipfile";
      /**
       * @description * `empty` - empty
       *     * `invalid` - invalid
       *     * `no_name` - no_name
       *     * `null` - null
       * @enum {string}
       */
      code: "empty" | "invalid" | "no_name" | "null";
      detail: string;
    };
    ProjectsComponentsRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    ProjectsCreateCheckFlagsErrorComponent: {
      /**
       * @description * `check_flags` - check_flags (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "check_flags";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ProjectsCreateEnableHooksErrorComponent: {
      /**
       * @description * `enable_hooks` - enable_hooks (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "enable_hooks";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ProjectsCreateEnforced2faErrorComponent: {
      /**
       * @description * `enforced_2fa` - enforced_2fa (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "enforced_2fa";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ProjectsCreateError:
      | components["schemas"]["ProjectsCreateNonFieldErrorsErrorComponent"]
      | components["schemas"]["ProjectsCreateNameErrorComponent"]
      | components["schemas"]["ProjectsCreateSlugErrorComponent"]
      | components["schemas"]["ProjectsCreateWebErrorComponent"]
      | components["schemas"]["ProjectsCreateCheckFlagsErrorComponent"]
      | components["schemas"]["ProjectsCreateTranslationReviewErrorComponent"]
      | components["schemas"]["ProjectsCreateSourceReviewErrorComponent"]
      | components["schemas"]["ProjectsCreateSetLanguageTeamErrorComponent"]
      | components["schemas"]["ProjectsCreateInstructionsErrorComponent"]
      | components["schemas"]["ProjectsCreateEnableHooksErrorComponent"]
      | components["schemas"]["ProjectsCreateLanguageAliasesErrorComponent"]
      | components["schemas"]["ProjectsCreateSecondaryLanguageErrorComponent"]
      | components["schemas"]["ProjectsCreateEnforced2faErrorComponent"];
    ProjectsCreateErrorResponse400:
      | components["schemas"]["ProjectsCreateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    ProjectsCreateInstructionsErrorComponent: {
      /**
       * @description * `instructions` - instructions (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "instructions";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ProjectsCreateLanguageAliasesErrorComponent: {
      /**
       * @description * `language_aliases` - language_aliases (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "language_aliases";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ProjectsCreateNameErrorComponent: {
      /**
       * @description * `name` - name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       *     * `unique` - unique
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed"
        | "unique";
      detail: string;
    };
    ProjectsCreateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ProjectsCreateSecondaryLanguageErrorComponent: {
      /**
       * @description * `secondary_language` - secondary_language (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "secondary_language";
      /**
       * @description * `does_not_exist` - does_not_exist
       *     * `incorrect_type` - incorrect_type
       * @enum {string}
       */
      code: "does_not_exist" | "incorrect_type";
      detail: string;
    };
    ProjectsCreateSetLanguageTeamErrorComponent: {
      /**
       * @description * `set_language_team` - set_language_team (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "set_language_team";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ProjectsCreateSlugErrorComponent: {
      /**
       * @description * `slug` - slug (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "slug";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       *     * `unique` - unique
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed"
        | "unique";
      detail: string;
    };
    ProjectsCreateSourceReviewErrorComponent: {
      /**
       * @description * `source_review` - source_review (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_review";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ProjectsCreateTranslationReviewErrorComponent: {
      /**
       * @description * `translation_review` - translation_review (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "translation_review";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ProjectsCreateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["ProjectsCreateError"][];
    };
    ProjectsCreateWebErrorComponent: {
      /**
       * @description * `web` - web (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "web";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ProjectsCreditsRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    ProjectsDestroyErrorResponse400: components["schemas"]["ParseErrorResponse"];
    ProjectsFileRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    ProjectsLabelsCreateCheckFlagsErrorComponent: {
      /**
       * @description * `check_flags` - check_flags (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "check_flags";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ProjectsLabelsCreateEnableHooksErrorComponent: {
      /**
       * @description * `enable_hooks` - enable_hooks (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "enable_hooks";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ProjectsLabelsCreateEnforced2faErrorComponent: {
      /**
       * @description * `enforced_2fa` - enforced_2fa (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "enforced_2fa";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ProjectsLabelsCreateError:
      | components["schemas"]["ProjectsLabelsCreateNonFieldErrorsErrorComponent"]
      | components["schemas"]["ProjectsLabelsCreateNameErrorComponent"]
      | components["schemas"]["ProjectsLabelsCreateSlugErrorComponent"]
      | components["schemas"]["ProjectsLabelsCreateWebErrorComponent"]
      | components["schemas"]["ProjectsLabelsCreateCheckFlagsErrorComponent"]
      | components["schemas"]["ProjectsLabelsCreateTranslationReviewErrorComponent"]
      | components["schemas"]["ProjectsLabelsCreateSourceReviewErrorComponent"]
      | components["schemas"]["ProjectsLabelsCreateSetLanguageTeamErrorComponent"]
      | components["schemas"]["ProjectsLabelsCreateInstructionsErrorComponent"]
      | components["schemas"]["ProjectsLabelsCreateEnableHooksErrorComponent"]
      | components["schemas"]["ProjectsLabelsCreateLanguageAliasesErrorComponent"]
      | components["schemas"]["ProjectsLabelsCreateSecondaryLanguageErrorComponent"]
      | components["schemas"]["ProjectsLabelsCreateEnforced2faErrorComponent"];
    ProjectsLabelsCreateErrorResponse400:
      | components["schemas"]["ProjectsLabelsCreateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    ProjectsLabelsCreateInstructionsErrorComponent: {
      /**
       * @description * `instructions` - instructions (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "instructions";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ProjectsLabelsCreateLanguageAliasesErrorComponent: {
      /**
       * @description * `language_aliases` - language_aliases (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "language_aliases";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ProjectsLabelsCreateNameErrorComponent: {
      /**
       * @description * `name` - name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       *     * `unique` - unique
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed"
        | "unique";
      detail: string;
    };
    ProjectsLabelsCreateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ProjectsLabelsCreateSecondaryLanguageErrorComponent: {
      /**
       * @description * `secondary_language` - secondary_language (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "secondary_language";
      /**
       * @description * `does_not_exist` - does_not_exist
       *     * `incorrect_type` - incorrect_type
       * @enum {string}
       */
      code: "does_not_exist" | "incorrect_type";
      detail: string;
    };
    ProjectsLabelsCreateSetLanguageTeamErrorComponent: {
      /**
       * @description * `set_language_team` - set_language_team (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "set_language_team";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ProjectsLabelsCreateSlugErrorComponent: {
      /**
       * @description * `slug` - slug (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "slug";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       *     * `unique` - unique
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed"
        | "unique";
      detail: string;
    };
    ProjectsLabelsCreateSourceReviewErrorComponent: {
      /**
       * @description * `source_review` - source_review (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_review";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ProjectsLabelsCreateTranslationReviewErrorComponent: {
      /**
       * @description * `translation_review` - translation_review (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "translation_review";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ProjectsLabelsCreateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["ProjectsLabelsCreateError"][];
    };
    ProjectsLabelsCreateWebErrorComponent: {
      /**
       * @description * `web` - web (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "web";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ProjectsLabelsRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    ProjectsLanguagesRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    ProjectsListErrorResponse400: components["schemas"]["ParseErrorResponse"];
    ProjectsMachinerySettingsRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    ProjectsPartialUpdateCheckFlagsErrorComponent: {
      /**
       * @description * `check_flags` - check_flags (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "check_flags";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ProjectsPartialUpdateEnableHooksErrorComponent: {
      /**
       * @description * `enable_hooks` - enable_hooks (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "enable_hooks";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ProjectsPartialUpdateEnforced2faErrorComponent: {
      /**
       * @description * `enforced_2fa` - enforced_2fa (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "enforced_2fa";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ProjectsPartialUpdateError:
      | components["schemas"]["ProjectsPartialUpdateNonFieldErrorsErrorComponent"]
      | components["schemas"]["ProjectsPartialUpdateNameErrorComponent"]
      | components["schemas"]["ProjectsPartialUpdateSlugErrorComponent"]
      | components["schemas"]["ProjectsPartialUpdateWebErrorComponent"]
      | components["schemas"]["ProjectsPartialUpdateCheckFlagsErrorComponent"]
      | components["schemas"]["ProjectsPartialUpdateTranslationReviewErrorComponent"]
      | components["schemas"]["ProjectsPartialUpdateSourceReviewErrorComponent"]
      | components["schemas"]["ProjectsPartialUpdateSetLanguageTeamErrorComponent"]
      | components["schemas"]["ProjectsPartialUpdateInstructionsErrorComponent"]
      | components["schemas"]["ProjectsPartialUpdateEnableHooksErrorComponent"]
      | components["schemas"]["ProjectsPartialUpdateLanguageAliasesErrorComponent"]
      | components["schemas"]["ProjectsPartialUpdateSecondaryLanguageErrorComponent"]
      | components["schemas"]["ProjectsPartialUpdateEnforced2faErrorComponent"];
    ProjectsPartialUpdateErrorResponse400:
      | components["schemas"]["ProjectsPartialUpdateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    ProjectsPartialUpdateInstructionsErrorComponent: {
      /**
       * @description * `instructions` - instructions (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "instructions";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ProjectsPartialUpdateLanguageAliasesErrorComponent: {
      /**
       * @description * `language_aliases` - language_aliases (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "language_aliases";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ProjectsPartialUpdateNameErrorComponent: {
      /**
       * @description * `name` - name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       *     * `unique` - unique
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed"
        | "unique";
      detail: string;
    };
    ProjectsPartialUpdateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ProjectsPartialUpdateSecondaryLanguageErrorComponent: {
      /**
       * @description * `secondary_language` - secondary_language (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "secondary_language";
      /**
       * @description * `does_not_exist` - does_not_exist
       *     * `incorrect_type` - incorrect_type
       * @enum {string}
       */
      code: "does_not_exist" | "incorrect_type";
      detail: string;
    };
    ProjectsPartialUpdateSetLanguageTeamErrorComponent: {
      /**
       * @description * `set_language_team` - set_language_team (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "set_language_team";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ProjectsPartialUpdateSlugErrorComponent: {
      /**
       * @description * `slug` - slug (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "slug";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       *     * `unique` - unique
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed"
        | "unique";
      detail: string;
    };
    ProjectsPartialUpdateSourceReviewErrorComponent: {
      /**
       * @description * `source_review` - source_review (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_review";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ProjectsPartialUpdateTranslationReviewErrorComponent: {
      /**
       * @description * `translation_review` - translation_review (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "translation_review";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ProjectsPartialUpdateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["ProjectsPartialUpdateError"][];
    };
    ProjectsPartialUpdateWebErrorComponent: {
      /**
       * @description * `web` - web (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "web";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ProjectsRepositoryCreateError:
      | components["schemas"]["ProjectsRepositoryCreateNonFieldErrorsErrorComponent"]
      | components["schemas"]["ProjectsRepositoryCreateOperationErrorComponent"];
    ProjectsRepositoryCreateErrorResponse400:
      | components["schemas"]["ProjectsRepositoryCreateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    ProjectsRepositoryCreateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ProjectsRepositoryCreateOperationErrorComponent: {
      /**
       * @description * `operation` - operation (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "operation";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       *     * `required` - required
       * @enum {string}
       */
      code: "invalid_choice" | "null" | "required";
      detail: string;
    };
    ProjectsRepositoryCreateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["ProjectsRepositoryCreateError"][];
    };
    ProjectsRepositoryRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    ProjectsRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    ProjectsStatisticsRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    ProjectsUpdateCheckFlagsErrorComponent: {
      /**
       * @description * `check_flags` - check_flags (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "check_flags";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ProjectsUpdateEnableHooksErrorComponent: {
      /**
       * @description * `enable_hooks` - enable_hooks (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "enable_hooks";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ProjectsUpdateEnforced2faErrorComponent: {
      /**
       * @description * `enforced_2fa` - enforced_2fa (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "enforced_2fa";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ProjectsUpdateError:
      | components["schemas"]["ProjectsUpdateNonFieldErrorsErrorComponent"]
      | components["schemas"]["ProjectsUpdateNameErrorComponent"]
      | components["schemas"]["ProjectsUpdateSlugErrorComponent"]
      | components["schemas"]["ProjectsUpdateWebErrorComponent"]
      | components["schemas"]["ProjectsUpdateCheckFlagsErrorComponent"]
      | components["schemas"]["ProjectsUpdateTranslationReviewErrorComponent"]
      | components["schemas"]["ProjectsUpdateSourceReviewErrorComponent"]
      | components["schemas"]["ProjectsUpdateSetLanguageTeamErrorComponent"]
      | components["schemas"]["ProjectsUpdateInstructionsErrorComponent"]
      | components["schemas"]["ProjectsUpdateEnableHooksErrorComponent"]
      | components["schemas"]["ProjectsUpdateLanguageAliasesErrorComponent"]
      | components["schemas"]["ProjectsUpdateSecondaryLanguageErrorComponent"]
      | components["schemas"]["ProjectsUpdateEnforced2faErrorComponent"];
    ProjectsUpdateErrorResponse400:
      | components["schemas"]["ProjectsUpdateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    ProjectsUpdateInstructionsErrorComponent: {
      /**
       * @description * `instructions` - instructions (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "instructions";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ProjectsUpdateLanguageAliasesErrorComponent: {
      /**
       * @description * `language_aliases` - language_aliases (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "language_aliases";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ProjectsUpdateNameErrorComponent: {
      /**
       * @description * `name` - name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       *     * `unique` - unique
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed"
        | "unique";
      detail: string;
    };
    ProjectsUpdateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ProjectsUpdateSecondaryLanguageErrorComponent: {
      /**
       * @description * `secondary_language` - secondary_language (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "secondary_language";
      /**
       * @description * `does_not_exist` - does_not_exist
       *     * `incorrect_type` - incorrect_type
       * @enum {string}
       */
      code: "does_not_exist" | "incorrect_type";
      detail: string;
    };
    ProjectsUpdateSetLanguageTeamErrorComponent: {
      /**
       * @description * `set_language_team` - set_language_team (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "set_language_team";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ProjectsUpdateSlugErrorComponent: {
      /**
       * @description * `slug` - slug (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "slug";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       *     * `unique` - unique
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed"
        | "unique";
      detail: string;
    };
    ProjectsUpdateSourceReviewErrorComponent: {
      /**
       * @description * `source_review` - source_review (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "source_review";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ProjectsUpdateTranslationReviewErrorComponent: {
      /**
       * @description * `translation_review` - translation_review (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "translation_review";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ProjectsUpdateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["ProjectsUpdateError"][];
    };
    ProjectsUpdateWebErrorComponent: {
      /**
       * @description * `web` - web (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "web";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    RepoRequest: {
      operation: components["schemas"]["OperationEnum"];
    };
    Role: {
      readonly id: number;
      name: string;
      permissions: string[];
      /** Format: uri */
      readonly url: string;
    };
    RolesCreateError:
      | components["schemas"]["RolesCreateNonFieldErrorsErrorComponent"]
      | components["schemas"]["RolesCreateNameErrorComponent"]
      | components["schemas"]["RolesCreatePermissionsErrorComponent"];
    RolesCreateErrorResponse400:
      | components["schemas"]["RolesCreateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    RolesCreateNameErrorComponent: {
      /**
       * @description * `name` - name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       *     * `unique` - unique
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed"
        | "unique";
      detail: string;
    };
    RolesCreateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    RolesCreatePermissionsErrorComponent: {
      /**
       * @description * `permissions` - permissions (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "permissions";
      /**
       * @description * `not_a_list` - not_a_list
       *     * `null` - null
       *     * `required` - required
       * @enum {string}
       */
      code: "not_a_list" | "null" | "required";
      detail: string;
    };
    RolesCreateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["RolesCreateError"][];
    };
    RolesDestroyErrorResponse400: components["schemas"]["ParseErrorResponse"];
    RolesListErrorResponse400: components["schemas"]["ParseErrorResponse"];
    RolesPartialUpdateError:
      | components["schemas"]["RolesPartialUpdateNonFieldErrorsErrorComponent"]
      | components["schemas"]["RolesPartialUpdateNameErrorComponent"]
      | components["schemas"]["RolesPartialUpdatePermissionsErrorComponent"];
    RolesPartialUpdateErrorResponse400:
      | components["schemas"]["RolesPartialUpdateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    RolesPartialUpdateNameErrorComponent: {
      /**
       * @description * `name` - name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       *     * `unique` - unique
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed"
        | "unique";
      detail: string;
    };
    RolesPartialUpdateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    RolesPartialUpdatePermissionsErrorComponent: {
      /**
       * @description * `permissions` - permissions (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "permissions";
      /**
       * @description * `not_a_list` - not_a_list
       *     * `null` - null
       *     * `required` - required
       * @enum {string}
       */
      code: "not_a_list" | "null" | "required";
      detail: string;
    };
    RolesPartialUpdateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["RolesPartialUpdateError"][];
    };
    RolesRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    RolesUpdateError:
      | components["schemas"]["RolesUpdateNonFieldErrorsErrorComponent"]
      | components["schemas"]["RolesUpdateNameErrorComponent"]
      | components["schemas"]["RolesUpdatePermissionsErrorComponent"];
    RolesUpdateErrorResponse400:
      | components["schemas"]["RolesUpdateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    RolesUpdateNameErrorComponent: {
      /**
       * @description * `name` - name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       *     * `unique` - unique
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed"
        | "unique";
      detail: string;
    };
    RolesUpdateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    RolesUpdatePermissionsErrorComponent: {
      /**
       * @description * `permissions` - permissions (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "permissions";
      /**
       * @description * `not_a_list` - not_a_list
       *     * `null` - null
       *     * `required` - required
       * @enum {string}
       */
      code: "not_a_list" | "null" | "required";
      detail: string;
    };
    RolesUpdateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["RolesUpdateError"][];
    };
    Screenshot: {
      readonly id: number;
      /** Screenshot name */
      name: string;
      /**
       * Repository path to screenshot
       * @description Scan for screenshot file change on repository update.
       */
      repository_filename?: string;
      /** Format: uri */
      readonly translation: string;
      /** Format: uri */
      readonly file_url: string;
      readonly units: string[];
      /** Format: uri */
      readonly url: string;
    };
    ScreenshotFile: {
      /** Format: uri */
      image: string;
    };
    ScreenshotsCreateError:
      | components["schemas"]["ScreenshotsCreateNonFieldErrorsErrorComponent"]
      | components["schemas"]["ScreenshotsCreateNameErrorComponent"]
      | components["schemas"]["ScreenshotsCreateRepositoryFilenameErrorComponent"];
    ScreenshotsCreateErrorResponse400:
      | components["schemas"]["ScreenshotsCreateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    ScreenshotsCreateNameErrorComponent: {
      /**
       * @description * `name` - name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ScreenshotsCreateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ScreenshotsCreateRepositoryFilenameErrorComponent: {
      /**
       * @description * `repository_filename` - repository_filename (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "repository_filename";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ScreenshotsCreateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["ScreenshotsCreateError"][];
    };
    ScreenshotsDestroyErrorResponse400: components["schemas"]["ParseErrorResponse"];
    ScreenshotsFileCreateError:
      | components["schemas"]["ScreenshotsFileCreateNonFieldErrorsErrorComponent"]
      | components["schemas"]["ScreenshotsFileCreateImageErrorComponent"];
    ScreenshotsFileCreateErrorResponse400:
      | components["schemas"]["ScreenshotsFileCreateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    ScreenshotsFileCreateImageErrorComponent: {
      /**
       * @description * `image` - image (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "image";
      /**
       * @description * `empty` - empty
       *     * `invalid` - invalid
       *     * `invalid_image` - invalid_image
       *     * `no_name` - no_name
       *     * `null` - null
       *     * `required` - required
       * @enum {string}
       */
      code:
        | "empty"
        | "invalid"
        | "invalid_image"
        | "no_name"
        | "null"
        | "required";
      detail: string;
    };
    ScreenshotsFileCreateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ScreenshotsFileCreateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["ScreenshotsFileCreateError"][];
    };
    ScreenshotsFileRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    ScreenshotsFileUpdateError:
      | components["schemas"]["ScreenshotsFileUpdateNonFieldErrorsErrorComponent"]
      | components["schemas"]["ScreenshotsFileUpdateImageErrorComponent"];
    ScreenshotsFileUpdateErrorResponse400:
      | components["schemas"]["ScreenshotsFileUpdateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    ScreenshotsFileUpdateImageErrorComponent: {
      /**
       * @description * `image` - image (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "image";
      /**
       * @description * `empty` - empty
       *     * `invalid` - invalid
       *     * `invalid_image` - invalid_image
       *     * `no_name` - no_name
       *     * `null` - null
       *     * `required` - required
       * @enum {string}
       */
      code:
        | "empty"
        | "invalid"
        | "invalid_image"
        | "no_name"
        | "null"
        | "required";
      detail: string;
    };
    ScreenshotsFileUpdateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ScreenshotsFileUpdateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["ScreenshotsFileUpdateError"][];
    };
    ScreenshotsListErrorResponse400: components["schemas"]["ParseErrorResponse"];
    ScreenshotsPartialUpdateError:
      | components["schemas"]["ScreenshotsPartialUpdateNonFieldErrorsErrorComponent"]
      | components["schemas"]["ScreenshotsPartialUpdateNameErrorComponent"]
      | components["schemas"]["ScreenshotsPartialUpdateRepositoryFilenameErrorComponent"];
    ScreenshotsPartialUpdateErrorResponse400:
      | components["schemas"]["ScreenshotsPartialUpdateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    ScreenshotsPartialUpdateNameErrorComponent: {
      /**
       * @description * `name` - name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ScreenshotsPartialUpdateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ScreenshotsPartialUpdateRepositoryFilenameErrorComponent: {
      /**
       * @description * `repository_filename` - repository_filename (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "repository_filename";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ScreenshotsPartialUpdateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["ScreenshotsPartialUpdateError"][];
    };
    ScreenshotsRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    ScreenshotsUnitsCreateError:
      | components["schemas"]["ScreenshotsUnitsCreateNonFieldErrorsErrorComponent"]
      | components["schemas"]["ScreenshotsUnitsCreateNameErrorComponent"]
      | components["schemas"]["ScreenshotsUnitsCreateRepositoryFilenameErrorComponent"];
    ScreenshotsUnitsCreateErrorResponse400:
      | components["schemas"]["ScreenshotsUnitsCreateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    ScreenshotsUnitsCreateNameErrorComponent: {
      /**
       * @description * `name` - name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ScreenshotsUnitsCreateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ScreenshotsUnitsCreateRepositoryFilenameErrorComponent: {
      /**
       * @description * `repository_filename` - repository_filename (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "repository_filename";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ScreenshotsUnitsCreateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["ScreenshotsUnitsCreateError"][];
    };
    ScreenshotsUnitsDestroyErrorResponse400: components["schemas"]["ParseErrorResponse"];
    ScreenshotsUpdateError:
      | components["schemas"]["ScreenshotsUpdateNonFieldErrorsErrorComponent"]
      | components["schemas"]["ScreenshotsUpdateNameErrorComponent"]
      | components["schemas"]["ScreenshotsUpdateRepositoryFilenameErrorComponent"];
    ScreenshotsUpdateErrorResponse400:
      | components["schemas"]["ScreenshotsUpdateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    ScreenshotsUpdateNameErrorComponent: {
      /**
       * @description * `name` - name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ScreenshotsUpdateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    ScreenshotsUpdateRepositoryFilenameErrorComponent: {
      /**
       * @description * `repository_filename` - repository_filename (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "repository_filename";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    ScreenshotsUpdateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["ScreenshotsUpdateError"][];
    };
    SearchRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    /**
     * @description * `server_error` - Server Error
     * @enum {string}
     */
    ServerErrorEnum: "server_error";
    SingleServiceConfig: {
      service: string;
      configuration: {
        [key: string]: unknown;
      };
    };
    /**
     * @description * `0` - Default plural
     *     * `1` - gettext plural formula
     *     * `3` - CLDR plural with zero
     *     * `4` - CLDR v38+ plural
     *     * `5` - Android plural
     *     * `6` - Qt Linguist plural
     *     * `2` - Manually entered formula
     * @enum {integer}
     */
    SourceEnum: 0 | 1 | 3 | 4 | 5 | 6 | 2;
    /**
     * @description * `0` - Empty
     *     * `10` - Needs editing
     *     * `20` - Translated
     *     * `30` - Approved
     *     * `100` - Read-only
     * @enum {integer}
     */
    StateEnum: 0 | 10 | 20 | 30 | 100;
    TasksDestroyErrorResponse400: components["schemas"]["ParseErrorResponse"];
    TasksRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    Translation: {
      readonly language: components["schemas"]["Language"];
      readonly component: components["schemas"]["Component"];
      language_code?: string;
      readonly id: number;
      filename: string;
      revision?: string;
      readonly web_url: string;
      readonly share_url: string;
      readonly translate_url: string;
      /** Format: uri */
      readonly url: string;
      readonly is_template: boolean;
      readonly is_source: boolean;
      readonly total: number;
      readonly total_words: number;
      readonly translated: number;
      readonly translated_words: number;
      /** Format: double */
      readonly translated_percent: number;
      readonly fuzzy: number;
      readonly fuzzy_words: number;
      /** Format: double */
      readonly fuzzy_percent: number;
      readonly failing_checks: number;
      readonly failing_checks_words: number;
      /** Format: double */
      readonly failing_checks_percent: number;
      readonly have_suggestion: number;
      readonly have_comment: number;
      /** Format: date-time */
      readonly last_change: string;
      readonly last_author: string;
      /** Format: uri */
      readonly repository_url: string;
      /** Format: uri */
      readonly file_url: string;
      /** Format: uri */
      readonly statistics_url: string;
      /** Format: uri */
      readonly changes_list_url: string;
      /** Format: uri */
      readonly units_list_url: string;
    };
    TranslationsAutotranslateCreateError:
      | components["schemas"]["TranslationsAutotranslateCreateNonFieldErrorsErrorComponent"]
      | components["schemas"]["TranslationsAutotranslateCreateLanguageCodeErrorComponent"]
      | components["schemas"]["TranslationsAutotranslateCreateFilenameErrorComponent"]
      | components["schemas"]["TranslationsAutotranslateCreateRevisionErrorComponent"];
    TranslationsAutotranslateCreateErrorResponse400:
      | components["schemas"]["TranslationsAutotranslateCreateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    TranslationsAutotranslateCreateFilenameErrorComponent: {
      /**
       * @description * `filename` - filename (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "filename";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    TranslationsAutotranslateCreateLanguageCodeErrorComponent: {
      /**
       * @description * `language_code` - language_code (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "language_code";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    TranslationsAutotranslateCreateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    TranslationsAutotranslateCreateRevisionErrorComponent: {
      /**
       * @description * `revision` - revision (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "revision";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    TranslationsAutotranslateCreateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["TranslationsAutotranslateCreateError"][];
    };
    TranslationsChangesRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    TranslationsDestroyErrorResponse400: components["schemas"]["ParseErrorResponse"];
    TranslationsFileCreateAuthorEmailErrorComponent: {
      /**
       * @description * `author_email` - author_email (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "author_email";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    TranslationsFileCreateAuthorNameErrorComponent: {
      /**
       * @description * `author_name` - author_name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "author_name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    TranslationsFileCreateConflictsErrorComponent: {
      /**
       * @description * `conflicts` - conflicts (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "conflicts";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    TranslationsFileCreateError:
      | components["schemas"]["TranslationsFileCreateNonFieldErrorsErrorComponent"]
      | components["schemas"]["TranslationsFileCreateFileErrorComponent"]
      | components["schemas"]["TranslationsFileCreateAuthorEmailErrorComponent"]
      | components["schemas"]["TranslationsFileCreateAuthorNameErrorComponent"]
      | components["schemas"]["TranslationsFileCreateMethodErrorComponent"]
      | components["schemas"]["TranslationsFileCreateFuzzyErrorComponent"]
      | components["schemas"]["TranslationsFileCreateConflictsErrorComponent"];
    TranslationsFileCreateErrorResponse400:
      | components["schemas"]["TranslationsFileCreateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    TranslationsFileCreateFileErrorComponent: {
      /**
       * @description * `file` - file (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "file";
      /**
       * @description * `empty` - empty
       *     * `invalid` - invalid
       *     * `no_name` - no_name
       *     * `null` - null
       *     * `required` - required
       * @enum {string}
       */
      code: "empty" | "invalid" | "no_name" | "null" | "required";
      detail: string;
    };
    TranslationsFileCreateFuzzyErrorComponent: {
      /**
       * @description * `fuzzy` - fuzzy (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "fuzzy";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    TranslationsFileCreateMethodErrorComponent: {
      /**
       * @description * `method` - method (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "method";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    TranslationsFileCreateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    TranslationsFileCreateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["TranslationsFileCreateError"][];
    };
    TranslationsFileRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    TranslationsFileUpdateAuthorEmailErrorComponent: {
      /**
       * @description * `author_email` - author_email (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "author_email";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    TranslationsFileUpdateAuthorNameErrorComponent: {
      /**
       * @description * `author_name` - author_name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "author_name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    TranslationsFileUpdateConflictsErrorComponent: {
      /**
       * @description * `conflicts` - conflicts (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "conflicts";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    TranslationsFileUpdateError:
      | components["schemas"]["TranslationsFileUpdateNonFieldErrorsErrorComponent"]
      | components["schemas"]["TranslationsFileUpdateFileErrorComponent"]
      | components["schemas"]["TranslationsFileUpdateAuthorEmailErrorComponent"]
      | components["schemas"]["TranslationsFileUpdateAuthorNameErrorComponent"]
      | components["schemas"]["TranslationsFileUpdateMethodErrorComponent"]
      | components["schemas"]["TranslationsFileUpdateFuzzyErrorComponent"]
      | components["schemas"]["TranslationsFileUpdateConflictsErrorComponent"];
    TranslationsFileUpdateErrorResponse400:
      | components["schemas"]["TranslationsFileUpdateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    TranslationsFileUpdateFileErrorComponent: {
      /**
       * @description * `file` - file (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "file";
      /**
       * @description * `empty` - empty
       *     * `invalid` - invalid
       *     * `no_name` - no_name
       *     * `null` - null
       *     * `required` - required
       * @enum {string}
       */
      code: "empty" | "invalid" | "no_name" | "null" | "required";
      detail: string;
    };
    TranslationsFileUpdateFuzzyErrorComponent: {
      /**
       * @description * `fuzzy` - fuzzy (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "fuzzy";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    TranslationsFileUpdateMethodErrorComponent: {
      /**
       * @description * `method` - method (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "method";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "null";
      detail: string;
    };
    TranslationsFileUpdateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    TranslationsFileUpdateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["TranslationsFileUpdateError"][];
    };
    TranslationsListErrorResponse400: components["schemas"]["ParseErrorResponse"];
    TranslationsRepositoryCreateError:
      | components["schemas"]["TranslationsRepositoryCreateNonFieldErrorsErrorComponent"]
      | components["schemas"]["TranslationsRepositoryCreateOperationErrorComponent"];
    TranslationsRepositoryCreateErrorResponse400:
      | components["schemas"]["TranslationsRepositoryCreateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    TranslationsRepositoryCreateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    TranslationsRepositoryCreateOperationErrorComponent: {
      /**
       * @description * `operation` - operation (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "operation";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       *     * `required` - required
       * @enum {string}
       */
      code: "invalid_choice" | "null" | "required";
      detail: string;
    };
    TranslationsRepositoryCreateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["TranslationsRepositoryCreateError"][];
    };
    TranslationsRepositoryRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    TranslationsRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    TranslationsStatisticsRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    TranslationsUnitsCreateError:
      | components["schemas"]["TranslationsUnitsCreateNonFieldErrorsErrorComponent"]
      | components["schemas"]["TranslationsUnitsCreateLanguageCodeErrorComponent"]
      | components["schemas"]["TranslationsUnitsCreateFilenameErrorComponent"]
      | components["schemas"]["TranslationsUnitsCreateRevisionErrorComponent"];
    TranslationsUnitsCreateErrorResponse400:
      | components["schemas"]["TranslationsUnitsCreateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    TranslationsUnitsCreateFilenameErrorComponent: {
      /**
       * @description * `filename` - filename (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "filename";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    TranslationsUnitsCreateLanguageCodeErrorComponent: {
      /**
       * @description * `language_code` - language_code (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "language_code";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    TranslationsUnitsCreateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    TranslationsUnitsCreateRevisionErrorComponent: {
      /**
       * @description * `revision` - revision (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "revision";
      /**
       * @description * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    TranslationsUnitsCreateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["TranslationsUnitsCreateError"][];
    };
    TranslationsUnitsRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    Unit: {
      /** Format: uri */
      readonly translation: string;
      readonly language_code: string;
      source: string[];
      previous_source?: string;
      target: string[];
      /** Format: int64 */
      id_hash: number;
      readonly content_hash: number;
      location?: string;
      context?: string;
      note?: string;
      flags?: string;
      labels: components["schemas"]["UnitLabels"][];
      state?: components["schemas"]["StateEnum"];
      readonly fuzzy: boolean;
      readonly translated: boolean;
      readonly approved: boolean;
      position: number;
      readonly has_suggestion: boolean;
      readonly has_comment: boolean;
      readonly has_failing_check: boolean;
      num_words?: number;
      /** Format: uri */
      readonly source_unit: string;
      priority?: number;
      readonly id: number;
      readonly web_url: string;
      /** Format: uri */
      readonly url: string;
      /** @description Additional explanation to clarify meaning or usage of the string. */
      explanation?: string;
      /**
       * Translation flags
       * @description Additional comma-separated flags to influence Weblate behavior.
       */
      extra_flags?: string;
      readonly pending: boolean;
      /** Format: date-time */
      readonly timestamp: string;
      /** Format: date-time */
      readonly last_updated: string;
    };
    UnitFlatLabels: {
      readonly id: number;
      /** Label name */
      name: string;
      /** Label description */
      description?: string;
      color?: components["schemas"]["ColorEnum"];
    };
    UnitLabels: {
      readonly id: number;
      /** Label name */
      name: string;
      /** Label description */
      description?: string;
      color?: components["schemas"]["ColorEnum"];
    };
    /** @description Serializer for updating source unit. */
    UnitWrite: {
      target: string[];
      state?: components["schemas"]["StateEnum"];
      /** @description Additional explanation to clarify meaning or usage of the string. */
      explanation?: string;
      /**
       * Translation flags
       * @description Additional comma-separated flags to influence Weblate behavior.
       */
      extra_flags?: string;
      labels: components["schemas"]["UnitFlatLabels"][];
    };
    UnitsCommentsCreateCommentErrorComponent: {
      /**
       * @description * `comment` - comment (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "comment";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    UnitsCommentsCreateError:
      | components["schemas"]["UnitsCommentsCreateNonFieldErrorsErrorComponent"]
      | components["schemas"]["UnitsCommentsCreateScopeErrorComponent"]
      | components["schemas"]["UnitsCommentsCreateCommentErrorComponent"];
    UnitsCommentsCreateErrorResponse400:
      | components["schemas"]["UnitsCommentsCreateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    UnitsCommentsCreateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    UnitsCommentsCreateScopeErrorComponent: {
      /**
       * @description * `scope` - scope (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "scope";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       *     * `required` - required
       * @enum {string}
       */
      code: "invalid_choice" | "null" | "required";
      detail: string;
    };
    UnitsCommentsCreateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["UnitsCommentsCreateError"][];
    };
    UnitsDestroyErrorResponse400: components["schemas"]["ParseErrorResponse"];
    UnitsListErrorResponse400: components["schemas"]["ParseErrorResponse"];
    UnitsPartialUpdateError:
      | components["schemas"]["UnitsPartialUpdateNonFieldErrorsErrorComponent"]
      | components["schemas"]["UnitsPartialUpdateTargetErrorComponent"]
      | components["schemas"]["UnitsPartialUpdateTargetINDEXErrorComponent"]
      | components["schemas"]["UnitsPartialUpdateStateErrorComponent"]
      | components["schemas"]["UnitsPartialUpdateExplanationErrorComponent"]
      | components["schemas"]["UnitsPartialUpdateExtraFlagsErrorComponent"]
      | components["schemas"]["UnitsPartialUpdateLabelsErrorComponent"];
    UnitsPartialUpdateErrorResponse400:
      | components["schemas"]["UnitsPartialUpdateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    UnitsPartialUpdateExplanationErrorComponent: {
      /**
       * @description * `explanation` - explanation (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "explanation";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    UnitsPartialUpdateExtraFlagsErrorComponent: {
      /**
       * @description * `extra_flags` - extra_flags (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "extra_flags";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    UnitsPartialUpdateLabelsErrorComponent: {
      /**
       * @description * `labels` - labels (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "labels";
      /**
       * @description * `invalid` - invalid
       *     * `not_a_list` - not_a_list
       *     * `null` - null
       *     * `required` - required
       * @enum {string}
       */
      code: "invalid" | "not_a_list" | "null" | "required";
      detail: string;
    };
    UnitsPartialUpdateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    UnitsPartialUpdateStateErrorComponent: {
      /**
       * @description * `state` - state (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "state";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "max_value" | "min_value" | "null";
      detail: string;
    };
    UnitsPartialUpdateTargetErrorComponent: {
      /**
       * @description * `target` - target (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "target";
      /**
       * @description * `not_a_list` - not_a_list
       *     * `null` - null
       *     * `required` - required
       * @enum {string}
       */
      code: "not_a_list" | "null" | "required";
      detail: string;
    };
    UnitsPartialUpdateTargetINDEXErrorComponent: {
      /**
       * @description * `target.INDEX` - target.INDEX (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "target.INDEX";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    UnitsPartialUpdateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["UnitsPartialUpdateError"][];
    };
    UnitsRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    UnitsTranslationsRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    UnitsUpdateError:
      | components["schemas"]["UnitsUpdateNonFieldErrorsErrorComponent"]
      | components["schemas"]["UnitsUpdateTargetErrorComponent"]
      | components["schemas"]["UnitsUpdateTargetINDEXErrorComponent"]
      | components["schemas"]["UnitsUpdateStateErrorComponent"]
      | components["schemas"]["UnitsUpdateExplanationErrorComponent"]
      | components["schemas"]["UnitsUpdateExtraFlagsErrorComponent"]
      | components["schemas"]["UnitsUpdateLabelsErrorComponent"];
    UnitsUpdateErrorResponse400:
      | components["schemas"]["UnitsUpdateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    UnitsUpdateExplanationErrorComponent: {
      /**
       * @description * `explanation` - explanation (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "explanation";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    UnitsUpdateExtraFlagsErrorComponent: {
      /**
       * @description * `extra_flags` - extra_flags (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "extra_flags";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    UnitsUpdateLabelsErrorComponent: {
      /**
       * @description * `labels` - labels (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "labels";
      /**
       * @description * `invalid` - invalid
       *     * `not_a_list` - not_a_list
       *     * `null` - null
       *     * `required` - required
       * @enum {string}
       */
      code: "invalid" | "not_a_list" | "null" | "required";
      detail: string;
    };
    UnitsUpdateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    UnitsUpdateStateErrorComponent: {
      /**
       * @description * `state` - state (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "state";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid_choice" | "max_value" | "min_value" | "null";
      detail: string;
    };
    UnitsUpdateTargetErrorComponent: {
      /**
       * @description * `target` - target (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "target";
      /**
       * @description * `not_a_list` - not_a_list
       *     * `null` - null
       *     * `required` - required
       * @enum {string}
       */
      code: "not_a_list" | "null" | "required";
      detail: string;
    };
    UnitsUpdateTargetINDEXErrorComponent: {
      /**
       * @description * `target.INDEX` - target.INDEX (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "target.INDEX";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    UnitsUpdateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["UnitsUpdateError"][];
    };
    UploadRequest: {
      /** Format: uri */
      file: string;
      /** Format: email */
      author_email?: string;
      author_name?: string;
      /** @default translate */
      method: components["schemas"]["MethodEnum"];
      /** @default  */
      fuzzy:
        | components["schemas"]["FuzzyEnum"]
        | components["schemas"]["BlankEnum"];
      /** @default  */
      conflicts:
        | components["schemas"]["ConflictsEnum"]
        | components["schemas"]["BlankEnum"];
    };
    UsersCreateError:
      | components["schemas"]["UsersCreateNonFieldErrorsErrorComponent"]
      | components["schemas"]["UsersCreateFullNameErrorComponent"]
      | components["schemas"]["UsersCreateUsernameErrorComponent"];
    UsersCreateErrorResponse400:
      | components["schemas"]["UsersCreateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    UsersCreateFullNameErrorComponent: {
      /**
       * @description * `full_name` - full_name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "full_name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    UsersCreateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    UsersCreateUsernameErrorComponent: {
      /**
       * @description * `username` - username (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "username";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       *     * `unique` - unique
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed"
        | "unique";
      detail: string;
    };
    UsersCreateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["UsersCreateError"][];
    };
    UsersDestroyErrorResponse400: components["schemas"]["ParseErrorResponse"];
    UsersGroupsCreateError:
      | components["schemas"]["UsersGroupsCreateNonFieldErrorsErrorComponent"]
      | components["schemas"]["UsersGroupsCreateFullNameErrorComponent"]
      | components["schemas"]["UsersGroupsCreateUsernameErrorComponent"];
    UsersGroupsCreateErrorResponse400:
      | components["schemas"]["UsersGroupsCreateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    UsersGroupsCreateFullNameErrorComponent: {
      /**
       * @description * `full_name` - full_name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "full_name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    UsersGroupsCreateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    UsersGroupsCreateUsernameErrorComponent: {
      /**
       * @description * `username` - username (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "username";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       *     * `unique` - unique
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed"
        | "unique";
      detail: string;
    };
    UsersGroupsCreateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["UsersGroupsCreateError"][];
    };
    UsersGroupsDestroyErrorResponse400: components["schemas"]["ParseErrorResponse"];
    UsersListError:
      | components["schemas"]["UsersListUsernameErrorComponent"]
      | components["schemas"]["UsersListIdErrorComponent"];
    UsersListErrorResponse400:
      | components["schemas"]["UsersListValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    UsersListIdErrorComponent: {
      /**
       * @description * `id` - id (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "id";
      /**
       * @description * `invalid` - invalid
       *     * `max_value` - max_value
       * @enum {string}
       */
      code: "invalid" | "max_value";
      detail: string;
    };
    UsersListUsernameErrorComponent: {
      /**
       * @description * `username` - username (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "username";
      /**
       * @description * `null_characters_not_allowed` - null_characters_not_allowed
       * @enum {string}
       */
      code: "null_characters_not_allowed";
      detail: string;
    };
    UsersListValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["UsersListError"][];
    };
    UsersNotificationsCreateError:
      | components["schemas"]["UsersNotificationsCreateNonFieldErrorsErrorComponent"]
      | components["schemas"]["UsersNotificationsCreateNotificationErrorComponent"]
      | components["schemas"]["UsersNotificationsCreateScopeErrorComponent"]
      | components["schemas"]["UsersNotificationsCreateFrequencyErrorComponent"];
    UsersNotificationsCreateErrorResponse400:
      | components["schemas"]["UsersNotificationsCreateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    UsersNotificationsCreateFrequencyErrorComponent: {
      /**
       * @description * `frequency` - frequency (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "frequency";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       *     * `required` - required
       * @enum {string}
       */
      code: "invalid_choice" | "max_value" | "min_value" | "null" | "required";
      detail: string;
    };
    UsersNotificationsCreateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    UsersNotificationsCreateNotificationErrorComponent: {
      /**
       * @description * `notification` - notification (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "notification";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       *     * `required` - required
       * @enum {string}
       */
      code: "invalid_choice" | "null" | "required";
      detail: string;
    };
    UsersNotificationsCreateScopeErrorComponent: {
      /**
       * @description * `scope` - scope (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "scope";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       *     * `required` - required
       * @enum {string}
       */
      code: "invalid_choice" | "max_value" | "min_value" | "null" | "required";
      detail: string;
    };
    UsersNotificationsCreateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["UsersNotificationsCreateError"][];
    };
    UsersNotificationsDestroyErrorResponse400: components["schemas"]["ParseErrorResponse"];
    UsersNotificationsListError:
      | components["schemas"]["UsersNotificationsListUsernameErrorComponent"]
      | components["schemas"]["UsersNotificationsListIdErrorComponent"];
    UsersNotificationsListErrorResponse400:
      | components["schemas"]["UsersNotificationsListValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    UsersNotificationsListIdErrorComponent: {
      /**
       * @description * `id` - id (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "id";
      /**
       * @description * `invalid` - invalid
       *     * `max_value` - max_value
       * @enum {string}
       */
      code: "invalid" | "max_value";
      detail: string;
    };
    UsersNotificationsListUsernameErrorComponent: {
      /**
       * @description * `username` - username (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "username";
      /**
       * @description * `null_characters_not_allowed` - null_characters_not_allowed
       * @enum {string}
       */
      code: "null_characters_not_allowed";
      detail: string;
    };
    UsersNotificationsListValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["UsersNotificationsListError"][];
    };
    UsersNotificationsPartialUpdateError:
      | components["schemas"]["UsersNotificationsPartialUpdateNonFieldErrorsErrorComponent"]
      | components["schemas"]["UsersNotificationsPartialUpdateNotificationErrorComponent"]
      | components["schemas"]["UsersNotificationsPartialUpdateScopeErrorComponent"]
      | components["schemas"]["UsersNotificationsPartialUpdateFrequencyErrorComponent"];
    UsersNotificationsPartialUpdateErrorResponse400:
      | components["schemas"]["UsersNotificationsPartialUpdateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    UsersNotificationsPartialUpdateFrequencyErrorComponent: {
      /**
       * @description * `frequency` - frequency (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "frequency";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       *     * `required` - required
       * @enum {string}
       */
      code: "invalid_choice" | "max_value" | "min_value" | "null" | "required";
      detail: string;
    };
    UsersNotificationsPartialUpdateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    UsersNotificationsPartialUpdateNotificationErrorComponent: {
      /**
       * @description * `notification` - notification (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "notification";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       *     * `required` - required
       * @enum {string}
       */
      code: "invalid_choice" | "null" | "required";
      detail: string;
    };
    UsersNotificationsPartialUpdateScopeErrorComponent: {
      /**
       * @description * `scope` - scope (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "scope";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       *     * `required` - required
       * @enum {string}
       */
      code: "invalid_choice" | "max_value" | "min_value" | "null" | "required";
      detail: string;
    };
    UsersNotificationsPartialUpdateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["UsersNotificationsPartialUpdateError"][];
    };
    UsersNotificationsRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    UsersNotificationsUpdateError:
      | components["schemas"]["UsersNotificationsUpdateNonFieldErrorsErrorComponent"]
      | components["schemas"]["UsersNotificationsUpdateNotificationErrorComponent"]
      | components["schemas"]["UsersNotificationsUpdateScopeErrorComponent"]
      | components["schemas"]["UsersNotificationsUpdateFrequencyErrorComponent"];
    UsersNotificationsUpdateErrorResponse400:
      | components["schemas"]["UsersNotificationsUpdateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    UsersNotificationsUpdateFrequencyErrorComponent: {
      /**
       * @description * `frequency` - frequency (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "frequency";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       *     * `required` - required
       * @enum {string}
       */
      code: "invalid_choice" | "max_value" | "min_value" | "null" | "required";
      detail: string;
    };
    UsersNotificationsUpdateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    UsersNotificationsUpdateNotificationErrorComponent: {
      /**
       * @description * `notification` - notification (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "notification";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `null` - null
       *     * `required` - required
       * @enum {string}
       */
      code: "invalid_choice" | "null" | "required";
      detail: string;
    };
    UsersNotificationsUpdateScopeErrorComponent: {
      /**
       * @description * `scope` - scope (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "scope";
      /**
       * @description * `invalid_choice` - invalid_choice
       *     * `max_value` - max_value
       *     * `min_value` - min_value
       *     * `null` - null
       *     * `required` - required
       * @enum {string}
       */
      code: "invalid_choice" | "max_value" | "min_value" | "null" | "required";
      detail: string;
    };
    UsersNotificationsUpdateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["UsersNotificationsUpdateError"][];
    };
    UsersPartialUpdateError:
      | components["schemas"]["UsersPartialUpdateNonFieldErrorsErrorComponent"]
      | components["schemas"]["UsersPartialUpdateFullNameErrorComponent"]
      | components["schemas"]["UsersPartialUpdateUsernameErrorComponent"];
    UsersPartialUpdateErrorResponse400:
      | components["schemas"]["UsersPartialUpdateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    UsersPartialUpdateFullNameErrorComponent: {
      /**
       * @description * `full_name` - full_name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "full_name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    UsersPartialUpdateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    UsersPartialUpdateUsernameErrorComponent: {
      /**
       * @description * `username` - username (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "username";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       *     * `unique` - unique
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed"
        | "unique";
      detail: string;
    };
    UsersPartialUpdateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["UsersPartialUpdateError"][];
    };
    UsersRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    UsersStatisticsRetrieveErrorResponse400: components["schemas"]["ParseErrorResponse"];
    UsersUpdateError:
      | components["schemas"]["UsersUpdateNonFieldErrorsErrorComponent"]
      | components["schemas"]["UsersUpdateFullNameErrorComponent"]
      | components["schemas"]["UsersUpdateUsernameErrorComponent"];
    UsersUpdateErrorResponse400:
      | components["schemas"]["UsersUpdateValidationError"]
      | components["schemas"]["ParseErrorResponse"];
    UsersUpdateFullNameErrorComponent: {
      /**
       * @description * `full_name` - full_name (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "full_name";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed";
      detail: string;
    };
    UsersUpdateNonFieldErrorsErrorComponent: {
      /**
       * @description * `non_field_errors` - non_field_errors (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "non_field_errors";
      /**
       * @description * `invalid` - invalid
       *     * `null` - null
       * @enum {string}
       */
      code: "invalid" | "null";
      detail: string;
    };
    UsersUpdateUsernameErrorComponent: {
      /**
       * @description * `username` - username (enum property replaced by openapi-typescript)
       * @enum {string}
       */
      attr: "username";
      /**
       * @description * `blank` - blank
       *     * `invalid` - invalid
       *     * `max_length` - max_length
       *     * `null` - null
       *     * `null_characters_not_allowed` - null_characters_not_allowed
       *     * `required` - required
       *     * `surrogate_characters_not_allowed` - surrogate_characters_not_allowed
       *     * `unique` - unique
       * @enum {string}
       */
      code:
        | "blank"
        | "invalid"
        | "max_length"
        | "null"
        | "null_characters_not_allowed"
        | "required"
        | "surrogate_characters_not_allowed"
        | "unique";
      detail: string;
    };
    UsersUpdateValidationError: {
      /**
       * @description discriminator enum property added by openapi-typescript
       * @enum {string}
       */
      type: "validation_error";
      errors: components["schemas"]["UsersUpdateError"][];
    };
    /**
     * @description * `validation_error` - Validation Error
     * @enum {string}
     */
    ValidationErrorEnum: "validation_error";
    /**
     * @description * `gerrit` - Gerrit
     *     * `git` - Git
     *     * `git-force-push` - Git with force push
     *     * `github` - GitHub pull request
     *     * `gitlab` - GitLab merge request
     *     * `local` - No remote repository
     *     * `mercurial` - Mercurial
     *     * `subversion` - Subversion
     * @enum {string}
     */
    VcsEnum:
      | "gerrit"
      | "git"
      | "git-force-push"
      | "github"
      | "gitlab"
      | "local"
      | "mercurial"
      | "subversion";
    patch_200_Message_response_serializer: {
      message: string;
    };
    patch_400_Error_message_serializer: {
      errors: string;
    };
    post_201_Message_response_serializer: {
      message: string;
    };
    post_400_Error_message_serializer: {
      errors: string;
    };
    put_200_Message_response_serializer: {
      message: string;
    };
    put_400_Error_message_serializer: {
      errors: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: {
    /** @description Erlaubte Anzahl der auszuführenden Anfragen */
    "X-RateLimit-Limit": number;
    /** @description Verbleibende Anzahl der auszuführenden Anfragen */
    "X-RateLimit-Remaining": number;
    /** @description Anzahl der Sekunden bis zum Zurücksetzen des Ratenbegrenzungsfensters */
    "X-RateLimit-Reset": number;
  };
  pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
  addons_list: {
    parameters: {
      query?: {
        format?: "csv" | "json";
        /** @description A page number within the paginated result set. */
        page?: number;
        /** @description Number of results to return per page. */
        page_size?: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedAddonList"];
          "text/csv": components["schemas"]["PaginatedAddonList"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["AddonsListErrorResponse400"];
          "text/csv": components["schemas"]["AddonsListErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  addons_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Addon"];
          "text/csv": components["schemas"]["Addon"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["AddonsRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["AddonsRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  addons_update: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Addon"];
        "application/x-www-form-urlencoded": components["schemas"]["Addon"];
        "multipart/form-data": components["schemas"]["Addon"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Addon"];
          "text/csv": components["schemas"]["Addon"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["AddonsUpdateErrorResponse400"];
          "text/csv": components["schemas"]["AddonsUpdateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  addons_destroy: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["AddonsDestroyErrorResponse400"];
          "text/csv": components["schemas"]["AddonsDestroyErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  addons_partial_update: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedAddon"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedAddon"];
        "multipart/form-data": components["schemas"]["PatchedAddon"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Addon"];
          "text/csv": components["schemas"]["Addon"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["AddonsPartialUpdateErrorResponse400"];
          "text/csv": components["schemas"]["AddonsPartialUpdateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  categories_list: {
    parameters: {
      query?: {
        format?: "csv" | "json";
        /** @description A page number within the paginated result set. */
        page?: number;
        /** @description Number of results to return per page. */
        page_size?: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedCategoryList"];
          "text/csv": components["schemas"]["PaginatedCategoryList"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["CategoriesListErrorResponse400"];
          "text/csv": components["schemas"]["CategoriesListErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  categories_create: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Category"];
        "application/x-www-form-urlencoded": components["schemas"]["Category"];
        "multipart/form-data": components["schemas"]["Category"];
      };
    };
    responses: {
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Category"];
          "text/csv": components["schemas"]["Category"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["CategoriesCreateErrorResponse400"];
          "text/csv": components["schemas"]["CategoriesCreateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  categories_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Category"];
          "text/csv": components["schemas"]["Category"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["CategoriesRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["CategoriesRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  categories_update: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Category"];
        "application/x-www-form-urlencoded": components["schemas"]["Category"];
        "multipart/form-data": components["schemas"]["Category"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Category"];
          "text/csv": components["schemas"]["Category"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["CategoriesUpdateErrorResponse400"];
          "text/csv": components["schemas"]["CategoriesUpdateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  categories_destroy: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["CategoriesDestroyErrorResponse400"];
          "text/csv": components["schemas"]["CategoriesDestroyErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  categories_partial_update: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedCategory"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedCategory"];
        "multipart/form-data": components["schemas"]["PatchedCategory"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Category"];
          "text/csv": components["schemas"]["Category"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["CategoriesPartialUpdateErrorResponse400"];
          "text/csv": components["schemas"]["CategoriesPartialUpdateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  categories_statistics_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json" | "json-flat";
      };
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Category"];
          "text/csv": components["schemas"]["Category"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["CategoriesStatisticsRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["CategoriesStatisticsRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  changes_list: {
    parameters: {
      query?: {
        /** @description * `0` - Resource updated
         *     * `1` - Translation completed
         *     * `2` - Translation changed
         *     * `3` - Comment added
         *     * `4` - Suggestion added
         *     * `5` - Translation added
         *     * `6` - Automatically translated
         *     * `7` - Suggestion accepted
         *     * `8` - Translation reverted
         *     * `9` - Translation uploaded
         *     * `13` - Source string added
         *     * `14` - Component locked
         *     * `15` - Component unlocked
         *     * `17` - Changes committed
         *     * `18` - Changes pushed
         *     * `19` - Repository reset
         *     * `20` - Repository merged
         *     * `21` - Repository rebased
         *     * `22` - Repository merge failed
         *     * `23` - Repository rebase failed
         *     * `24` - Parsing failed
         *     * `25` - Translation removed
         *     * `26` - Suggestion removed
         *     * `27` - Translation replaced
         *     * `28` - Repository push failed
         *     * `29` - Suggestion removed during cleanup
         *     * `30` - Source string changed
         *     * `31` - String added
         *     * `32` - Bulk status changed
         *     * `33` - Visibility changed
         *     * `34` - User added
         *     * `35` - User removed
         *     * `36` - Translation approved
         *     * `37` - Marked for edit
         *     * `38` - Component removed
         *     * `39` - Project removed
         *     * `41` - Project renamed
         *     * `42` - Component renamed
         *     * `43` - Moved component
         *     * `45` - Contributor joined
         *     * `46` - Announcement posted
         *     * `47` - Alert triggered
         *     * `48` - Language added
         *     * `49` - Language requested
         *     * `50` - Project created
         *     * `51` - Component created
         *     * `52` - User invited
         *     * `53` - Repository notification received
         *     * `54` - Translation replaced file by upload
         *     * `55` - License changed
         *     * `56` - Contributor license agreement changed
         *     * `57` - Screenshot added
         *     * `58` - Screenshot uploaded
         *     * `59` - String updated in the repository
         *     * `60` - Add-on installed
         *     * `61` - Add-on configuration changed
         *     * `62` - Add-on uninstalled
         *     * `63` - String removed
         *     * `64` - Comment removed
         *     * `65` - Comment resolved
         *     * `66` - Explanation updated
         *     * `67` - Category removed
         *     * `68` - Category renamed
         *     * `69` - Category moved
         *     * `70` - Saving string failed
         *     * `71` - String added in the repository
         *     * `72` - String updated in the upload
         *     * `73` - String added in the upload
         *     * `74` - Translation updated by source upload
         *     * `75` - Component translation completed
         *     * `76` - Applied enforced check
         *     * `77` - Propagated change
         *     * `78` - File uploaded
         *     * `79` - Extra flags updated */
        action?: (
          | 0
          | 1
          | 13
          | 14
          | 15
          | 17
          | 18
          | 19
          | 2
          | 20
          | 21
          | 22
          | 23
          | 24
          | 25
          | 26
          | 27
          | 28
          | 29
          | 3
          | 30
          | 31
          | 32
          | 33
          | 34
          | 35
          | 36
          | 37
          | 38
          | 39
          | 4
          | 41
          | 42
          | 43
          | 45
          | 46
          | 47
          | 48
          | 49
          | 5
          | 50
          | 51
          | 52
          | 53
          | 54
          | 55
          | 56
          | 57
          | 58
          | 59
          | 6
          | 60
          | 61
          | 62
          | 63
          | 64
          | 65
          | 66
          | 67
          | 68
          | 69
          | 7
          | 70
          | 71
          | 72
          | 73
          | 74
          | 75
          | 76
          | 77
          | 78
          | 79
          | 8
          | 9
        )[];
        format?: "csv" | "json";
        /** @description A page number within the paginated result set. */
        page?: number;
        /** @description Number of results to return per page. */
        page_size?: number;
        timestamp_after?: string;
        timestamp_before?: string;
        user?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedChangeList"];
          "text/csv": components["schemas"]["PaginatedChangeList"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ChangesListErrorResponse400"];
          "text/csv": components["schemas"]["ChangesListErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  changes_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Change"];
          "text/csv": components["schemas"]["Change"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ChangesRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["ChangesRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  component_lists_list: {
    parameters: {
      query?: {
        format?: "csv" | "json";
        /** @description A page number within the paginated result set. */
        page?: number;
        /** @description Number of results to return per page. */
        page_size?: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedComponentListList"];
          "text/csv": components["schemas"]["PaginatedComponentListList"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ComponentListsListErrorResponse400"];
          "text/csv": components["schemas"]["ComponentListsListErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  component_lists_create: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ComponentList"];
        "application/x-www-form-urlencoded": components["schemas"]["ComponentList"];
        "multipart/form-data": components["schemas"]["ComponentList"];
      };
    };
    responses: {
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ComponentList"];
          "text/csv": components["schemas"]["ComponentList"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ComponentListsCreateErrorResponse400"];
          "text/csv": components["schemas"]["ComponentListsCreateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  component_lists_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        slug: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ComponentList"];
          "text/csv": components["schemas"]["ComponentList"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ComponentListsRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["ComponentListsRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  component_lists_update: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        slug: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ComponentList"];
        "application/x-www-form-urlencoded": components["schemas"]["ComponentList"];
        "multipart/form-data": components["schemas"]["ComponentList"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ComponentList"];
          "text/csv": components["schemas"]["ComponentList"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ComponentListsUpdateErrorResponse400"];
          "text/csv": components["schemas"]["ComponentListsUpdateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  component_lists_destroy: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        slug: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ComponentListsDestroyErrorResponse400"];
          "text/csv": components["schemas"]["ComponentListsDestroyErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  component_lists_partial_update: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        slug: string;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedComponentList"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedComponentList"];
        "multipart/form-data": components["schemas"]["PatchedComponentList"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ComponentList"];
          "text/csv": components["schemas"]["ComponentList"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ComponentListsPartialUpdateErrorResponse400"];
          "text/csv": components["schemas"]["ComponentListsPartialUpdateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  component_lists_components_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        slug: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ComponentList"];
          "text/csv": components["schemas"]["ComponentList"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ComponentListsComponentsRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["ComponentListsComponentsRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  component_lists_components_create: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        slug: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ComponentList"];
        "application/x-www-form-urlencoded": components["schemas"]["ComponentList"];
        "multipart/form-data": components["schemas"]["ComponentList"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ComponentList"];
          "text/csv": components["schemas"]["ComponentList"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ComponentListsComponentsCreateErrorResponse400"];
          "text/csv": components["schemas"]["ComponentListsComponentsCreateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  component_lists_components_destroy: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        component_slug: string;
        slug: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ComponentListsComponentsDestroyErrorResponse400"];
          "text/csv": components["schemas"]["ComponentListsComponentsDestroyErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  components_list: {
    parameters: {
      query?: {
        format?: "csv" | "json";
        /** @description A page number within the paginated result set. */
        page?: number;
        /** @description Number of results to return per page. */
        page_size?: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedComponentList"];
          "text/csv": components["schemas"]["PaginatedComponentList"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ComponentsListErrorResponse400"];
          "text/csv": components["schemas"]["ComponentsListErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  components_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        project__slug: string;
        slug: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Component"];
          "text/csv": components["schemas"]["Component"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ComponentsRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["ComponentsRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  components_update: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        project__slug: string;
        slug: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Component"];
        "application/x-www-form-urlencoded": components["schemas"]["Component"];
        "multipart/form-data": components["schemas"]["Component"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Component"];
          "text/csv": components["schemas"]["Component"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ComponentsUpdateErrorResponse400"];
          "text/csv": components["schemas"]["ComponentsUpdateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  components_destroy: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        project__slug: string;
        slug: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ComponentsDestroyErrorResponse400"];
          "text/csv": components["schemas"]["ComponentsDestroyErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  components_partial_update: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        project__slug: string;
        slug: string;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedComponent"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedComponent"];
        "multipart/form-data": components["schemas"]["PatchedComponent"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Component"];
          "text/csv": components["schemas"]["Component"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ComponentsPartialUpdateErrorResponse400"];
          "text/csv": components["schemas"]["ComponentsPartialUpdateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  components_addons_create: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        project__slug: string;
        slug: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Component"];
        "application/x-www-form-urlencoded": components["schemas"]["Component"];
        "multipart/form-data": components["schemas"]["Component"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Component"];
          "text/csv": components["schemas"]["Component"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ComponentsAddonsCreateErrorResponse400"];
          "text/csv": components["schemas"]["ComponentsAddonsCreateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  components_changes_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        project__slug: string;
        slug: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Component"];
          "text/csv": components["schemas"]["Component"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ComponentsChangesRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["ComponentsChangesRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  components_credits_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        project__slug: string;
        slug: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Component"];
          "text/csv": components["schemas"]["Component"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ComponentsCreditsRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["ComponentsCreditsRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  components_file_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        project__slug: string;
        slug: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Component"];
          "text/csv": components["schemas"]["Component"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ComponentsFileRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["ComponentsFileRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  components_links_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        project__slug: string;
        slug: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Component"];
          "text/csv": components["schemas"]["Component"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ComponentsLinksRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["ComponentsLinksRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  components_links_create: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        project__slug: string;
        slug: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Component"];
        "application/x-www-form-urlencoded": components["schemas"]["Component"];
        "multipart/form-data": components["schemas"]["Component"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Component"];
          "text/csv": components["schemas"]["Component"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ComponentsLinksCreateErrorResponse400"];
          "text/csv": components["schemas"]["ComponentsLinksCreateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  components_links_destroy: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        project__slug: string;
        project_slug: string;
        slug: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ComponentsLinksDestroyErrorResponse400"];
          "text/csv": components["schemas"]["ComponentsLinksDestroyErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  components_lock_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        project__slug: string;
        slug: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["LockRequest"];
          "text/csv": components["schemas"]["LockRequest"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ComponentsLockRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["ComponentsLockRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  components_lock_create: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        project__slug: string;
        slug: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["LockRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["LockRequest"];
        "multipart/form-data": components["schemas"]["LockRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["LockRequest"];
          "text/csv": components["schemas"]["LockRequest"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ComponentsLockCreateErrorResponse400"];
          "text/csv": components["schemas"]["ComponentsLockCreateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  components_monolingual_base_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        project__slug: string;
        slug: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Component"];
          "text/csv": components["schemas"]["Component"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ComponentsMonolingualBaseRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["ComponentsMonolingualBaseRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  components_new_template_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        project__slug: string;
        slug: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Component"];
          "text/csv": components["schemas"]["Component"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ComponentsNewTemplateRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["ComponentsNewTemplateRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  components_repository_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        project__slug: string;
        slug: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["RepoRequest"];
          "text/csv": components["schemas"]["RepoRequest"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ComponentsRepositoryRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["ComponentsRepositoryRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  components_repository_create: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        project__slug: string;
        slug: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["RepoRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["RepoRequest"];
        "multipart/form-data": components["schemas"]["RepoRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["RepoRequest"];
          "text/csv": components["schemas"]["RepoRequest"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ComponentsRepositoryCreateErrorResponse400"];
          "text/csv": components["schemas"]["ComponentsRepositoryCreateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  components_screenshots_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        project__slug: string;
        slug: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Component"];
          "text/csv": components["schemas"]["Component"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ComponentsScreenshotsRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["ComponentsScreenshotsRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  components_statistics_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json" | "json-flat";
      };
      header?: never;
      path: {
        project__slug: string;
        slug: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Component"];
          "text/csv": components["schemas"]["Component"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ComponentsStatisticsRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["ComponentsStatisticsRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  components_translations_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        project__slug: string;
        slug: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Component"];
          "text/csv": components["schemas"]["Component"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ComponentsTranslationsRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["ComponentsTranslationsRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  components_translations_create: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        project__slug: string;
        slug: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Component"];
        "application/x-www-form-urlencoded": components["schemas"]["Component"];
        "multipart/form-data": components["schemas"]["Component"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Component"];
          "text/csv": components["schemas"]["Component"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ComponentsTranslationsCreateErrorResponse400"];
          "text/csv": components["schemas"]["ComponentsTranslationsCreateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  groups_list: {
    parameters: {
      query?: {
        format?: "csv" | "json";
        /** @description A page number within the paginated result set. */
        page?: number;
        /** @description Number of results to return per page. */
        page_size?: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedGroupList"];
          "text/csv": components["schemas"]["PaginatedGroupList"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["GroupsListErrorResponse400"];
          "text/csv": components["schemas"]["GroupsListErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  groups_create: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Group"];
        "application/x-www-form-urlencoded": components["schemas"]["Group"];
        "multipart/form-data": components["schemas"]["Group"];
      };
    };
    responses: {
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Group"];
          "text/csv": components["schemas"]["Group"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["GroupsCreateErrorResponse400"];
          "text/csv": components["schemas"]["GroupsCreateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  groups_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Group"];
          "text/csv": components["schemas"]["Group"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["GroupsRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["GroupsRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  groups_update: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Group"];
        "application/x-www-form-urlencoded": components["schemas"]["Group"];
        "multipart/form-data": components["schemas"]["Group"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Group"];
          "text/csv": components["schemas"]["Group"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["GroupsUpdateErrorResponse400"];
          "text/csv": components["schemas"]["GroupsUpdateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  groups_destroy: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["GroupsDestroyErrorResponse400"];
          "text/csv": components["schemas"]["GroupsDestroyErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  groups_partial_update: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedGroup"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedGroup"];
        "multipart/form-data": components["schemas"]["PatchedGroup"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Group"];
          "text/csv": components["schemas"]["Group"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["GroupsPartialUpdateErrorResponse400"];
          "text/csv": components["schemas"]["GroupsPartialUpdateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  groups_admins_create: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Group"];
        "application/x-www-form-urlencoded": components["schemas"]["Group"];
        "multipart/form-data": components["schemas"]["Group"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Group"];
          "text/csv": components["schemas"]["Group"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["GroupsAdminsCreateErrorResponse400"];
          "text/csv": components["schemas"]["GroupsAdminsCreateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  groups_admins_destroy: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        id: string;
        user_pk: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["GroupsAdminsDestroyErrorResponse400"];
          "text/csv": components["schemas"]["GroupsAdminsDestroyErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  groups_componentlists_create: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Group"];
        "application/x-www-form-urlencoded": components["schemas"]["Group"];
        "multipart/form-data": components["schemas"]["Group"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Group"];
          "text/csv": components["schemas"]["Group"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["GroupsComponentlistsCreateErrorResponse400"];
          "text/csv": components["schemas"]["GroupsComponentlistsCreateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  groups_componentlists_destroy: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        component_list_id: string;
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["GroupsComponentlistsDestroyErrorResponse400"];
          "text/csv": components["schemas"]["GroupsComponentlistsDestroyErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  groups_components_create: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Group"];
        "application/x-www-form-urlencoded": components["schemas"]["Group"];
        "multipart/form-data": components["schemas"]["Group"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Group"];
          "text/csv": components["schemas"]["Group"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["GroupsComponentsCreateErrorResponse400"];
          "text/csv": components["schemas"]["GroupsComponentsCreateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  groups_components_destroy: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        component_id: string;
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["GroupsComponentsDestroyErrorResponse400"];
          "text/csv": components["schemas"]["GroupsComponentsDestroyErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  groups_languages_create: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Group"];
        "application/x-www-form-urlencoded": components["schemas"]["Group"];
        "multipart/form-data": components["schemas"]["Group"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Group"];
          "text/csv": components["schemas"]["Group"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["GroupsLanguagesCreateErrorResponse400"];
          "text/csv": components["schemas"]["GroupsLanguagesCreateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  groups_languages_destroy: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        id: string;
        language_code: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["GroupsLanguagesDestroyErrorResponse400"];
          "text/csv": components["schemas"]["GroupsLanguagesDestroyErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  groups_projects_create: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Group"];
        "application/x-www-form-urlencoded": components["schemas"]["Group"];
        "multipart/form-data": components["schemas"]["Group"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Group"];
          "text/csv": components["schemas"]["Group"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["GroupsProjectsCreateErrorResponse400"];
          "text/csv": components["schemas"]["GroupsProjectsCreateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  groups_projects_destroy: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        id: string;
        project_id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["GroupsProjectsDestroyErrorResponse400"];
          "text/csv": components["schemas"]["GroupsProjectsDestroyErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  groups_roles_create: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Group"];
        "application/x-www-form-urlencoded": components["schemas"]["Group"];
        "multipart/form-data": components["schemas"]["Group"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Group"];
          "text/csv": components["schemas"]["Group"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["GroupsRolesCreateErrorResponse400"];
          "text/csv": components["schemas"]["GroupsRolesCreateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  groups_roles_destroy: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        id: string;
        role_id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["GroupsRolesDestroyErrorResponse400"];
          "text/csv": components["schemas"]["GroupsRolesDestroyErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  languages_list: {
    parameters: {
      query?: {
        format?: "csv" | "json";
        /** @description A page number within the paginated result set. */
        page?: number;
        /** @description Number of results to return per page. */
        page_size?: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedLanguageList"];
          "text/csv": components["schemas"]["PaginatedLanguageList"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["LanguagesListErrorResponse400"];
          "text/csv": components["schemas"]["LanguagesListErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  languages_create: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Language"];
        "application/x-www-form-urlencoded": components["schemas"]["Language"];
        "multipart/form-data": components["schemas"]["Language"];
      };
    };
    responses: {
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Language"];
          "text/csv": components["schemas"]["Language"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["LanguagesCreateErrorResponse400"];
          "text/csv": components["schemas"]["LanguagesCreateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  languages_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        code: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Language"];
          "text/csv": components["schemas"]["Language"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["LanguagesRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["LanguagesRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  languages_update: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        code: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Language"];
        "application/x-www-form-urlencoded": components["schemas"]["Language"];
        "multipart/form-data": components["schemas"]["Language"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Language"];
          "text/csv": components["schemas"]["Language"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["LanguagesUpdateErrorResponse400"];
          "text/csv": components["schemas"]["LanguagesUpdateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  languages_destroy: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        code: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["LanguagesDestroyErrorResponse400"];
          "text/csv": components["schemas"]["LanguagesDestroyErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  languages_partial_update: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        code: string;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedLanguage"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedLanguage"];
        "multipart/form-data": components["schemas"]["PatchedLanguage"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Language"];
          "text/csv": components["schemas"]["Language"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["LanguagesPartialUpdateErrorResponse400"];
          "text/csv": components["schemas"]["LanguagesPartialUpdateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  languages_statistics_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json" | "json-flat";
      };
      header?: never;
      path: {
        code: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Language"];
          "text/csv": components["schemas"]["Language"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["LanguagesStatisticsRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["LanguagesStatisticsRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  memory_list: {
    parameters: {
      query?: {
        format?: "csv" | "json";
        /** @description A page number within the paginated result set. */
        page?: number;
        /** @description Number of results to return per page. */
        page_size?: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedMemoryList"];
          "text/csv": components["schemas"]["PaginatedMemoryList"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["MemoryListErrorResponse400"];
          "text/csv": components["schemas"]["MemoryListErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  memory_create: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Memory"];
        "application/x-www-form-urlencoded": components["schemas"]["Memory"];
        "multipart/form-data": components["schemas"]["Memory"];
      };
    };
    responses: {
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Memory"];
          "text/csv": components["schemas"]["Memory"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["MemoryCreateErrorResponse400"];
          "text/csv": components["schemas"]["MemoryCreateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  memory_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Memory"];
          "text/csv": components["schemas"]["Memory"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["MemoryRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["MemoryRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  memory_update: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Memory"];
        "application/x-www-form-urlencoded": components["schemas"]["Memory"];
        "multipart/form-data": components["schemas"]["Memory"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Memory"];
          "text/csv": components["schemas"]["Memory"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["MemoryUpdateErrorResponse400"];
          "text/csv": components["schemas"]["MemoryUpdateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  memory_destroy: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["MemoryDestroyErrorResponse400"];
          "text/csv": components["schemas"]["MemoryDestroyErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  memory_partial_update: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedMemory"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedMemory"];
        "multipart/form-data": components["schemas"]["PatchedMemory"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Memory"];
          "text/csv": components["schemas"]["Memory"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["MemoryPartialUpdateErrorResponse400"];
          "text/csv": components["schemas"]["MemoryPartialUpdateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  metrics_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json" | "openmetrics";
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Metrics"];
          "text/csv": components["schemas"]["Metrics"];
          "application/openmetrics-text": components["schemas"]["Metrics"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["MetricsRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["MetricsRetrieveErrorResponse400"];
          "application/openmetrics-text": components["schemas"]["MetricsRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
          "application/openmetrics-text": components["schemas"]["ErrorResponse401"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
          "application/openmetrics-text": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
          "application/openmetrics-text": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
          "application/openmetrics-text": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
          "application/openmetrics-text": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
          "application/openmetrics-text": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
          "application/openmetrics-text": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  projects_list: {
    parameters: {
      query?: {
        format?: "csv" | "json";
        /** @description A page number within the paginated result set. */
        page?: number;
        /** @description Number of results to return per page. */
        page_size?: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedProjectList"];
          "text/csv": components["schemas"]["PaginatedProjectList"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ProjectsListErrorResponse400"];
          "text/csv": components["schemas"]["ProjectsListErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  projects_create: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Project"];
        "application/x-www-form-urlencoded": components["schemas"]["Project"];
        "multipart/form-data": components["schemas"]["Project"];
      };
    };
    responses: {
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Project"];
          "text/csv": components["schemas"]["Project"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ProjectsCreateErrorResponse400"];
          "text/csv": components["schemas"]["ProjectsCreateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  projects_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        slug: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Project"];
          "text/csv": components["schemas"]["Project"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ProjectsRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["ProjectsRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  projects_update: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        slug: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Project"];
        "application/x-www-form-urlencoded": components["schemas"]["Project"];
        "multipart/form-data": components["schemas"]["Project"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Project"];
          "text/csv": components["schemas"]["Project"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ProjectsUpdateErrorResponse400"];
          "text/csv": components["schemas"]["ProjectsUpdateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  projects_destroy: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        slug: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ProjectsDestroyErrorResponse400"];
          "text/csv": components["schemas"]["ProjectsDestroyErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  projects_partial_update: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        slug: string;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedProject"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedProject"];
        "multipart/form-data": components["schemas"]["PatchedProject"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Project"];
          "text/csv": components["schemas"]["Project"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ProjectsPartialUpdateErrorResponse400"];
          "text/csv": components["schemas"]["ProjectsPartialUpdateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  projects_addons_create: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        slug: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Project"];
        "application/x-www-form-urlencoded": components["schemas"]["Project"];
        "multipart/form-data": components["schemas"]["Project"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Project"];
          "text/csv": components["schemas"]["Project"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ProjectsAddonsCreateErrorResponse400"];
          "text/csv": components["schemas"]["ProjectsAddonsCreateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  projects_categories_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        slug: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Project"];
          "text/csv": components["schemas"]["Project"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ProjectsCategoriesRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["ProjectsCategoriesRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  projects_changes_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        slug: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Project"];
          "text/csv": components["schemas"]["Project"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ProjectsChangesRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["ProjectsChangesRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  projects_components_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        slug: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Component"];
          "text/csv": components["schemas"]["Component"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ProjectsComponentsRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["ProjectsComponentsRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  projects_components_create: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        slug: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Component"];
        "multipart/form-data": components["schemas"]["Component"];
        "application/x-www-form-urlencoded": components["schemas"]["Component"];
        "*/*": components["schemas"]["Component"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Component"];
          "text/csv": components["schemas"]["Component"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ProjectsComponentsCreateErrorResponse400"];
          "text/csv": components["schemas"]["ProjectsComponentsCreateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  projects_credits_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        slug: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Project"];
          "text/csv": components["schemas"]["Project"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ProjectsCreditsRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["ProjectsCreditsRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  projects_file_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        slug: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Project"];
          "text/csv": components["schemas"]["Project"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ProjectsFileRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["ProjectsFileRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  projects_labels_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        slug: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Project"];
          "text/csv": components["schemas"]["Project"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ProjectsLabelsRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["ProjectsLabelsRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  projects_labels_create: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        slug: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Project"];
        "application/x-www-form-urlencoded": components["schemas"]["Project"];
        "multipart/form-data": components["schemas"]["Project"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Project"];
          "text/csv": components["schemas"]["Project"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ProjectsLabelsCreateErrorResponse400"];
          "text/csv": components["schemas"]["ProjectsLabelsCreateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  projects_languages_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json" | "json-flat";
      };
      header?: never;
      path: {
        slug: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Project"];
          "text/csv": components["schemas"]["Project"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ProjectsLanguagesRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["ProjectsLanguagesRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  projects_machinery_settings_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        slug: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ProjectMachinerySettings"];
          "text/csv": components["schemas"]["ProjectMachinerySettings"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ProjectsMachinerySettingsRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["ProjectsMachinerySettingsRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  projects_machinery_settings_update: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        slug: string;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["ProjectMachinerySettings"];
        "application/x-www-form-urlencoded": components["schemas"]["ProjectMachinerySettings"];
        "multipart/form-data": components["schemas"]["ProjectMachinerySettings"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["put_200_Message_response_serializer"];
          "text/csv": components["schemas"]["put_200_Message_response_serializer"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["put_400_Error_message_serializer"];
          "text/csv": components["schemas"]["put_400_Error_message_serializer"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  projects_machinery_settings_create: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        slug: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["SingleServiceConfig"];
        "application/x-www-form-urlencoded": components["schemas"]["SingleServiceConfig"];
        "multipart/form-data": components["schemas"]["SingleServiceConfig"];
      };
    };
    responses: {
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["post_201_Message_response_serializer"];
          "text/csv": components["schemas"]["post_201_Message_response_serializer"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["post_400_Error_message_serializer"];
          "text/csv": components["schemas"]["post_400_Error_message_serializer"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  projects_machinery_settings_partial_update: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        slug: string;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedSingleServiceConfig"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedSingleServiceConfig"];
        "multipart/form-data": components["schemas"]["PatchedSingleServiceConfig"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["patch_200_Message_response_serializer"];
          "text/csv": components["schemas"]["patch_200_Message_response_serializer"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["patch_400_Error_message_serializer"];
          "text/csv": components["schemas"]["patch_400_Error_message_serializer"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  projects_repository_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        slug: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["RepoRequest"];
          "text/csv": components["schemas"]["RepoRequest"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ProjectsRepositoryRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["ProjectsRepositoryRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  projects_repository_create: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        slug: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["RepoRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["RepoRequest"];
        "multipart/form-data": components["schemas"]["RepoRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["RepoRequest"];
          "text/csv": components["schemas"]["RepoRequest"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ProjectsRepositoryCreateErrorResponse400"];
          "text/csv": components["schemas"]["ProjectsRepositoryCreateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  projects_statistics_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json" | "json-flat";
      };
      header?: never;
      path: {
        slug: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Project"];
          "text/csv": components["schemas"]["Project"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ProjectsStatisticsRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["ProjectsStatisticsRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  roles_list: {
    parameters: {
      query?: {
        format?: "csv" | "json";
        /** @description A page number within the paginated result set. */
        page?: number;
        /** @description Number of results to return per page. */
        page_size?: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedRoleList"];
          "text/csv": components["schemas"]["PaginatedRoleList"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["RolesListErrorResponse400"];
          "text/csv": components["schemas"]["RolesListErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  roles_create: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Role"];
        "application/x-www-form-urlencoded": components["schemas"]["Role"];
        "multipart/form-data": components["schemas"]["Role"];
      };
    };
    responses: {
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Role"];
          "text/csv": components["schemas"]["Role"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["RolesCreateErrorResponse400"];
          "text/csv": components["schemas"]["RolesCreateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  roles_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Role"];
          "text/csv": components["schemas"]["Role"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["RolesRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["RolesRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  roles_update: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Role"];
        "application/x-www-form-urlencoded": components["schemas"]["Role"];
        "multipart/form-data": components["schemas"]["Role"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Role"];
          "text/csv": components["schemas"]["Role"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["RolesUpdateErrorResponse400"];
          "text/csv": components["schemas"]["RolesUpdateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  roles_destroy: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["RolesDestroyErrorResponse400"];
          "text/csv": components["schemas"]["RolesDestroyErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  roles_partial_update: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedRole"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedRole"];
        "multipart/form-data": components["schemas"]["PatchedRole"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Role"];
          "text/csv": components["schemas"]["Role"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["RolesPartialUpdateErrorResponse400"];
          "text/csv": components["schemas"]["RolesPartialUpdateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  screenshots_list: {
    parameters: {
      query?: {
        format?: "csv" | "json";
        /** @description A page number within the paginated result set. */
        page?: number;
        /** @description Number of results to return per page. */
        page_size?: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedScreenshotList"];
          "text/csv": components["schemas"]["PaginatedScreenshotList"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ScreenshotsListErrorResponse400"];
          "text/csv": components["schemas"]["ScreenshotsListErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  screenshots_create: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Screenshot"];
        "application/x-www-form-urlencoded": components["schemas"]["Screenshot"];
        "multipart/form-data": components["schemas"]["Screenshot"];
      };
    };
    responses: {
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Screenshot"];
          "text/csv": components["schemas"]["Screenshot"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ScreenshotsCreateErrorResponse400"];
          "text/csv": components["schemas"]["ScreenshotsCreateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  screenshots_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Screenshot"];
          "text/csv": components["schemas"]["Screenshot"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ScreenshotsRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["ScreenshotsRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  screenshots_update: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Screenshot"];
        "application/x-www-form-urlencoded": components["schemas"]["Screenshot"];
        "multipart/form-data": components["schemas"]["Screenshot"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Screenshot"];
          "text/csv": components["schemas"]["Screenshot"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ScreenshotsUpdateErrorResponse400"];
          "text/csv": components["schemas"]["ScreenshotsUpdateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  screenshots_destroy: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ScreenshotsDestroyErrorResponse400"];
          "text/csv": components["schemas"]["ScreenshotsDestroyErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  screenshots_partial_update: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedScreenshot"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedScreenshot"];
        "multipart/form-data": components["schemas"]["PatchedScreenshot"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Screenshot"];
          "text/csv": components["schemas"]["Screenshot"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ScreenshotsPartialUpdateErrorResponse400"];
          "text/csv": components["schemas"]["ScreenshotsPartialUpdateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  screenshots_file_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ScreenshotFile"];
          "text/csv": components["schemas"]["ScreenshotFile"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ScreenshotsFileRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["ScreenshotsFileRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  screenshots_file_update: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "multipart/form-data": components["schemas"]["ScreenshotFile"];
        "application/x-www-form-urlencoded": components["schemas"]["ScreenshotFile"];
        "*/*": components["schemas"]["ScreenshotFile"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ScreenshotFile"];
          "text/csv": components["schemas"]["ScreenshotFile"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ScreenshotsFileUpdateErrorResponse400"];
          "text/csv": components["schemas"]["ScreenshotsFileUpdateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  screenshots_file_create: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "multipart/form-data": components["schemas"]["ScreenshotFile"];
        "application/x-www-form-urlencoded": components["schemas"]["ScreenshotFile"];
        "*/*": components["schemas"]["ScreenshotFile"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ScreenshotFile"];
          "text/csv": components["schemas"]["ScreenshotFile"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ScreenshotsFileCreateErrorResponse400"];
          "text/csv": components["schemas"]["ScreenshotsFileCreateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  screenshots_units_create: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Screenshot"];
        "application/x-www-form-urlencoded": components["schemas"]["Screenshot"];
        "multipart/form-data": components["schemas"]["Screenshot"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Screenshot"];
          "text/csv": components["schemas"]["Screenshot"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ScreenshotsUnitsCreateErrorResponse400"];
          "text/csv": components["schemas"]["ScreenshotsUnitsCreateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  screenshots_units_destroy: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        id: string;
        unit_id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ScreenshotsUnitsDestroyErrorResponse400"];
          "text/csv": components["schemas"]["ScreenshotsUnitsDestroyErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  search_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content?: never;
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["SearchRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["SearchRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  tasks_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content?: never;
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["TasksRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["TasksRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  tasks_destroy: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["TasksDestroyErrorResponse400"];
          "text/csv": components["schemas"]["TasksDestroyErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  translations_list: {
    parameters: {
      query?: {
        format?: "csv" | "json";
        /** @description A page number within the paginated result set. */
        page?: number;
        /** @description Number of results to return per page. */
        page_size?: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedTranslationList"];
          "text/csv": components["schemas"]["PaginatedTranslationList"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["TranslationsListErrorResponse400"];
          "text/csv": components["schemas"]["TranslationsListErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  translations_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        component__project__slug: string;
        component__slug: string;
        language__code: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Translation"];
          "text/csv": components["schemas"]["Translation"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["TranslationsRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["TranslationsRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  translations_destroy: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        component__project__slug: string;
        component__slug: string;
        language__code: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["TranslationsDestroyErrorResponse400"];
          "text/csv": components["schemas"]["TranslationsDestroyErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  translations_autotranslate_create: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        component__project__slug: string;
        component__slug: string;
        language__code: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Translation"];
        "application/x-www-form-urlencoded": components["schemas"]["Translation"];
        "multipart/form-data": components["schemas"]["Translation"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Translation"];
          "text/csv": components["schemas"]["Translation"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["TranslationsAutotranslateCreateErrorResponse400"];
          "text/csv": components["schemas"]["TranslationsAutotranslateCreateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  translations_changes_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        component__project__slug: string;
        component__slug: string;
        language__code: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Translation"];
          "text/csv": components["schemas"]["Translation"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["TranslationsChangesRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["TranslationsChangesRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  translations_file_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        component__project__slug: string;
        component__slug: string;
        language__code: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UploadRequest"];
          "text/csv": components["schemas"]["UploadRequest"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["TranslationsFileRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["TranslationsFileRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  translations_file_update: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        component__project__slug: string;
        component__slug: string;
        language__code: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "multipart/form-data": components["schemas"]["UploadRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["UploadRequest"];
        "*/*": components["schemas"]["UploadRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UploadRequest"];
          "text/csv": components["schemas"]["UploadRequest"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["TranslationsFileUpdateErrorResponse400"];
          "text/csv": components["schemas"]["TranslationsFileUpdateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  translations_file_create: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        component__project__slug: string;
        component__slug: string;
        language__code: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "multipart/form-data": components["schemas"]["UploadRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["UploadRequest"];
        "*/*": components["schemas"]["UploadRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UploadRequest"];
          "text/csv": components["schemas"]["UploadRequest"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["TranslationsFileCreateErrorResponse400"];
          "text/csv": components["schemas"]["TranslationsFileCreateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  translations_repository_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        component__project__slug: string;
        component__slug: string;
        language__code: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["RepoRequest"];
          "text/csv": components["schemas"]["RepoRequest"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["TranslationsRepositoryRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["TranslationsRepositoryRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  translations_repository_create: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        component__project__slug: string;
        component__slug: string;
        language__code: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["RepoRequest"];
        "application/x-www-form-urlencoded": components["schemas"]["RepoRequest"];
        "multipart/form-data": components["schemas"]["RepoRequest"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["RepoRequest"];
          "text/csv": components["schemas"]["RepoRequest"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["TranslationsRepositoryCreateErrorResponse400"];
          "text/csv": components["schemas"]["TranslationsRepositoryCreateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  translations_statistics_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json" | "json-flat";
      };
      header?: never;
      path: {
        component__project__slug: string;
        component__slug: string;
        language__code: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Translation"];
          "text/csv": components["schemas"]["Translation"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["TranslationsStatisticsRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["TranslationsStatisticsRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  translations_units_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        component__project__slug: string;
        component__slug: string;
        language__code: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Translation"];
          "text/csv": components["schemas"]["Translation"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["TranslationsUnitsRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["TranslationsUnitsRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  translations_units_create: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        component__project__slug: string;
        component__slug: string;
        language__code: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Translation"];
        "application/x-www-form-urlencoded": components["schemas"]["Translation"];
        "multipart/form-data": components["schemas"]["Translation"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Translation"];
          "text/csv": components["schemas"]["Translation"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["TranslationsUnitsCreateErrorResponse400"];
          "text/csv": components["schemas"]["TranslationsUnitsCreateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  units_list: {
    parameters: {
      query?: {
        format?: "csv" | "json";
        /** @description A page number within the paginated result set. */
        page?: number;
        /** @description Number of results to return per page. */
        page_size?: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedUnitList"];
          "text/csv": components["schemas"]["PaginatedUnitList"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UnitsListErrorResponse400"];
          "text/csv": components["schemas"]["UnitsListErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  units_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Unit"];
          "text/csv": components["schemas"]["Unit"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UnitsRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["UnitsRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  units_update: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UnitWrite"];
        "application/x-www-form-urlencoded": components["schemas"]["UnitWrite"];
        "multipart/form-data": components["schemas"]["UnitWrite"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UnitWrite"];
          "text/csv": components["schemas"]["UnitWrite"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UnitsUpdateErrorResponse400"];
          "text/csv": components["schemas"]["UnitsUpdateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  units_destroy: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UnitsDestroyErrorResponse400"];
          "text/csv": components["schemas"]["UnitsDestroyErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  units_partial_update: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedUnitWrite"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedUnitWrite"];
        "multipart/form-data": components["schemas"]["PatchedUnitWrite"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UnitWrite"];
          "text/csv": components["schemas"]["UnitWrite"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UnitsPartialUpdateErrorResponse400"];
          "text/csv": components["schemas"]["UnitsPartialUpdateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  units_comments_create: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Comment"];
        "application/x-www-form-urlencoded": components["schemas"]["Comment"];
        "multipart/form-data": components["schemas"]["Comment"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UnitWrite"];
          "text/csv": components["schemas"]["UnitWrite"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UnitsCommentsCreateErrorResponse400"];
          "text/csv": components["schemas"]["UnitsCommentsCreateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  units_translations_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UnitWrite"];
          "text/csv": components["schemas"]["UnitWrite"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UnitsTranslationsRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["UnitsTranslationsRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  users_list: {
    parameters: {
      query?: {
        format?: "csv" | "json";
        id?: number;
        /** @description A page number within the paginated result set. */
        page?: number;
        /** @description Number of results to return per page. */
        page_size?: number;
        username?: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedBasicUserList"];
          "text/csv": components["schemas"]["PaginatedBasicUserList"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UsersListErrorResponse400"];
          "text/csv": components["schemas"]["UsersListErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  users_create: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["BasicUser"];
        "application/x-www-form-urlencoded": components["schemas"]["BasicUser"];
        "multipart/form-data": components["schemas"]["BasicUser"];
      };
    };
    responses: {
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["BasicUser"];
          "text/csv": components["schemas"]["BasicUser"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UsersCreateErrorResponse400"];
          "text/csv": components["schemas"]["UsersCreateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  users_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        username: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["BasicUser"];
          "text/csv": components["schemas"]["BasicUser"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UsersRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["UsersRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  users_update: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        username: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["BasicUser"];
        "application/x-www-form-urlencoded": components["schemas"]["BasicUser"];
        "multipart/form-data": components["schemas"]["BasicUser"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["BasicUser"];
          "text/csv": components["schemas"]["BasicUser"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UsersUpdateErrorResponse400"];
          "text/csv": components["schemas"]["UsersUpdateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  users_destroy: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        username: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UsersDestroyErrorResponse400"];
          "text/csv": components["schemas"]["UsersDestroyErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  users_partial_update: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        username: string;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedBasicUser"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedBasicUser"];
        "multipart/form-data": components["schemas"]["PatchedBasicUser"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["BasicUser"];
          "text/csv": components["schemas"]["BasicUser"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UsersPartialUpdateErrorResponse400"];
          "text/csv": components["schemas"]["UsersPartialUpdateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  users_groups_create: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        username: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["BasicUser"];
        "application/x-www-form-urlencoded": components["schemas"]["BasicUser"];
        "multipart/form-data": components["schemas"]["BasicUser"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["BasicUser"];
          "text/csv": components["schemas"]["BasicUser"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UsersGroupsCreateErrorResponse400"];
          "text/csv": components["schemas"]["UsersGroupsCreateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  users_groups_destroy: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        username: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UsersGroupsDestroyErrorResponse400"];
          "text/csv": components["schemas"]["UsersGroupsDestroyErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  users_notifications_list: {
    parameters: {
      query?: {
        format?: "csv" | "json";
        id?: number;
        /** @description A page number within the paginated result set. */
        page?: number;
        /** @description Number of results to return per page. */
        page_size?: number;
        username?: string;
      };
      header?: never;
      path: {
        username: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedNotificationList"];
          "text/csv": components["schemas"]["PaginatedNotificationList"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UsersNotificationsListErrorResponse400"];
          "text/csv": components["schemas"]["UsersNotificationsListErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  users_notifications_create: {
    parameters: {
      query?: {
        format?: "csv" | "json";
        id?: number;
        /** @description A page number within the paginated result set. */
        page?: number;
        /** @description Number of results to return per page. */
        page_size?: number;
        username?: string;
      };
      header?: never;
      path: {
        username: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Notification"];
        "application/x-www-form-urlencoded": components["schemas"]["Notification"];
        "multipart/form-data": components["schemas"]["Notification"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["PaginatedNotificationList"];
          "text/csv": components["schemas"]["PaginatedNotificationList"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UsersNotificationsCreateErrorResponse400"];
          "text/csv": components["schemas"]["UsersNotificationsCreateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  users_notifications_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        subscription_id: number;
        username: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Notification"];
          "text/csv": components["schemas"]["Notification"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UsersNotificationsRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["UsersNotificationsRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  users_notifications_update: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        subscription_id: number;
        username: string;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["Notification"];
        "application/x-www-form-urlencoded": components["schemas"]["Notification"];
        "multipart/form-data": components["schemas"]["Notification"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Notification"];
          "text/csv": components["schemas"]["Notification"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UsersNotificationsUpdateErrorResponse400"];
          "text/csv": components["schemas"]["UsersNotificationsUpdateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  users_notifications_destroy: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        subscription_id: number;
        username: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UsersNotificationsDestroyErrorResponse400"];
          "text/csv": components["schemas"]["UsersNotificationsDestroyErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  users_notifications_partial_update: {
    parameters: {
      query?: {
        format?: "csv" | "json";
      };
      header?: never;
      path: {
        subscription_id: number;
        username: string;
      };
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedNotification"];
        "application/x-www-form-urlencoded": components["schemas"]["PatchedNotification"];
        "multipart/form-data": components["schemas"]["PatchedNotification"];
      };
    };
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["Notification"];
          "text/csv": components["schemas"]["Notification"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UsersNotificationsPartialUpdateErrorResponse400"];
          "text/csv": components["schemas"]["UsersNotificationsPartialUpdateErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
  users_statistics_retrieve: {
    parameters: {
      query?: {
        format?: "csv" | "json" | "json-flat";
      };
      header?: never;
      path: {
        username: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          "X-RateLimit-Limit": components["headers"]["X-RateLimit-Limit"];
          "X-RateLimit-Remaining": components["headers"]["X-RateLimit-Remaining"];
          "X-RateLimit-Reset": components["headers"]["X-RateLimit-Reset"];
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["BasicUser"];
          "text/csv": components["schemas"]["BasicUser"];
        };
      };
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["UsersStatisticsRetrieveErrorResponse400"];
          "text/csv": components["schemas"]["UsersStatisticsRetrieveErrorResponse400"];
        };
      };
      401: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse401"];
          "text/csv": components["schemas"]["ErrorResponse401"];
        };
      };
      403: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse403"];
          "text/csv": components["schemas"]["ErrorResponse403"];
        };
      };
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse404"];
          "text/csv": components["schemas"]["ErrorResponse404"];
        };
      };
      405: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse405"];
          "text/csv": components["schemas"]["ErrorResponse405"];
        };
      };
      406: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse406"];
          "text/csv": components["schemas"]["ErrorResponse406"];
        };
      };
      415: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse415"];
          "text/csv": components["schemas"]["ErrorResponse415"];
        };
      };
      423: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse423"];
          "text/csv": components["schemas"]["ErrorResponse423"];
        };
      };
      429: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse429"];
          "text/csv": components["schemas"]["ErrorResponse429"];
        };
      };
      500: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ErrorResponse500"];
          "text/csv": components["schemas"]["ErrorResponse500"];
        };
      };
    };
  };
}
